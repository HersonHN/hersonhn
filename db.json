{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/assets/js/utils.js","path":"assets/js/utils.js","modified":0,"renderable":0},{"_id":"source/assets/src/engine.js","path":"assets/src/engine.js","modified":0,"renderable":0},{"_id":"source/assets/src/index.js","path":"assets/src/index.js","modified":0,"renderable":0},{"_id":"source/assets/data/truncated_backgrounds.dat","path":"assets/data/truncated_backgrounds.dat","modified":0,"renderable":0},{"_id":"source/assets/css/fontello/LICENSE.txt","path":"assets/css/fontello/LICENSE.txt","modified":0,"renderable":0},{"_id":"source/assets/css/fontello/README.txt","path":"assets/css/fontello/README.txt","modified":0,"renderable":0},{"_id":"source/assets/css/fontello/font/fontello.eot","path":"assets/css/fontello/font/fontello.eot","modified":0,"renderable":0},{"_id":"source/assets/css/fontello/font/fontello.svg","path":"assets/css/fontello/font/fontello.svg","modified":0,"renderable":0},{"_id":"source/assets/css/fontello/font/fontello.ttf","path":"assets/css/fontello/font/fontello.ttf","modified":0,"renderable":0},{"_id":"source/assets/css/fontello/font/fontello.woff","path":"assets/css/fontello/font/fontello.woff","modified":0,"renderable":0},{"_id":"source/assets/css/fontello/font/fontello.woff2","path":"assets/css/fontello/font/fontello.woff2","modified":0,"renderable":0},{"_id":"source/assets/dist/index.js","path":"assets/dist/index.js","modified":0,"renderable":0},{"_id":"source/assets/img/logo-inverse.svg","path":"assets/img/logo-inverse.svg","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"ce94f83000a366daa56bd0ad748f6d496b2daaaa","modified":1538713652923},{"_id":"source/favicon.ico","hash":"c94e7345b589eb345f414d8eae6841ea7d7c8516","modified":1538546835192},{"_id":"source/index.swig","hash":"432aedbd541f65263b59980f89a557a1bfb020de","modified":1538719988140},{"_id":"themes/lugia/.DS_Store","hash":"bed5393643665d4058b6c8733b0df2ea2f65c320","modified":1538710180460},{"_id":"source/_drafts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538710704098},{"_id":"source/_posts/post.md","hash":"dba54801b9e5c4963c624eba8bc33fa84a69e2f8","modified":1505774337000},{"_id":"source/assets/.DS_Store","hash":"414ce38ce745575180716d2eb6f118aaf973dfa0","modified":1538719788819},{"_id":"themes/lugia/layout/.DS_Store","hash":"f911100075bcd37e9c866c3369871910eb92864a","modified":1538710186500},{"_id":"themes/lugia/layout/archive.swig","hash":"0f3be8635c12338d35e90d5a52e83b9320bac3cf","modified":1505774337000},{"_id":"themes/lugia/layout/layout.swig","hash":"720f003890db8d5d9e73182306d7eca333bfa9eb","modified":1538713727177},{"_id":"themes/lugia/layout/page.swig","hash":"0f3be8635c12338d35e90d5a52e83b9320bac3cf","modified":1505774337000},{"_id":"themes/lugia/layout/post.swig","hash":"0f3be8635c12338d35e90d5a52e83b9320bac3cf","modified":1505774337000},{"_id":"source/assets/css/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1538713652921},{"_id":"source/assets/js/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1538712905121},{"_id":"source/assets/js/utils.js","hash":"885e47817ba5aedaa6aac1c295559a7ae03104e2","modified":1538711387465},{"_id":"source/assets/scss/.DS_Store","hash":"a35689b7315bb6391fd52837e5426249d01c7065","modified":1538640629955},{"_id":"source/assets/scss/_global.scss","hash":"2bf00e988a66fff081946b23dae93a1e0a2d8856","modified":1538714306780},{"_id":"source/assets/scss/master.scss","hash":"165ad669db6c158072d575b889f0b90ed0d4b01f","modified":1538714867135},{"_id":"source/assets/src/engine.js","hash":"9c24505622f501983003e736b78cff68907e3229","modified":1538711387466},{"_id":"source/assets/src/index.js","hash":"f344ab8fc71f2b832bbbc12ea16ef28a6dea7418","modified":1538711387466},{"_id":"themes/lugia/layout/partials/google-analitics.swig","hash":"95fe4c1057d3931d25f7c251aec6f1268e22536a","modified":1538711846618},{"_id":"themes/lugia/layout/partials/html-footer.swig","hash":"b477756a80876ee84ecee3c79dca7830c328b807","modified":1538713387626},{"_id":"themes/lugia/layout/partials/html-header.swig","hash":"8eab9625b33d3d916a87d09ad3b4a5ef3dd13c12","modified":1538714778023},{"_id":"themes/lugia/layout/partials/site-footer.swig","hash":"7ecb0a7446b16b1c054d63d461262462ea3cc078","modified":1538711848943},{"_id":"themes/lugia/layout/partials/site-header.swig","hash":"f4523d7e34d0d5dee17f9a12078d19f3f19b6047","modified":1538711036406},{"_id":"source/assets/data/truncated_backgrounds.dat","hash":"669d0f41b66b8990bc65cdc1625d397605ed9095","modified":1538711387457},{"_id":"source/assets/scss/components/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1538710711912},{"_id":"source/assets/css/fontello/LICENSE.txt","hash":"1091097db5b277787ed7475acbb2fe70354e3c95","modified":1538711387450},{"_id":"source/assets/css/fontello/README.txt","hash":"e9507aed2fb80dfeb9a45b5bbfa35b0c8466b825","modified":1538711387450},{"_id":"source/assets/css/fontello/config.json","hash":"d993451a46bf40fbc88a4981c403f0e0d79b7957","modified":1538711387451},{"_id":"source/assets/css/fontello/demo.html","hash":"754d2216de07b1b69e58b9b0fbf9eba060fc1c1c","modified":1538711387453},{"_id":"source/assets/scss/components/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1538641024525},{"_id":"source/assets/scss/components/_icon.scss","hash":"c743a375598c07d67c20d4af27cc590c2bc63a98","modified":1538714269535},{"_id":"source/assets/scss/layout/_footer.scss","hash":"55c0af5fa1d7b23978412981f9106f7160abeb8e","modified":1538714293628},{"_id":"source/assets/scss/layout/_header.scss","hash":"50df965dbd9c67d4c92662ae573d6ca902ddd575","modified":1538714299480},{"_id":"source/assets/scss/layout/_layout.scss","hash":"4ec36f4613508bbe0b70242fcf055879f78cec65","modified":1538718524548},{"_id":"source/assets/scss/sections/index-section.scss","hash":"e0edb67f07e626024d5093bff79a477cb9506076","modified":1538719347782},{"_id":"source/assets/src/rom/background_graphics.js","hash":"7e1df634bb167c4706879416ced716983afa32bd","modified":1538711387466},{"_id":"source/assets/src/rom/background_layer.js","hash":"84750ca2d8c3720a4f0f0479fd985a121d9257c1","modified":1538711387467},{"_id":"source/assets/src/rom/background_palette.js","hash":"4e2560bf6300efe36aef409aa0193eccc9274c80","modified":1538711387467},{"_id":"source/assets/src/rom/battle_background.js","hash":"a9f58c2137c3bfd67d5f1541337d3bfaace6c111","modified":1538711387467},{"_id":"source/assets/src/rom/block.js","hash":"e469bf49de404e6d9497a8e17301eb7330dcd77f","modified":1538711387468},{"_id":"source/assets/src/rom/distorter.js","hash":"4d8057ec67690f3b48b26a03cf4a92b0d11ecf52","modified":1538711387468},{"_id":"source/assets/src/rom/distortion_effect.js","hash":"fb2284054aafffe47358d03056e5e1cdac70a83c","modified":1538711387468},{"_id":"source/assets/src/rom/palette_cycle.js","hash":"2fb688b1f406e3d32f054f002f7f0ddfe45eae44","modified":1538711387469},{"_id":"source/assets/src/rom/rom.js","hash":"28b149f0e897441120cdf36ac21c1e49042b6ab1","modified":1538711387469},{"_id":"source/assets/src/rom/rom_graphics.js","hash":"72ea42356bc39b3fe18adf6a5fbe163d205595bd","modified":1538711387469},{"_id":"source/assets/css/fontello/css/animation.css","hash":"181bbc89ec978981bf0ef8c7239710ae5b3ad6a1","modified":1538711387451},{"_id":"source/assets/css/fontello/css/fontello-codes.css","hash":"d7c56aac1142cd5308fd986fbf529b1f3c5c052d","modified":1538711387452},{"_id":"source/assets/css/fontello/css/fontello-embedded.css","hash":"49fb69e02481fd3d87e9f68e91db046f34ed016b","modified":1538711387452},{"_id":"source/assets/css/fontello/css/fontello-ie7-codes.css","hash":"23de37805f5612a7e346e3636eb6f0aa0b8eb88f","modified":1538711387452},{"_id":"source/assets/css/fontello/css/fontello-ie7.css","hash":"a5311452ff8a2a7ddd6a009c141383b3d4f36098","modified":1538711387453},{"_id":"source/assets/css/fontello/css/fontello.css","hash":"ad628171d0ae07cbe77761a27433a5236231c9d4","modified":1538711387453},{"_id":"source/assets/css/fontello/font/fontello.eot","hash":"d397e1caa9233380f3dc2f3d0d40d6f1f4785c7c","modified":1538711387454},{"_id":"source/assets/css/fontello/font/fontello.svg","hash":"fbdf8b4939fab62e95b2df1b7a546495d0d5182e","modified":1538711387454},{"_id":"source/assets/css/fontello/font/fontello.ttf","hash":"e5a40b8616fbb165c2a39309b4e7747b610c8d26","modified":1538711387454},{"_id":"source/assets/css/fontello/font/fontello.woff","hash":"aeca862dce5915b4168373b3bc43cb135f4c8b25","modified":1538711387455},{"_id":"source/assets/css/fontello/font/fontello.woff2","hash":"d51bfecd09e2a01aa640aeb4cee5cc95f86dd523","modified":1538711387455},{"_id":"source/assets/dist/index.js","hash":"cc21a262f3b8f3fa414db22c4a3c9fed9ea92c9c","modified":1538711387460},{"_id":"source/assets/scss/layout/_site-footer.scss","hash":"c530b10c33c07e669bcfff617c56db17e2975646","modified":1538714839270},{"_id":"source/assets/scss/layout/_site-header.scss","hash":"6edfa7ec99e67bf3af88458b3108c5edc93634b1","modified":1538714853254},{"_id":"public/assets/scss/master.css","hash":"a5d35b6796dca271657db47ad64fdf4022832667","modified":1538717791169},{"_id":"public/assets/css/fontello/config.json","hash":"21a3385d04432566351ce4a6d6dfda56d3d13cfd","modified":1538717791188},{"_id":"public/assets/scss/sections/index-section.css","hash":"e52a744aca72054aabde61704410ca11572e9c12","modified":1538719466874},{"_id":"public/assets/src/rom/background_graphics.js","hash":"7e1df634bb167c4706879416ced716983afa32bd","modified":1538717791190},{"_id":"public/assets/src/rom/background_layer.js","hash":"84750ca2d8c3720a4f0f0479fd985a121d9257c1","modified":1538717791190},{"_id":"public/assets/src/rom/background_palette.js","hash":"4e2560bf6300efe36aef409aa0193eccc9274c80","modified":1538717791190},{"_id":"public/assets/src/rom/battle_background.js","hash":"a9f58c2137c3bfd67d5f1541337d3bfaace6c111","modified":1538717791190},{"_id":"public/assets/src/rom/block.js","hash":"e469bf49de404e6d9497a8e17301eb7330dcd77f","modified":1538717791190},{"_id":"public/assets/src/rom/distorter.js","hash":"4d8057ec67690f3b48b26a03cf4a92b0d11ecf52","modified":1538717791191},{"_id":"public/assets/src/rom/distortion_effect.js","hash":"fb2284054aafffe47358d03056e5e1cdac70a83c","modified":1538717791191},{"_id":"public/assets/src/rom/palette_cycle.js","hash":"0d8f7e2ac85bf64af463de98fce682eff6156854","modified":1538717791191},{"_id":"public/assets/src/rom/rom_graphics.js","hash":"72ea42356bc39b3fe18adf6a5fbe163d205595bd","modified":1538717791191},{"_id":"public/assets/src/rom/rom.js","hash":"182e3c182f3e9150a6fe882b20ff2f9c2b1584d5","modified":1538717791191},{"_id":"public/assets/css/fontello/css/fontello-ie7-codes.css","hash":"23de37805f5612a7e346e3636eb6f0aa0b8eb88f","modified":1538717791192},{"_id":"public/assets/css/fontello/css/animation.css","hash":"181bbc89ec978981bf0ef8c7239710ae5b3ad6a1","modified":1538717791192},{"_id":"public/assets/css/fontello/css/fontello-embedded.css","hash":"49fb69e02481fd3d87e9f68e91db046f34ed016b","modified":1538717791192},{"_id":"public/assets/css/fontello/css/fontello-codes.css","hash":"d7c56aac1142cd5308fd986fbf529b1f3c5c052d","modified":1538717791192},{"_id":"public/assets/css/fontello/css/fontello.css","hash":"ad628171d0ae07cbe77761a27433a5236231c9d4","modified":1538717791192},{"_id":"public/assets/css/fontello/css/fontello-ie7.css","hash":"a5311452ff8a2a7ddd6a009c141383b3d4f36098","modified":1538717791193},{"_id":"public/index.html","hash":"0fceec6e322f944f23f63dd22a666937f38991a8","modified":1538717791218},{"_id":"public/assets/css/fontello/demo.html","hash":"c4fff23e9af5887d21a59288c5b2de3c3222facc","modified":1538717791218},{"_id":"public/2017/09/14/post/index.html","hash":"5d56ee9360c5195696b53f254945db775a496f57","modified":1538717791218},{"_id":"public/archives/index.html","hash":"df2649027798c1fc615b02e133376abf63c23877","modified":1538717791218},{"_id":"public/archives/2017/index.html","hash":"df2649027798c1fc615b02e133376abf63c23877","modified":1538717791218},{"_id":"public/archives/2017/09/index.html","hash":"df2649027798c1fc615b02e133376abf63c23877","modified":1538717791219},{"_id":"public/favicon.ico","hash":"c94e7345b589eb345f414d8eae6841ea7d7c8516","modified":1538717791246},{"_id":"public/assets/js/utils.js","hash":"885e47817ba5aedaa6aac1c295559a7ae03104e2","modified":1538717791246},{"_id":"public/assets/src/engine.js","hash":"9c24505622f501983003e736b78cff68907e3229","modified":1538717791246},{"_id":"public/assets/src/index.js","hash":"f344ab8fc71f2b832bbbc12ea16ef28a6dea7418","modified":1538717791247},{"_id":"public/assets/css/fontello/LICENSE.txt","hash":"1091097db5b277787ed7475acbb2fe70354e3c95","modified":1538717791247},{"_id":"public/assets/css/fontello/README.txt","hash":"e9507aed2fb80dfeb9a45b5bbfa35b0c8466b825","modified":1538717791247},{"_id":"public/assets/css/fontello/font/fontello.eot","hash":"d397e1caa9233380f3dc2f3d0d40d6f1f4785c7c","modified":1538717791248},{"_id":"public/assets/css/fontello/font/fontello.svg","hash":"fbdf8b4939fab62e95b2df1b7a546495d0d5182e","modified":1538717791248},{"_id":"public/assets/css/fontello/font/fontello.ttf","hash":"e5a40b8616fbb165c2a39309b4e7747b610c8d26","modified":1538717791248},{"_id":"public/assets/css/fontello/font/fontello.woff","hash":"aeca862dce5915b4168373b3bc43cb135f4c8b25","modified":1538717791248},{"_id":"public/assets/css/fontello/font/fontello.woff2","hash":"d51bfecd09e2a01aa640aeb4cee5cc95f86dd523","modified":1538717791249},{"_id":"public/assets/data/truncated_backgrounds.dat","hash":"669d0f41b66b8990bc65cdc1625d397605ed9095","modified":1538717791292},{"_id":"public/assets/dist/index.js","hash":"cc21a262f3b8f3fa414db22c4a3c9fed9ea92c9c","modified":1538717791432},{"_id":"source/assets/img/logo-inverse.swig","hash":"89ebdbec8dba8c8846949df4c6db4306c68f1aa2","modified":1538719746260},{"_id":"source/assets/img/logo-inverse.svg","hash":"89ebdbec8dba8c8846949df4c6db4306c68f1aa2","modified":1538719833975}],"Category":[],"Data":[],"Page":[{"title":"Home","name":"index","date":"2018-10-05T00:00:00.000Z","jsFiles":["/assets/js/utils.js","/assets/dist/index.js"],"cssFiles":["/assets/scss/sections/index-section.css"],"_content":"\n{% block content %}\n\n  <main class=\"index-section\">\n    <section class=\"logo-container\">\n      <canvas></canvas>\n      <svg class=\"logo\" version=\"1.1\" id=\"logo_inverse\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n        y=\"0px\" viewBox=\"0 0 256 224\" style=\"enable-background:new 0 0 256 224;\" width=\"100%\" height=\"100%\" xml:space=\"preserve\">\n      <path style=\"fill: white\" d=\"M0,0v224h256V0H0z M198.9,89.6L184,134.4l-7.5,22.4l-14.9,44.8h-22.4h-22.4l0,0l14.9-44.8l7.5-22.4l0,0l0,0\n        h-22.4h-14.9l-7.5,22.4H49.6l7.5-22.4L72,89.6l7.5-22.4l14.9-44.8h22.4h22.4l0,0l0,0l-14.9,44.8l-7.5,22.4l0,0l0,0h22.4h14.9\n        l7.5-22.4h44.8L198.9,89.6z\"/>\n      </svg>\n    </section>\n\n    <p class=\"center\"><a target=\"_blank\" href=\"https://news.herson.hn/\">RSS Reader</a></p>\n  </main>\n\n{% endblock %}\n","source":"index.swig","raw":"---\ntitle: Home\nname: index\ndate: 2018-10-4 18:00:00\njsFiles:\n  - /assets/js/utils.js\n  - /assets/dist/index.js\ncssFiles:\n  - /assets/scss/sections/index-section.css\n---\n\n{% block content %}\n\n  <main class=\"index-section\">\n    <section class=\"logo-container\">\n      <canvas></canvas>\n      <svg class=\"logo\" version=\"1.1\" id=\"logo_inverse\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n        y=\"0px\" viewBox=\"0 0 256 224\" style=\"enable-background:new 0 0 256 224;\" width=\"100%\" height=\"100%\" xml:space=\"preserve\">\n      <path style=\"fill: white\" d=\"M0,0v224h256V0H0z M198.9,89.6L184,134.4l-7.5,22.4l-14.9,44.8h-22.4h-22.4l0,0l14.9-44.8l7.5-22.4l0,0l0,0\n        h-22.4h-14.9l-7.5,22.4H49.6l7.5-22.4L72,89.6l7.5-22.4l14.9-44.8h22.4h22.4l0,0l0,0l-14.9,44.8l-7.5,22.4l0,0l0,0h22.4h14.9\n        l7.5-22.4h44.8L198.9,89.6z\"/>\n      </svg>\n    </section>\n\n    <p class=\"center\"><a target=\"_blank\" href=\"https://news.herson.hn/\">RSS Reader</a></p>\n  </main>\n\n{% endblock %}\n","updated":"2018-10-05T07:02:56.223Z","path":"index.html","_id":"cjmvj0a3f0000vh9ke35l5g5e","comments":1,"layout":"page","content":"\n\n\n  <main class=\"index-section\">\n    <section class=\"logo-container\">\n      <canvas></canvas>\n      <svg class=\"logo\" version=\"1.1\" id=\"logo_inverse\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewbox=\"0 0 256 224\" style=\"enable-background:new 0 0 256 224;\" width=\"100%\" height=\"100%\" xml:space=\"preserve\">\n      <path style=\"fill: white\" d=\"M0,0v224h256V0H0z M198.9,89.6L184,134.4l-7.5,22.4l-14.9,44.8h-22.4h-22.4l0,0l14.9-44.8l7.5-22.4l0,0l0,0\n        h-22.4h-14.9l-7.5,22.4H49.6l7.5-22.4L72,89.6l7.5-22.4l14.9-44.8h22.4h22.4l0,0l0,0l-14.9,44.8l-7.5,22.4l0,0l0,0h22.4h14.9\n        l7.5-22.4h44.8L198.9,89.6z\"/>\n      </svg>\n    </section>\n\n    <p class=\"center\"><a target=\"_blank\" href=\"https://news.herson.hn/\">RSS Reader</a></p>\n  </main>\n\n\n","site":{"data":{}},"excerpt":"","more":"\n\n\n  <main class=\"index-section\">\n    <section class=\"logo-container\">\n      <canvas></canvas>\n      <svg class=\"logo\" version=\"1.1\" id=\"logo_inverse\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewbox=\"0 0 256 224\" style=\"enable-background:new 0 0 256 224;\" width=\"100%\" height=\"100%\" xml:space=\"preserve\">\n      <path style=\"fill: white\" d=\"M0,0v224h256V0H0z M198.9,89.6L184,134.4l-7.5,22.4l-14.9,44.8h-22.4h-22.4l0,0l14.9-44.8l7.5-22.4l0,0l0,0\n        h-22.4h-14.9l-7.5,22.4H49.6l7.5-22.4L72,89.6l7.5-22.4l14.9-44.8h22.4h22.4l0,0l0,0l-14.9,44.8l-7.5,22.4l0,0l0,0h22.4h14.9\n        l7.5-22.4h44.8L198.9,89.6z\"/>\n      </svg>\n    </section>\n\n    <p class=\"center\"><a target=\"_blank\" href=\"https://news.herson.hn/\">RSS Reader</a></p>\n  </main>\n\n\n"},{"_content":"\n@import \"global\";\n@import \"layout/layout\";\n@import \"layout/site-header\";\n@import \"layout/site-footer\";\n@import \"components/icon\";\n","source":"assets/scss/master.scss","raw":"\n@import \"global\";\n@import \"layout/layout\";\n@import \"layout/site-header\";\n@import \"layout/site-footer\";\n@import \"components/icon\";\n","date":"2018-10-05T04:47:47.135Z","updated":"2018-10-05T04:47:47.135Z","path":"assets/scss/master.css","layout":"false","_id":"cjmvj0a520002vh9kqkcqsqig","title":"","comments":1,"content":"a{color:#333;transition:color 0.2s ease}a:hover{color:crimson}.center{text-align:center}p{font-family:'Verdana', sans-serif;line-height:1.5em}hr{border:none;border-bottom:#ddd 1px solid;margin:2rem 0}*{box-sizing:border-box}html,body{padding:0;margin:0;height:100%;color:crimson}#page-content{display:flex;flex-flow:column nowrap;background:white;color:#333;min-height:100%}main{flex:1 1}.site-header{border-top:5px solid crimson}.site-footer{background:#eee;text-align:center}.site-footer nav{padding:2em .5em}.icon i{width:40px;height:40px;line-height:40px;font-size:1.2rem;border-radius:100%;display:inline-block;text-align:center;transition:all 0.3s ease}.icon:hover{color:inherit}.icon:hover i{background:crimson;color:white}\n","site":{"data":{}},"excerpt":"","more":"a{color:#333;transition:color 0.2s ease}a:hover{color:crimson}.center{text-align:center}p{font-family:'Verdana', sans-serif;line-height:1.5em}hr{border:none;border-bottom:#ddd 1px solid;margin:2rem 0}*{box-sizing:border-box}html,body{padding:0;margin:0;height:100%;color:crimson}#page-content{display:flex;flex-flow:column nowrap;background:white;color:#333;min-height:100%}main{flex:1 1}.site-header{border-top:5px solid crimson}.site-footer{background:#eee;text-align:center}.site-footer nav{padding:2em .5em}.icon i{width:40px;height:40px;line-height:40px;font-size:1.2rem;border-radius:100%;display:inline-block;text-align:center;transition:all 0.3s ease}.icon:hover{color:inherit}.icon:hover i{background:crimson;color:white}\n"},{"_content":"{\n  \"name\": \"\",\n  \"css_prefix_text\": \"icon-\",\n  \"css_use_suffix\": false,\n  \"hinting\": true,\n  \"units_per_em\": 1000,\n  \"ascent\": 850,\n  \"glyphs\": [\n    {\n      \"uid\": \"4c1ef492f1d2c39a2250ae457cee2a6e\",\n      \"css\": \"instagram\",\n      \"code\": 61805,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"e7cb72a17f3b21e3576f35c3f0a7639b\",\n      \"css\": \"git\",\n      \"code\": 61907,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"8e04c98c8f5ca0a035776e3001ad2638\",\n      \"css\": \"facebook\",\n      \"code\": 61594,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"fb4794d89b77ab712ad56c0dc4c76c6b\",\n      \"css\": \"spotify\",\n      \"code\": 61884,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"e9107949dd6c9e8ab2b29ae07156e38c\",\n      \"css\": \"linkedin\",\n      \"code\": 61665,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"627abcdb627cb1789e009c08e2678ef9\",\n      \"css\": \"twitter\",\n      \"code\": 61593,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"43fcf807461234935e65261328e1dff6\",\n      \"css\": \"tumblr\",\n      \"code\": 61811,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"5dcf6620378353c5b0089b12d961fedf\",\n      \"css\": \"lastfm\",\n      \"code\": 61954,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"12f4ece88e46abd864e40b35e05b11cd\",\n      \"css\": \"ok\",\n      \"code\": 59392,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"5211af474d3a9848f67f945e2ccaf143\",\n      \"css\": \"cancel\",\n      \"code\": 59393,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"ccddff8e8670dcd130e3cb55fdfc2fd0\",\n      \"css\": \"down-open\",\n      \"code\": 59394,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"d870630ff8f81e6de3958ecaeac532f2\",\n      \"css\": \"left-open\",\n      \"code\": 59395,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"399ef63b1e23ab1b761dfbb5591fa4da\",\n      \"css\": \"right-open\",\n      \"code\": 59396,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"fe6697b391355dec12f3d86d6d490397\",\n      \"css\": \"up-open\",\n      \"code\": 59397,\n      \"src\": \"fontawesome\"\n    }\n  ]\n}","source":"assets/css/fontello/config.json","raw":"{\n  \"name\": \"\",\n  \"css_prefix_text\": \"icon-\",\n  \"css_use_suffix\": false,\n  \"hinting\": true,\n  \"units_per_em\": 1000,\n  \"ascent\": 850,\n  \"glyphs\": [\n    {\n      \"uid\": \"4c1ef492f1d2c39a2250ae457cee2a6e\",\n      \"css\": \"instagram\",\n      \"code\": 61805,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"e7cb72a17f3b21e3576f35c3f0a7639b\",\n      \"css\": \"git\",\n      \"code\": 61907,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"8e04c98c8f5ca0a035776e3001ad2638\",\n      \"css\": \"facebook\",\n      \"code\": 61594,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"fb4794d89b77ab712ad56c0dc4c76c6b\",\n      \"css\": \"spotify\",\n      \"code\": 61884,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"e9107949dd6c9e8ab2b29ae07156e38c\",\n      \"css\": \"linkedin\",\n      \"code\": 61665,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"627abcdb627cb1789e009c08e2678ef9\",\n      \"css\": \"twitter\",\n      \"code\": 61593,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"43fcf807461234935e65261328e1dff6\",\n      \"css\": \"tumblr\",\n      \"code\": 61811,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"5dcf6620378353c5b0089b12d961fedf\",\n      \"css\": \"lastfm\",\n      \"code\": 61954,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"12f4ece88e46abd864e40b35e05b11cd\",\n      \"css\": \"ok\",\n      \"code\": 59392,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"5211af474d3a9848f67f945e2ccaf143\",\n      \"css\": \"cancel\",\n      \"code\": 59393,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"ccddff8e8670dcd130e3cb55fdfc2fd0\",\n      \"css\": \"down-open\",\n      \"code\": 59394,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"d870630ff8f81e6de3958ecaeac532f2\",\n      \"css\": \"left-open\",\n      \"code\": 59395,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"399ef63b1e23ab1b761dfbb5591fa4da\",\n      \"css\": \"right-open\",\n      \"code\": 59396,\n      \"src\": \"fontawesome\"\n    },\n    {\n      \"uid\": \"fe6697b391355dec12f3d86d6d490397\",\n      \"css\": \"up-open\",\n      \"code\": 59397,\n      \"src\": \"fontawesome\"\n    }\n  ]\n}","date":"2018-10-05T03:49:47.451Z","updated":"2018-10-05T03:49:47.451Z","path":"assets/css/fontello/config.json","layout":"false","title":"","comments":1,"_id":"cjmvj0a5u0003vh9kaij8t7sv","content":"{\"name\":\"\",\"css_prefix_text\":\"icon-\",\"css_use_suffix\":false,\"hinting\":true,\"units_per_em\":1000,\"ascent\":850,\"glyphs\":[{\"uid\":\"4c1ef492f1d2c39a2250ae457cee2a6e\",\"css\":\"instagram\",\"code\":61805,\"src\":\"fontawesome\"},{\"uid\":\"e7cb72a17f3b21e3576f35c3f0a7639b\",\"css\":\"git\",\"code\":61907,\"src\":\"fontawesome\"},{\"uid\":\"8e04c98c8f5ca0a035776e3001ad2638\",\"css\":\"facebook\",\"code\":61594,\"src\":\"fontawesome\"},{\"uid\":\"fb4794d89b77ab712ad56c0dc4c76c6b\",\"css\":\"spotify\",\"code\":61884,\"src\":\"fontawesome\"},{\"uid\":\"e9107949dd6c9e8ab2b29ae07156e38c\",\"css\":\"linkedin\",\"code\":61665,\"src\":\"fontawesome\"},{\"uid\":\"627abcdb627cb1789e009c08e2678ef9\",\"css\":\"twitter\",\"code\":61593,\"src\":\"fontawesome\"},{\"uid\":\"43fcf807461234935e65261328e1dff6\",\"css\":\"tumblr\",\"code\":61811,\"src\":\"fontawesome\"},{\"uid\":\"5dcf6620378353c5b0089b12d961fedf\",\"css\":\"lastfm\",\"code\":61954,\"src\":\"fontawesome\"},{\"uid\":\"12f4ece88e46abd864e40b35e05b11cd\",\"css\":\"ok\",\"code\":59392,\"src\":\"fontawesome\"},{\"uid\":\"5211af474d3a9848f67f945e2ccaf143\",\"css\":\"cancel\",\"code\":59393,\"src\":\"fontawesome\"},{\"uid\":\"ccddff8e8670dcd130e3cb55fdfc2fd0\",\"css\":\"down-open\",\"code\":59394,\"src\":\"fontawesome\"},{\"uid\":\"d870630ff8f81e6de3958ecaeac532f2\",\"css\":\"left-open\",\"code\":59395,\"src\":\"fontawesome\"},{\"uid\":\"399ef63b1e23ab1b761dfbb5591fa4da\",\"css\":\"right-open\",\"code\":59396,\"src\":\"fontawesome\"},{\"uid\":\"fe6697b391355dec12f3d86d6d490397\",\"css\":\"up-open\",\"code\":59397,\"src\":\"fontawesome\"}]}","site":{"data":{}},"excerpt":"","more":"{\"name\":\"\",\"css_prefix_text\":\"icon-\",\"css_use_suffix\":false,\"hinting\":true,\"units_per_em\":1000,\"ascent\":850,\"glyphs\":[{\"uid\":\"4c1ef492f1d2c39a2250ae457cee2a6e\",\"css\":\"instagram\",\"code\":61805,\"src\":\"fontawesome\"},{\"uid\":\"e7cb72a17f3b21e3576f35c3f0a7639b\",\"css\":\"git\",\"code\":61907,\"src\":\"fontawesome\"},{\"uid\":\"8e04c98c8f5ca0a035776e3001ad2638\",\"css\":\"facebook\",\"code\":61594,\"src\":\"fontawesome\"},{\"uid\":\"fb4794d89b77ab712ad56c0dc4c76c6b\",\"css\":\"spotify\",\"code\":61884,\"src\":\"fontawesome\"},{\"uid\":\"e9107949dd6c9e8ab2b29ae07156e38c\",\"css\":\"linkedin\",\"code\":61665,\"src\":\"fontawesome\"},{\"uid\":\"627abcdb627cb1789e009c08e2678ef9\",\"css\":\"twitter\",\"code\":61593,\"src\":\"fontawesome\"},{\"uid\":\"43fcf807461234935e65261328e1dff6\",\"css\":\"tumblr\",\"code\":61811,\"src\":\"fontawesome\"},{\"uid\":\"5dcf6620378353c5b0089b12d961fedf\",\"css\":\"lastfm\",\"code\":61954,\"src\":\"fontawesome\"},{\"uid\":\"12f4ece88e46abd864e40b35e05b11cd\",\"css\":\"ok\",\"code\":59392,\"src\":\"fontawesome\"},{\"uid\":\"5211af474d3a9848f67f945e2ccaf143\",\"css\":\"cancel\",\"code\":59393,\"src\":\"fontawesome\"},{\"uid\":\"ccddff8e8670dcd130e3cb55fdfc2fd0\",\"css\":\"down-open\",\"code\":59394,\"src\":\"fontawesome\"},{\"uid\":\"d870630ff8f81e6de3958ecaeac532f2\",\"css\":\"left-open\",\"code\":59395,\"src\":\"fontawesome\"},{\"uid\":\"399ef63b1e23ab1b761dfbb5591fa4da\",\"css\":\"right-open\",\"code\":59396,\"src\":\"fontawesome\"},{\"uid\":\"fe6697b391355dec12f3d86d6d490397\",\"css\":\"up-open\",\"code\":59397,\"src\":\"fontawesome\"}]}"},{"_content":"<!DOCTYPE html>\n<html>\n  <head><!--[if lt IE 9]><script language=\"javascript\" type=\"text/javascript\" src=\"//html5shim.googlecode.com/svn/trunk/html5.js\"></script><![endif]-->\n    <meta charset=\"UTF-8\"><style>/*\n * Bootstrap v2.2.1\n *\n * Copyright 2012 Twitter, Inc\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\n */\n.clearfix {\n  *zoom: 1;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.clearfix:after {\n  clear: both;\n}\nhtml {\n  font-size: 100%;\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\na:focus {\n  outline: thin dotted #333;\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\na:hover,\na:active {\n  outline: 0;\n}\nbutton,\ninput,\nselect,\ntextarea {\n  margin: 0;\n  font-size: 100%;\n  vertical-align: middle;\n}\nbutton,\ninput {\n  *overflow: visible;\n  line-height: normal;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\nbody {\n  margin: 0;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 20px;\n  color: #333;\n  background-color: #fff;\n}\na {\n  color: #08c;\n  text-decoration: none;\n}\na:hover {\n  color: #005580;\n  text-decoration: underline;\n}\n.row {\n  margin-left: -20px;\n  *zoom: 1;\n}\n.row:before,\n.row:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.row:after {\n  clear: both;\n}\n[class*=\"span\"] {\n  float: left;\n  min-height: 1px;\n  margin-left: 20px;\n}\n.container,\n.navbar-static-top .container,\n.navbar-fixed-top .container,\n.navbar-fixed-bottom .container {\n  width: 940px;\n}\n.span12 {\n  width: 940px;\n}\n.span11 {\n  width: 860px;\n}\n.span10 {\n  width: 780px;\n}\n.span9 {\n  width: 700px;\n}\n.span8 {\n  width: 620px;\n}\n.span7 {\n  width: 540px;\n}\n.span6 {\n  width: 460px;\n}\n.span5 {\n  width: 380px;\n}\n.span4 {\n  width: 300px;\n}\n.span3 {\n  width: 220px;\n}\n.span2 {\n  width: 140px;\n}\n.span1 {\n  width: 60px;\n}\n[class*=\"span\"].pull-right,\n.row-fluid [class*=\"span\"].pull-right {\n  float: right;\n}\n.container {\n  margin-right: auto;\n  margin-left: auto;\n  *zoom: 1;\n}\n.container:before,\n.container:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.container:after {\n  clear: both;\n}\np {\n  margin: 0 0 10px;\n}\n.lead {\n  margin-bottom: 20px;\n  font-size: 21px;\n  font-weight: 200;\n  line-height: 30px;\n}\nsmall {\n  font-size: 85%;\n}\nh1 {\n  margin: 10px 0;\n  font-family: inherit;\n  font-weight: bold;\n  line-height: 20px;\n  color: inherit;\n  text-rendering: optimizelegibility;\n}\nh1 small {\n  font-weight: normal;\n  line-height: 1;\n  color: #999;\n}\nh1 {\n  line-height: 40px;\n}\nh1 {\n  font-size: 38.5px;\n}\nh1 small {\n  font-size: 24.5px;\n}\nbody {\n  margin-top: 90px;\n}\n.header {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  margin-left: -480px;\n  background-color: #fff;\n  border-bottom: 1px solid #ddd;\n  padding-top: 10px;\n  z-index: 10;\n}\n.footer {\n  color: #ddd;\n  font-size: 12px;\n  text-align: center;\n  margin-top: 20px;\n}\n.footer a {\n  color: #ccc;\n  text-decoration: underline;\n}\n.the-icons {\n  font-size: 14px;\n  line-height: 24px;\n}\n.switch {\n  position: absolute;\n  right: 0;\n  bottom: 10px;\n  color: #666;\n}\n.switch input {\n  margin-right: 0.3em;\n}\n.codesOn .i-name {\n  display: none;\n}\n.codesOn .i-code {\n  display: inline;\n}\n.i-code {\n  display: none;\n}\n@font-face {\n      font-family: 'fontello';\n      src: url('./font/fontello.eot?46872038');\n      src: url('./font/fontello.eot?46872038#iefix') format('embedded-opentype'),\n           url('./font/fontello.woff?46872038') format('woff'),\n           url('./font/fontello.ttf?46872038') format('truetype'),\n           url('./font/fontello.svg?46872038#fontello') format('svg');\n      font-weight: normal;\n      font-style: normal;\n    }\n     \n     \n    .demo-icon\n    {\n      font-family: \"fontello\";\n      font-style: normal;\n      font-weight: normal;\n      speak: none;\n     \n      display: inline-block;\n      text-decoration: inherit;\n      width: 1em;\n      margin-right: .2em;\n      text-align: center;\n      /* opacity: .8; */\n     \n      /* For safety - reset parent styles, that can break glyph codes*/\n      font-variant: normal;\n      text-transform: none;\n     \n      /* fix buttons height, for twitter bootstrap */\n      line-height: 1em;\n     \n      /* Animation center compensation - margins should be symmetric */\n      /* remove if not needed */\n      margin-left: .2em;\n     \n      /* You can be more comfortable with increased icons size */\n      /* font-size: 120%; */\n     \n      /* Font smoothing. That was taken from TWBS */\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n     \n      /* Uncomment for 3D effect */\n      /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n    }\n     </style>\n    <link rel=\"stylesheet\" href=\"css/animation.css\"><!--[if IE 7]><link rel=\"stylesheet\" href=\"css/\" + font.fontname + \"-ie7.css\"><![endif]-->\n    <script>\n      function toggleCodes(on) {\n        var obj = document.getElementById('icons');\n      \n        if (on) {\n          obj.className += ' codesOn';\n        } else {\n          obj.className = obj.className.replace(' codesOn', '');\n        }\n      }\n      \n    </script>\n  </head>\n  <body>\n    <div class=\"container header\">\n      <h1>fontello <small>font demo</small></h1>\n      <label class=\"switch\">\n        <input type=\"checkbox\" onclick=\"toggleCodes(this.checked)\">show codes\n      </label>\n    </div>\n    <div class=\"container\" id=\"icons\">\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xe800\"><i class=\"demo-icon icon-ok\">&#xe800;</i> <span class=\"i-name\">icon-ok</span><span class=\"i-code\">0xe800</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe801\"><i class=\"demo-icon icon-cancel\">&#xe801;</i> <span class=\"i-name\">icon-cancel</span><span class=\"i-code\">0xe801</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe802\"><i class=\"demo-icon icon-down-open\">&#xe802;</i> <span class=\"i-name\">icon-down-open</span><span class=\"i-code\">0xe802</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe803\"><i class=\"demo-icon icon-left-open\">&#xe803;</i> <span class=\"i-name\">icon-left-open</span><span class=\"i-code\">0xe803</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xe804\"><i class=\"demo-icon icon-right-open\">&#xe804;</i> <span class=\"i-name\">icon-right-open</span><span class=\"i-code\">0xe804</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe805\"><i class=\"demo-icon icon-up-open\">&#xe805;</i> <span class=\"i-name\">icon-up-open</span><span class=\"i-code\">0xe805</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf099\"><i class=\"demo-icon icon-twitter\">&#xf099;</i> <span class=\"i-name\">icon-twitter</span><span class=\"i-code\">0xf099</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf09a\"><i class=\"demo-icon icon-facebook\">&#xf09a;</i> <span class=\"i-name\">icon-facebook</span><span class=\"i-code\">0xf09a</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xf0e1\"><i class=\"demo-icon icon-linkedin\">&#xf0e1;</i> <span class=\"i-name\">icon-linkedin</span><span class=\"i-code\">0xf0e1</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf16d\"><i class=\"demo-icon icon-instagram\">&#xf16d;</i> <span class=\"i-name\">icon-instagram</span><span class=\"i-code\">0xf16d</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf173\"><i class=\"demo-icon icon-tumblr\">&#xf173;</i> <span class=\"i-name\">icon-tumblr</span><span class=\"i-code\">0xf173</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf1bc\"><i class=\"demo-icon icon-spotify\">&#xf1bc;</i> <span class=\"i-name\">icon-spotify</span><span class=\"i-code\">0xf1bc</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xf1d3\"><i class=\"demo-icon icon-git\">&#xf1d3;</i> <span class=\"i-name\">icon-git</span><span class=\"i-code\">0xf1d3</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf202\"><i class=\"demo-icon icon-lastfm\">&#xf202;</i> <span class=\"i-name\">icon-lastfm</span><span class=\"i-code\">0xf202</span></div>\n      </div>\n    </div>\n    <div class=\"container footer\">Generated by <a href=\"http://fontello.com\">fontello.com</a></div>\n  </body>\n</html>","source":"assets/css/fontello/demo.html","raw":"<!DOCTYPE html>\n<html>\n  <head><!--[if lt IE 9]><script language=\"javascript\" type=\"text/javascript\" src=\"//html5shim.googlecode.com/svn/trunk/html5.js\"></script><![endif]-->\n    <meta charset=\"UTF-8\"><style>/*\n * Bootstrap v2.2.1\n *\n * Copyright 2012 Twitter, Inc\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\n */\n.clearfix {\n  *zoom: 1;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.clearfix:after {\n  clear: both;\n}\nhtml {\n  font-size: 100%;\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\na:focus {\n  outline: thin dotted #333;\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\na:hover,\na:active {\n  outline: 0;\n}\nbutton,\ninput,\nselect,\ntextarea {\n  margin: 0;\n  font-size: 100%;\n  vertical-align: middle;\n}\nbutton,\ninput {\n  *overflow: visible;\n  line-height: normal;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\nbody {\n  margin: 0;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 20px;\n  color: #333;\n  background-color: #fff;\n}\na {\n  color: #08c;\n  text-decoration: none;\n}\na:hover {\n  color: #005580;\n  text-decoration: underline;\n}\n.row {\n  margin-left: -20px;\n  *zoom: 1;\n}\n.row:before,\n.row:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.row:after {\n  clear: both;\n}\n[class*=\"span\"] {\n  float: left;\n  min-height: 1px;\n  margin-left: 20px;\n}\n.container,\n.navbar-static-top .container,\n.navbar-fixed-top .container,\n.navbar-fixed-bottom .container {\n  width: 940px;\n}\n.span12 {\n  width: 940px;\n}\n.span11 {\n  width: 860px;\n}\n.span10 {\n  width: 780px;\n}\n.span9 {\n  width: 700px;\n}\n.span8 {\n  width: 620px;\n}\n.span7 {\n  width: 540px;\n}\n.span6 {\n  width: 460px;\n}\n.span5 {\n  width: 380px;\n}\n.span4 {\n  width: 300px;\n}\n.span3 {\n  width: 220px;\n}\n.span2 {\n  width: 140px;\n}\n.span1 {\n  width: 60px;\n}\n[class*=\"span\"].pull-right,\n.row-fluid [class*=\"span\"].pull-right {\n  float: right;\n}\n.container {\n  margin-right: auto;\n  margin-left: auto;\n  *zoom: 1;\n}\n.container:before,\n.container:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.container:after {\n  clear: both;\n}\np {\n  margin: 0 0 10px;\n}\n.lead {\n  margin-bottom: 20px;\n  font-size: 21px;\n  font-weight: 200;\n  line-height: 30px;\n}\nsmall {\n  font-size: 85%;\n}\nh1 {\n  margin: 10px 0;\n  font-family: inherit;\n  font-weight: bold;\n  line-height: 20px;\n  color: inherit;\n  text-rendering: optimizelegibility;\n}\nh1 small {\n  font-weight: normal;\n  line-height: 1;\n  color: #999;\n}\nh1 {\n  line-height: 40px;\n}\nh1 {\n  font-size: 38.5px;\n}\nh1 small {\n  font-size: 24.5px;\n}\nbody {\n  margin-top: 90px;\n}\n.header {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  margin-left: -480px;\n  background-color: #fff;\n  border-bottom: 1px solid #ddd;\n  padding-top: 10px;\n  z-index: 10;\n}\n.footer {\n  color: #ddd;\n  font-size: 12px;\n  text-align: center;\n  margin-top: 20px;\n}\n.footer a {\n  color: #ccc;\n  text-decoration: underline;\n}\n.the-icons {\n  font-size: 14px;\n  line-height: 24px;\n}\n.switch {\n  position: absolute;\n  right: 0;\n  bottom: 10px;\n  color: #666;\n}\n.switch input {\n  margin-right: 0.3em;\n}\n.codesOn .i-name {\n  display: none;\n}\n.codesOn .i-code {\n  display: inline;\n}\n.i-code {\n  display: none;\n}\n@font-face {\n      font-family: 'fontello';\n      src: url('./font/fontello.eot?46872038');\n      src: url('./font/fontello.eot?46872038#iefix') format('embedded-opentype'),\n           url('./font/fontello.woff?46872038') format('woff'),\n           url('./font/fontello.ttf?46872038') format('truetype'),\n           url('./font/fontello.svg?46872038#fontello') format('svg');\n      font-weight: normal;\n      font-style: normal;\n    }\n     \n     \n    .demo-icon\n    {\n      font-family: \"fontello\";\n      font-style: normal;\n      font-weight: normal;\n      speak: none;\n     \n      display: inline-block;\n      text-decoration: inherit;\n      width: 1em;\n      margin-right: .2em;\n      text-align: center;\n      /* opacity: .8; */\n     \n      /* For safety - reset parent styles, that can break glyph codes*/\n      font-variant: normal;\n      text-transform: none;\n     \n      /* fix buttons height, for twitter bootstrap */\n      line-height: 1em;\n     \n      /* Animation center compensation - margins should be symmetric */\n      /* remove if not needed */\n      margin-left: .2em;\n     \n      /* You can be more comfortable with increased icons size */\n      /* font-size: 120%; */\n     \n      /* Font smoothing. That was taken from TWBS */\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n     \n      /* Uncomment for 3D effect */\n      /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n    }\n     </style>\n    <link rel=\"stylesheet\" href=\"css/animation.css\"><!--[if IE 7]><link rel=\"stylesheet\" href=\"css/\" + font.fontname + \"-ie7.css\"><![endif]-->\n    <script>\n      function toggleCodes(on) {\n        var obj = document.getElementById('icons');\n      \n        if (on) {\n          obj.className += ' codesOn';\n        } else {\n          obj.className = obj.className.replace(' codesOn', '');\n        }\n      }\n      \n    </script>\n  </head>\n  <body>\n    <div class=\"container header\">\n      <h1>fontello <small>font demo</small></h1>\n      <label class=\"switch\">\n        <input type=\"checkbox\" onclick=\"toggleCodes(this.checked)\">show codes\n      </label>\n    </div>\n    <div class=\"container\" id=\"icons\">\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xe800\"><i class=\"demo-icon icon-ok\">&#xe800;</i> <span class=\"i-name\">icon-ok</span><span class=\"i-code\">0xe800</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe801\"><i class=\"demo-icon icon-cancel\">&#xe801;</i> <span class=\"i-name\">icon-cancel</span><span class=\"i-code\">0xe801</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe802\"><i class=\"demo-icon icon-down-open\">&#xe802;</i> <span class=\"i-name\">icon-down-open</span><span class=\"i-code\">0xe802</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe803\"><i class=\"demo-icon icon-left-open\">&#xe803;</i> <span class=\"i-name\">icon-left-open</span><span class=\"i-code\">0xe803</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xe804\"><i class=\"demo-icon icon-right-open\">&#xe804;</i> <span class=\"i-name\">icon-right-open</span><span class=\"i-code\">0xe804</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe805\"><i class=\"demo-icon icon-up-open\">&#xe805;</i> <span class=\"i-name\">icon-up-open</span><span class=\"i-code\">0xe805</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf099\"><i class=\"demo-icon icon-twitter\">&#xf099;</i> <span class=\"i-name\">icon-twitter</span><span class=\"i-code\">0xf099</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf09a\"><i class=\"demo-icon icon-facebook\">&#xf09a;</i> <span class=\"i-name\">icon-facebook</span><span class=\"i-code\">0xf09a</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xf0e1\"><i class=\"demo-icon icon-linkedin\">&#xf0e1;</i> <span class=\"i-name\">icon-linkedin</span><span class=\"i-code\">0xf0e1</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf16d\"><i class=\"demo-icon icon-instagram\">&#xf16d;</i> <span class=\"i-name\">icon-instagram</span><span class=\"i-code\">0xf16d</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf173\"><i class=\"demo-icon icon-tumblr\">&#xf173;</i> <span class=\"i-name\">icon-tumblr</span><span class=\"i-code\">0xf173</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf1bc\"><i class=\"demo-icon icon-spotify\">&#xf1bc;</i> <span class=\"i-name\">icon-spotify</span><span class=\"i-code\">0xf1bc</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xf1d3\"><i class=\"demo-icon icon-git\">&#xf1d3;</i> <span class=\"i-name\">icon-git</span><span class=\"i-code\">0xf1d3</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf202\"><i class=\"demo-icon icon-lastfm\">&#xf202;</i> <span class=\"i-name\">icon-lastfm</span><span class=\"i-code\">0xf202</span></div>\n      </div>\n    </div>\n    <div class=\"container footer\">Generated by <a href=\"http://fontello.com\">fontello.com</a></div>\n  </body>\n</html>","date":"2018-10-05T03:49:47.453Z","updated":"2018-10-05T03:49:47.453Z","path":"assets/css/fontello/demo.html","title":"","comments":1,"layout":"page","_id":"cjmvj0a5v0004vh9kggn0cyab","content":"<!DOCTYPE html>\n<html>\n  <head><!--[if lt IE 9]><script language=\"javascript\" type=\"text/javascript\" src=\"//html5shim.googlecode.com/svn/trunk/html5.js\"></script><![endif]-->\n    <meta charset=\"UTF-8\"><style>/*\n * Bootstrap v2.2.1\n *\n * Copyright 2012 Twitter, Inc\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\n */\n.clearfix {\n  *zoom: 1;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.clearfix:after {\n  clear: both;\n}\nhtml {\n  font-size: 100%;\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\na:focus {\n  outline: thin dotted #333;\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\na:hover,\na:active {\n  outline: 0;\n}\nbutton,\ninput,\nselect,\ntextarea {\n  margin: 0;\n  font-size: 100%;\n  vertical-align: middle;\n}\nbutton,\ninput {\n  *overflow: visible;\n  line-height: normal;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\nbody {\n  margin: 0;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 20px;\n  color: #333;\n  background-color: #fff;\n}\na {\n  color: #08c;\n  text-decoration: none;\n}\na:hover {\n  color: #005580;\n  text-decoration: underline;\n}\n.row {\n  margin-left: -20px;\n  *zoom: 1;\n}\n.row:before,\n.row:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.row:after {\n  clear: both;\n}\n[class*=\"span\"] {\n  float: left;\n  min-height: 1px;\n  margin-left: 20px;\n}\n.container,\n.navbar-static-top .container,\n.navbar-fixed-top .container,\n.navbar-fixed-bottom .container {\n  width: 940px;\n}\n.span12 {\n  width: 940px;\n}\n.span11 {\n  width: 860px;\n}\n.span10 {\n  width: 780px;\n}\n.span9 {\n  width: 700px;\n}\n.span8 {\n  width: 620px;\n}\n.span7 {\n  width: 540px;\n}\n.span6 {\n  width: 460px;\n}\n.span5 {\n  width: 380px;\n}\n.span4 {\n  width: 300px;\n}\n.span3 {\n  width: 220px;\n}\n.span2 {\n  width: 140px;\n}\n.span1 {\n  width: 60px;\n}\n[class*=\"span\"].pull-right,\n.row-fluid [class*=\"span\"].pull-right {\n  float: right;\n}\n.container {\n  margin-right: auto;\n  margin-left: auto;\n  *zoom: 1;\n}\n.container:before,\n.container:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.container:after {\n  clear: both;\n}\np {\n  margin: 0 0 10px;\n}\n.lead {\n  margin-bottom: 20px;\n  font-size: 21px;\n  font-weight: 200;\n  line-height: 30px;\n}\nsmall {\n  font-size: 85%;\n}\nh1 {\n  margin: 10px 0;\n  font-family: inherit;\n  font-weight: bold;\n  line-height: 20px;\n  color: inherit;\n  text-rendering: optimizelegibility;\n}\nh1 small {\n  font-weight: normal;\n  line-height: 1;\n  color: #999;\n}\nh1 {\n  line-height: 40px;\n}\nh1 {\n  font-size: 38.5px;\n}\nh1 small {\n  font-size: 24.5px;\n}\nbody {\n  margin-top: 90px;\n}\n.header {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  margin-left: -480px;\n  background-color: #fff;\n  border-bottom: 1px solid #ddd;\n  padding-top: 10px;\n  z-index: 10;\n}\n.footer {\n  color: #ddd;\n  font-size: 12px;\n  text-align: center;\n  margin-top: 20px;\n}\n.footer a {\n  color: #ccc;\n  text-decoration: underline;\n}\n.the-icons {\n  font-size: 14px;\n  line-height: 24px;\n}\n.switch {\n  position: absolute;\n  right: 0;\n  bottom: 10px;\n  color: #666;\n}\n.switch input {\n  margin-right: 0.3em;\n}\n.codesOn .i-name {\n  display: none;\n}\n.codesOn .i-code {\n  display: inline;\n}\n.i-code {\n  display: none;\n}\n@font-face {\n      font-family: 'fontello';\n      src: url('./font/fontello.eot?46872038');\n      src: url('./font/fontello.eot?46872038#iefix') format('embedded-opentype'),\n           url('./font/fontello.woff?46872038') format('woff'),\n           url('./font/fontello.ttf?46872038') format('truetype'),\n           url('./font/fontello.svg?46872038#fontello') format('svg');\n      font-weight: normal;\n      font-style: normal;\n    }\n     \n     \n    .demo-icon\n    {\n      font-family: \"fontello\";\n      font-style: normal;\n      font-weight: normal;\n      speak: none;\n     \n      display: inline-block;\n      text-decoration: inherit;\n      width: 1em;\n      margin-right: .2em;\n      text-align: center;\n      /* opacity: .8; */\n     \n      /* For safety - reset parent styles, that can break glyph codes*/\n      font-variant: normal;\n      text-transform: none;\n     \n      /* fix buttons height, for twitter bootstrap */\n      line-height: 1em;\n     \n      /* Animation center compensation - margins should be symmetric */\n      /* remove if not needed */\n      margin-left: .2em;\n     \n      /* You can be more comfortable with increased icons size */\n      /* font-size: 120%; */\n     \n      /* Font smoothing. That was taken from TWBS */\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n     \n      /* Uncomment for 3D effect */\n      /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n    }\n     </style>\n    <link rel=\"stylesheet\" href=\"css/animation.css\"><!--[if IE 7]><link rel=\"stylesheet\" href=\"css/\" + font.fontname + \"-ie7.css\"><![endif]-->\n    <script>\n      function toggleCodes(on) {\n        var obj = document.getElementById('icons');\n      \n        if (on) {\n          obj.className += ' codesOn';\n        } else {\n          obj.className = obj.className.replace(' codesOn', '');\n        }\n      }\n      \n    </script>\n  </head>\n  <body>\n    <div class=\"container header\">\n      <h1>fontello <small>font demo</small></h1>\n      <label class=\"switch\">\n        <input type=\"checkbox\" onclick=\"toggleCodes(this.checked)\">show codes\n      </label>\n    </div>\n    <div class=\"container\" id=\"icons\">\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xe800\"><i class=\"demo-icon icon-ok\">&#xe800;</i> <span class=\"i-name\">icon-ok</span><span class=\"i-code\">0xe800</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe801\"><i class=\"demo-icon icon-cancel\">&#xe801;</i> <span class=\"i-name\">icon-cancel</span><span class=\"i-code\">0xe801</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe802\"><i class=\"demo-icon icon-down-open\">&#xe802;</i> <span class=\"i-name\">icon-down-open</span><span class=\"i-code\">0xe802</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe803\"><i class=\"demo-icon icon-left-open\">&#xe803;</i> <span class=\"i-name\">icon-left-open</span><span class=\"i-code\">0xe803</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xe804\"><i class=\"demo-icon icon-right-open\">&#xe804;</i> <span class=\"i-name\">icon-right-open</span><span class=\"i-code\">0xe804</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe805\"><i class=\"demo-icon icon-up-open\">&#xe805;</i> <span class=\"i-name\">icon-up-open</span><span class=\"i-code\">0xe805</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf099\"><i class=\"demo-icon icon-twitter\">&#xf099;</i> <span class=\"i-name\">icon-twitter</span><span class=\"i-code\">0xf099</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf09a\"><i class=\"demo-icon icon-facebook\">&#xf09a;</i> <span class=\"i-name\">icon-facebook</span><span class=\"i-code\">0xf09a</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xf0e1\"><i class=\"demo-icon icon-linkedin\">&#xf0e1;</i> <span class=\"i-name\">icon-linkedin</span><span class=\"i-code\">0xf0e1</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf16d\"><i class=\"demo-icon icon-instagram\">&#xf16d;</i> <span class=\"i-name\">icon-instagram</span><span class=\"i-code\">0xf16d</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf173\"><i class=\"demo-icon icon-tumblr\">&#xf173;</i> <span class=\"i-name\">icon-tumblr</span><span class=\"i-code\">0xf173</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf1bc\"><i class=\"demo-icon icon-spotify\">&#xf1bc;</i> <span class=\"i-name\">icon-spotify</span><span class=\"i-code\">0xf1bc</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xf1d3\"><i class=\"demo-icon icon-git\">&#xf1d3;</i> <span class=\"i-name\">icon-git</span><span class=\"i-code\">0xf1d3</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf202\"><i class=\"demo-icon icon-lastfm\">&#xf202;</i> <span class=\"i-name\">icon-lastfm</span><span class=\"i-code\">0xf202</span></div>\n      </div>\n    </div>\n    <div class=\"container footer\">Generated by <a href=\"http://fontello.com\" target=\"_blank\" rel=\"noopener\">fontello.com</a></div>\n  </body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n  <head><!--[if lt IE 9]><script language=\"javascript\" type=\"text/javascript\" src=\"//html5shim.googlecode.com/svn/trunk/html5.js\"></script><![endif]-->\n    <meta charset=\"UTF-8\"><style>/*\n * Bootstrap v2.2.1\n *\n * Copyright 2012 Twitter, Inc\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\n */\n.clearfix {\n  *zoom: 1;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.clearfix:after {\n  clear: both;\n}\nhtml {\n  font-size: 100%;\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\na:focus {\n  outline: thin dotted #333;\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\na:hover,\na:active {\n  outline: 0;\n}\nbutton,\ninput,\nselect,\ntextarea {\n  margin: 0;\n  font-size: 100%;\n  vertical-align: middle;\n}\nbutton,\ninput {\n  *overflow: visible;\n  line-height: normal;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\nbody {\n  margin: 0;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 20px;\n  color: #333;\n  background-color: #fff;\n}\na {\n  color: #08c;\n  text-decoration: none;\n}\na:hover {\n  color: #005580;\n  text-decoration: underline;\n}\n.row {\n  margin-left: -20px;\n  *zoom: 1;\n}\n.row:before,\n.row:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.row:after {\n  clear: both;\n}\n[class*=\"span\"] {\n  float: left;\n  min-height: 1px;\n  margin-left: 20px;\n}\n.container,\n.navbar-static-top .container,\n.navbar-fixed-top .container,\n.navbar-fixed-bottom .container {\n  width: 940px;\n}\n.span12 {\n  width: 940px;\n}\n.span11 {\n  width: 860px;\n}\n.span10 {\n  width: 780px;\n}\n.span9 {\n  width: 700px;\n}\n.span8 {\n  width: 620px;\n}\n.span7 {\n  width: 540px;\n}\n.span6 {\n  width: 460px;\n}\n.span5 {\n  width: 380px;\n}\n.span4 {\n  width: 300px;\n}\n.span3 {\n  width: 220px;\n}\n.span2 {\n  width: 140px;\n}\n.span1 {\n  width: 60px;\n}\n[class*=\"span\"].pull-right,\n.row-fluid [class*=\"span\"].pull-right {\n  float: right;\n}\n.container {\n  margin-right: auto;\n  margin-left: auto;\n  *zoom: 1;\n}\n.container:before,\n.container:after {\n  display: table;\n  content: \"\";\n  line-height: 0;\n}\n.container:after {\n  clear: both;\n}\np {\n  margin: 0 0 10px;\n}\n.lead {\n  margin-bottom: 20px;\n  font-size: 21px;\n  font-weight: 200;\n  line-height: 30px;\n}\nsmall {\n  font-size: 85%;\n}\nh1 {\n  margin: 10px 0;\n  font-family: inherit;\n  font-weight: bold;\n  line-height: 20px;\n  color: inherit;\n  text-rendering: optimizelegibility;\n}\nh1 small {\n  font-weight: normal;\n  line-height: 1;\n  color: #999;\n}\nh1 {\n  line-height: 40px;\n}\nh1 {\n  font-size: 38.5px;\n}\nh1 small {\n  font-size: 24.5px;\n}\nbody {\n  margin-top: 90px;\n}\n.header {\n  position: fixed;\n  top: 0;\n  left: 50%;\n  margin-left: -480px;\n  background-color: #fff;\n  border-bottom: 1px solid #ddd;\n  padding-top: 10px;\n  z-index: 10;\n}\n.footer {\n  color: #ddd;\n  font-size: 12px;\n  text-align: center;\n  margin-top: 20px;\n}\n.footer a {\n  color: #ccc;\n  text-decoration: underline;\n}\n.the-icons {\n  font-size: 14px;\n  line-height: 24px;\n}\n.switch {\n  position: absolute;\n  right: 0;\n  bottom: 10px;\n  color: #666;\n}\n.switch input {\n  margin-right: 0.3em;\n}\n.codesOn .i-name {\n  display: none;\n}\n.codesOn .i-code {\n  display: inline;\n}\n.i-code {\n  display: none;\n}\n@font-face {\n      font-family: 'fontello';\n      src: url('./font/fontello.eot?46872038');\n      src: url('./font/fontello.eot?46872038#iefix') format('embedded-opentype'),\n           url('./font/fontello.woff?46872038') format('woff'),\n           url('./font/fontello.ttf?46872038') format('truetype'),\n           url('./font/fontello.svg?46872038#fontello') format('svg');\n      font-weight: normal;\n      font-style: normal;\n    }\n     \n     \n    .demo-icon\n    {\n      font-family: \"fontello\";\n      font-style: normal;\n      font-weight: normal;\n      speak: none;\n     \n      display: inline-block;\n      text-decoration: inherit;\n      width: 1em;\n      margin-right: .2em;\n      text-align: center;\n      /* opacity: .8; */\n     \n      /* For safety - reset parent styles, that can break glyph codes*/\n      font-variant: normal;\n      text-transform: none;\n     \n      /* fix buttons height, for twitter bootstrap */\n      line-height: 1em;\n     \n      /* Animation center compensation - margins should be symmetric */\n      /* remove if not needed */\n      margin-left: .2em;\n     \n      /* You can be more comfortable with increased icons size */\n      /* font-size: 120%; */\n     \n      /* Font smoothing. That was taken from TWBS */\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n     \n      /* Uncomment for 3D effect */\n      /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n    }\n     </style>\n    <link rel=\"stylesheet\" href=\"css/animation.css\"><!--[if IE 7]><link rel=\"stylesheet\" href=\"css/\" + font.fontname + \"-ie7.css\"><![endif]-->\n    <script>\n      function toggleCodes(on) {\n        var obj = document.getElementById('icons');\n      \n        if (on) {\n          obj.className += ' codesOn';\n        } else {\n          obj.className = obj.className.replace(' codesOn', '');\n        }\n      }\n      \n    </script>\n  </head>\n  <body>\n    <div class=\"container header\">\n      <h1>fontello <small>font demo</small></h1>\n      <label class=\"switch\">\n        <input type=\"checkbox\" onclick=\"toggleCodes(this.checked)\">show codes\n      </label>\n    </div>\n    <div class=\"container\" id=\"icons\">\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xe800\"><i class=\"demo-icon icon-ok\">&#xe800;</i> <span class=\"i-name\">icon-ok</span><span class=\"i-code\">0xe800</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe801\"><i class=\"demo-icon icon-cancel\">&#xe801;</i> <span class=\"i-name\">icon-cancel</span><span class=\"i-code\">0xe801</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe802\"><i class=\"demo-icon icon-down-open\">&#xe802;</i> <span class=\"i-name\">icon-down-open</span><span class=\"i-code\">0xe802</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe803\"><i class=\"demo-icon icon-left-open\">&#xe803;</i> <span class=\"i-name\">icon-left-open</span><span class=\"i-code\">0xe803</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xe804\"><i class=\"demo-icon icon-right-open\">&#xe804;</i> <span class=\"i-name\">icon-right-open</span><span class=\"i-code\">0xe804</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xe805\"><i class=\"demo-icon icon-up-open\">&#xe805;</i> <span class=\"i-name\">icon-up-open</span><span class=\"i-code\">0xe805</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf099\"><i class=\"demo-icon icon-twitter\">&#xf099;</i> <span class=\"i-name\">icon-twitter</span><span class=\"i-code\">0xf099</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf09a\"><i class=\"demo-icon icon-facebook\">&#xf09a;</i> <span class=\"i-name\">icon-facebook</span><span class=\"i-code\">0xf09a</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xf0e1\"><i class=\"demo-icon icon-linkedin\">&#xf0e1;</i> <span class=\"i-name\">icon-linkedin</span><span class=\"i-code\">0xf0e1</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf16d\"><i class=\"demo-icon icon-instagram\">&#xf16d;</i> <span class=\"i-name\">icon-instagram</span><span class=\"i-code\">0xf16d</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf173\"><i class=\"demo-icon icon-tumblr\">&#xf173;</i> <span class=\"i-name\">icon-tumblr</span><span class=\"i-code\">0xf173</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf1bc\"><i class=\"demo-icon icon-spotify\">&#xf1bc;</i> <span class=\"i-name\">icon-spotify</span><span class=\"i-code\">0xf1bc</span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"the-icons span3\" title=\"Code: 0xf1d3\"><i class=\"demo-icon icon-git\">&#xf1d3;</i> <span class=\"i-name\">icon-git</span><span class=\"i-code\">0xf1d3</span></div>\n        <div class=\"the-icons span3\" title=\"Code: 0xf202\"><i class=\"demo-icon icon-lastfm\">&#xf202;</i> <span class=\"i-name\">icon-lastfm</span><span class=\"i-code\">0xf202</span></div>\n      </div>\n    </div>\n    <div class=\"container footer\">Generated by <a href=\"http://fontello.com\" target=\"_blank\" rel=\"noopener\">fontello.com</a></div>\n  </body>\n</html>"},{"_content":"\n.index-section {\n  $base-width: 500px;\n\n  .logo-container {\n    max-width: $base-width;\n    display: block;\n    margin: 50px auto;\n    position: relative;\n    overflow: hidden;\n    background-color: black;\n\n    canvas, .logo {\n      display: block;\n      width: 100%;\n    }\n\n    canvas {\n      position: absolute;\n      top: 0;\n      left: 0;\n      z-index: 0;\n    }\n\n    .logo {\n      transform: scale(1.1); // this removes the tiny line around\n    }\n  }\n}","source":"assets/scss/sections/index-section.scss","raw":"\n.index-section {\n  $base-width: 500px;\n\n  .logo-container {\n    max-width: $base-width;\n    display: block;\n    margin: 50px auto;\n    position: relative;\n    overflow: hidden;\n    background-color: black;\n\n    canvas, .logo {\n      display: block;\n      width: 100%;\n    }\n\n    canvas {\n      position: absolute;\n      top: 0;\n      left: 0;\n      z-index: 0;\n    }\n\n    .logo {\n      transform: scale(1.1); // this removes the tiny line around\n    }\n  }\n}","date":"2018-10-05T07:03:22.080Z","updated":"2018-10-05T07:03:22.080Z","path":"assets/scss/sections/index-section.css","layout":"false","_id":"cjmvj0a5x0005vh9kn9i8b5w4","title":"","comments":1,"content":".index-section .logo-container{max-width:500px;display:block;margin:50px auto;position:relative;overflow:hidden;background-color:black}.index-section .logo-container canvas,.index-section .logo-container .logo{display:block;width:100%}.index-section .logo-container canvas{position:absolute;top:0;left:0;z-index:0}.index-section .logo-container .logo{transform:scale(1.1)}\n","site":{"data":{}},"excerpt":"","more":".index-section .logo-container{max-width:500px;display:block;margin:50px auto;position:relative;overflow:hidden;background-color:black}.index-section .logo-container canvas,.index-section .logo-container .logo{display:block;width:100%}.index-section .logo-container canvas{position:absolute;top:0;left:0;z-index:0}.index-section .logo-container .logo{transform:scale(1.1)}\n"},{"_content":"import { readBlock, snesToHex } from './rom'\nimport ROMGraphics from './rom_graphics'\nexport default class BackgroundGraphics {\n  constructor (index, bitsPerPixel) {\n    this.arrayROMGraphics = null\n    this.romGraphics = new ROMGraphics(bitsPerPixel)\n    this.read(index)\n  }\n  read (index) {\n    /* Graphics pointer table entry */\n    const graphicsPointerBlock = readBlock(0xD7A1 + index * 4)\n    /* Read graphics */\n    this.romGraphics.loadGraphics(readBlock(snesToHex(graphicsPointerBlock.readInt32())))\n    /* Arrangement pointer table entry */\n    const arrayPointerBlock = readBlock(0xD93D + index * 4)\n    const arrayPointer = snesToHex(arrayPointerBlock.readInt32())\n    /* Read and decompress arrangement */\n    const arrayBlock = readBlock(arrayPointer)\n    this.arrayROMGraphics = arrayBlock.decompress()\n  }\n  draw (bitmap, palette) {\n    return this.romGraphics.draw(bitmap, palette, this.arrayROMGraphics)\n  }\n}\n","source":"assets/src/rom/background_graphics.js","raw":"import { readBlock, snesToHex } from './rom'\nimport ROMGraphics from './rom_graphics'\nexport default class BackgroundGraphics {\n  constructor (index, bitsPerPixel) {\n    this.arrayROMGraphics = null\n    this.romGraphics = new ROMGraphics(bitsPerPixel)\n    this.read(index)\n  }\n  read (index) {\n    /* Graphics pointer table entry */\n    const graphicsPointerBlock = readBlock(0xD7A1 + index * 4)\n    /* Read graphics */\n    this.romGraphics.loadGraphics(readBlock(snesToHex(graphicsPointerBlock.readInt32())))\n    /* Arrangement pointer table entry */\n    const arrayPointerBlock = readBlock(0xD93D + index * 4)\n    const arrayPointer = snesToHex(arrayPointerBlock.readInt32())\n    /* Read and decompress arrangement */\n    const arrayBlock = readBlock(arrayPointer)\n    this.arrayROMGraphics = arrayBlock.decompress()\n  }\n  draw (bitmap, palette) {\n    return this.romGraphics.draw(bitmap, palette, this.arrayROMGraphics)\n  }\n}\n","date":"2018-10-05T03:49:47.466Z","updated":"2018-10-05T03:49:47.466Z","path":"assets/src/rom/background_graphics.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a5y0006vh9khwr0dsqk","content":"import { readBlock, snesToHex } from './rom'\nimport ROMGraphics from './rom_graphics'\nexport default class BackgroundGraphics {\n  constructor (index, bitsPerPixel) {\n    this.arrayROMGraphics = null\n    this.romGraphics = new ROMGraphics(bitsPerPixel)\n    this.read(index)\n  }\n  read (index) {\n    /* Graphics pointer table entry */\n    const graphicsPointerBlock = readBlock(0xD7A1 + index * 4)\n    /* Read graphics */\n    this.romGraphics.loadGraphics(readBlock(snesToHex(graphicsPointerBlock.readInt32())))\n    /* Arrangement pointer table entry */\n    const arrayPointerBlock = readBlock(0xD93D + index * 4)\n    const arrayPointer = snesToHex(arrayPointerBlock.readInt32())\n    /* Read and decompress arrangement */\n    const arrayBlock = readBlock(arrayPointer)\n    this.arrayROMGraphics = arrayBlock.decompress()\n  }\n  draw (bitmap, palette) {\n    return this.romGraphics.draw(bitmap, palette, this.arrayROMGraphics)\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"import { readBlock, snesToHex } from './rom'\nimport ROMGraphics from './rom_graphics'\nexport default class BackgroundGraphics {\n  constructor (index, bitsPerPixel) {\n    this.arrayROMGraphics = null\n    this.romGraphics = new ROMGraphics(bitsPerPixel)\n    this.read(index)\n  }\n  read (index) {\n    /* Graphics pointer table entry */\n    const graphicsPointerBlock = readBlock(0xD7A1 + index * 4)\n    /* Read graphics */\n    this.romGraphics.loadGraphics(readBlock(snesToHex(graphicsPointerBlock.readInt32())))\n    /* Arrangement pointer table entry */\n    const arrayPointerBlock = readBlock(0xD93D + index * 4)\n    const arrayPointer = snesToHex(arrayPointerBlock.readInt32())\n    /* Read and decompress arrangement */\n    const arrayBlock = readBlock(arrayPointer)\n    this.arrayROMGraphics = arrayBlock.decompress()\n  }\n  draw (bitmap, palette) {\n    return this.romGraphics.draw(bitmap, palette, this.arrayROMGraphics)\n  }\n}\n"},{"_content":"import BackgroundGraphics from './background_graphics'\nimport BackgroundPalette from './background_palette'\nimport DistortionEffect from './distortion_effect'\nimport BattleBackground from './battle_background'\nimport Distorter from './distorter'\nimport PaletteCycle from './palette_cycle'\nconst [WIDTH, HEIGHT] = [256, 256]\nexport default class BackgroundLayer {\n  constructor (entry, rom) {\n    this.rom = rom\n    this.graphics = null\n    this.paletteCycle = null\n    this.pixels = new Int16Array(WIDTH * HEIGHT * 4)\n    this.distorter = new Distorter(this.pixels)\n    this.loadEntry(entry)\n  }\n  /**\n  * Renders a frame of the background animation into the specified Bitmap\n  *\n  * @param dst\n  *            Bitmap object into which to render\n  * @param letterbox\n  *            Size in pixels of black borders at top and bottom of image\n  * @param ticks\n  *            Time value of the frame to compute\n  * @param alpha\n  *            Blending opacity\n  * @param erase\n  *            Whether or not to clear the destination bitmap before\n  *            rendering\n  */\n  overlayFrame (bitmap, letterbox, ticks, alpha, erase) {\n    if (this.paletteCycle !== null) {\n      this.paletteCycle.cycle()\n      this.graphics.draw(this.pixels, this.paletteCycle)\n    }\n    return this.distorter.overlayFrame(bitmap, letterbox, ticks, alpha, erase)\n  }\n  loadGraphics (index) {\n    this.graphics = this.rom.getObject(BackgroundGraphics, index)\n  }\n  loadPalette (background) {\n    this.paletteCycle = new PaletteCycle({\n      background,\n      palette: this.rom.getObject(BackgroundPalette, background.paletteIndex)\n    })\n  }\n  loadEffect (index) {\n    this.distorter.effect = new DistortionEffect(index)\n  }\n  loadEntry (index) {\n    this.entry = index\n    const background = this.rom.getObject(BattleBackground, index)\n    /* Set graphics/palette */\n    this.loadGraphics(background.graphicsIndex)\n    this.loadPalette(background)\n    const animation = background.animation\n    const e1 = (animation >> 24) & 0xFF\n    const e2 = (animation >> 16) & 0xFF\n    this.loadEffect(e2 || e1)\n  }\n}\n","source":"assets/src/rom/background_layer.js","raw":"import BackgroundGraphics from './background_graphics'\nimport BackgroundPalette from './background_palette'\nimport DistortionEffect from './distortion_effect'\nimport BattleBackground from './battle_background'\nimport Distorter from './distorter'\nimport PaletteCycle from './palette_cycle'\nconst [WIDTH, HEIGHT] = [256, 256]\nexport default class BackgroundLayer {\n  constructor (entry, rom) {\n    this.rom = rom\n    this.graphics = null\n    this.paletteCycle = null\n    this.pixels = new Int16Array(WIDTH * HEIGHT * 4)\n    this.distorter = new Distorter(this.pixels)\n    this.loadEntry(entry)\n  }\n  /**\n  * Renders a frame of the background animation into the specified Bitmap\n  *\n  * @param dst\n  *            Bitmap object into which to render\n  * @param letterbox\n  *            Size in pixels of black borders at top and bottom of image\n  * @param ticks\n  *            Time value of the frame to compute\n  * @param alpha\n  *            Blending opacity\n  * @param erase\n  *            Whether or not to clear the destination bitmap before\n  *            rendering\n  */\n  overlayFrame (bitmap, letterbox, ticks, alpha, erase) {\n    if (this.paletteCycle !== null) {\n      this.paletteCycle.cycle()\n      this.graphics.draw(this.pixels, this.paletteCycle)\n    }\n    return this.distorter.overlayFrame(bitmap, letterbox, ticks, alpha, erase)\n  }\n  loadGraphics (index) {\n    this.graphics = this.rom.getObject(BackgroundGraphics, index)\n  }\n  loadPalette (background) {\n    this.paletteCycle = new PaletteCycle({\n      background,\n      palette: this.rom.getObject(BackgroundPalette, background.paletteIndex)\n    })\n  }\n  loadEffect (index) {\n    this.distorter.effect = new DistortionEffect(index)\n  }\n  loadEntry (index) {\n    this.entry = index\n    const background = this.rom.getObject(BattleBackground, index)\n    /* Set graphics/palette */\n    this.loadGraphics(background.graphicsIndex)\n    this.loadPalette(background)\n    const animation = background.animation\n    const e1 = (animation >> 24) & 0xFF\n    const e2 = (animation >> 16) & 0xFF\n    this.loadEffect(e2 || e1)\n  }\n}\n","date":"2018-10-05T03:49:47.467Z","updated":"2018-10-05T03:49:47.467Z","path":"assets/src/rom/background_layer.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a5z0007vh9k19e0cyuv","content":"import BackgroundGraphics from './background_graphics'\nimport BackgroundPalette from './background_palette'\nimport DistortionEffect from './distortion_effect'\nimport BattleBackground from './battle_background'\nimport Distorter from './distorter'\nimport PaletteCycle from './palette_cycle'\nconst [WIDTH, HEIGHT] = [256, 256]\nexport default class BackgroundLayer {\n  constructor (entry, rom) {\n    this.rom = rom\n    this.graphics = null\n    this.paletteCycle = null\n    this.pixels = new Int16Array(WIDTH * HEIGHT * 4)\n    this.distorter = new Distorter(this.pixels)\n    this.loadEntry(entry)\n  }\n  /**\n  * Renders a frame of the background animation into the specified Bitmap\n  *\n  * @param dst\n  *            Bitmap object into which to render\n  * @param letterbox\n  *            Size in pixels of black borders at top and bottom of image\n  * @param ticks\n  *            Time value of the frame to compute\n  * @param alpha\n  *            Blending opacity\n  * @param erase\n  *            Whether or not to clear the destination bitmap before\n  *            rendering\n  */\n  overlayFrame (bitmap, letterbox, ticks, alpha, erase) {\n    if (this.paletteCycle !== null) {\n      this.paletteCycle.cycle()\n      this.graphics.draw(this.pixels, this.paletteCycle)\n    }\n    return this.distorter.overlayFrame(bitmap, letterbox, ticks, alpha, erase)\n  }\n  loadGraphics (index) {\n    this.graphics = this.rom.getObject(BackgroundGraphics, index)\n  }\n  loadPalette (background) {\n    this.paletteCycle = new PaletteCycle({\n      background,\n      palette: this.rom.getObject(BackgroundPalette, background.paletteIndex)\n    })\n  }\n  loadEffect (index) {\n    this.distorter.effect = new DistortionEffect(index)\n  }\n  loadEntry (index) {\n    this.entry = index\n    const background = this.rom.getObject(BattleBackground, index)\n    /* Set graphics/palette */\n    this.loadGraphics(background.graphicsIndex)\n    this.loadPalette(background)\n    const animation = background.animation\n    const e1 = (animation >> 24) & 0xFF\n    const e2 = (animation >> 16) & 0xFF\n    this.loadEffect(e2 || e1)\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"import BackgroundGraphics from './background_graphics'\nimport BackgroundPalette from './background_palette'\nimport DistortionEffect from './distortion_effect'\nimport BattleBackground from './battle_background'\nimport Distorter from './distorter'\nimport PaletteCycle from './palette_cycle'\nconst [WIDTH, HEIGHT] = [256, 256]\nexport default class BackgroundLayer {\n  constructor (entry, rom) {\n    this.rom = rom\n    this.graphics = null\n    this.paletteCycle = null\n    this.pixels = new Int16Array(WIDTH * HEIGHT * 4)\n    this.distorter = new Distorter(this.pixels)\n    this.loadEntry(entry)\n  }\n  /**\n  * Renders a frame of the background animation into the specified Bitmap\n  *\n  * @param dst\n  *            Bitmap object into which to render\n  * @param letterbox\n  *            Size in pixels of black borders at top and bottom of image\n  * @param ticks\n  *            Time value of the frame to compute\n  * @param alpha\n  *            Blending opacity\n  * @param erase\n  *            Whether or not to clear the destination bitmap before\n  *            rendering\n  */\n  overlayFrame (bitmap, letterbox, ticks, alpha, erase) {\n    if (this.paletteCycle !== null) {\n      this.paletteCycle.cycle()\n      this.graphics.draw(this.pixels, this.paletteCycle)\n    }\n    return this.distorter.overlayFrame(bitmap, letterbox, ticks, alpha, erase)\n  }\n  loadGraphics (index) {\n    this.graphics = this.rom.getObject(BackgroundGraphics, index)\n  }\n  loadPalette (background) {\n    this.paletteCycle = new PaletteCycle({\n      background,\n      palette: this.rom.getObject(BackgroundPalette, background.paletteIndex)\n    })\n  }\n  loadEffect (index) {\n    this.distorter.effect = new DistortionEffect(index)\n  }\n  loadEntry (index) {\n    this.entry = index\n    const background = this.rom.getObject(BattleBackground, index)\n    /* Set graphics/palette */\n    this.loadGraphics(background.graphicsIndex)\n    this.loadPalette(background)\n    const animation = background.animation\n    const e1 = (animation >> 24) & 0xFF\n    const e2 = (animation >> 16) & 0xFF\n    this.loadEffect(e2 || e1)\n  }\n}\n"},{"_content":"import { readBlock, snesToHex } from './rom'\nexport default class BackgroundPalette {\n  constructor (index, bitsPerPixel) {\n    this.colors = null\n    this.bitsPerPixel = bitsPerPixel\n    this.read(index)\n  }\n  read (index) {\n    const pointer = readBlock(0xDAD9 + index * 4)\n    const address = snesToHex(pointer.readInt32())\n    const data = readBlock(address)\n    this.address = address\n    this.readPalette(data, this.bitsPerPixel, 1)\n  }\n  /**\n  * Gets an array of colors representing one of this palette's subpalettes.\n  *\n  * @param palette\n  * The index of the subpalette to retrieve.\n  *\n  * @return An array containing the colors of the specified subpalette.\n  */\n  getColors (palette) {\n    return this.colors[palette]\n  }\n  getColorMatrix () {\n    return this.colors\n  }\n  /**\n  * Internal function - reads palette data from the given block into this\n  * palette's colors array.\n  *\n  * @param block\n  * Block to read palette data from.\n  * @param bitsPerPixel\n  * Bit depth: Must be either 2 or 4.\n  * @param count\n  * Number of subpalettes to read.\n  */\n  readPalette (block, bitsPerPixel, count) {\n    if (this.bitsPerPixel !== 2 && this.bitsPerPixel !== 4) {\n      throw new Error('Palette error: Incorrect color depth specified.')\n    }\n    if (count < 1) {\n      throw new Error('Palette error: Must specify positive number of subpalettes.')\n    }\n    this.colors = new Array(count)\n    const power = 2 ** this.bitsPerPixel\n    for (let palette = 0; palette < count; ++palette) {\n      this.colors[palette] = new Array(power)\n      for (let i = 0; i < power; i++) {\n        const clr16 = block.readDoubleShort()\n        const b = ((clr16 >> 10) & 31) * 8\n        const g = ((clr16 >> 5) & 31) * 8\n        const r = (clr16 & 31) * 8\n        // convert RGB to color int\n        // this code is straight out of Android: http://git.io/F1lZtw\n        this.colors[palette][i] = (0xFF << 24) | (r << 16) | (g << 8) | b\n      }\n    }\n  }\n}\n","source":"assets/src/rom/background_palette.js","raw":"import { readBlock, snesToHex } from './rom'\nexport default class BackgroundPalette {\n  constructor (index, bitsPerPixel) {\n    this.colors = null\n    this.bitsPerPixel = bitsPerPixel\n    this.read(index)\n  }\n  read (index) {\n    const pointer = readBlock(0xDAD9 + index * 4)\n    const address = snesToHex(pointer.readInt32())\n    const data = readBlock(address)\n    this.address = address\n    this.readPalette(data, this.bitsPerPixel, 1)\n  }\n  /**\n  * Gets an array of colors representing one of this palette's subpalettes.\n  *\n  * @param palette\n  * The index of the subpalette to retrieve.\n  *\n  * @return An array containing the colors of the specified subpalette.\n  */\n  getColors (palette) {\n    return this.colors[palette]\n  }\n  getColorMatrix () {\n    return this.colors\n  }\n  /**\n  * Internal function - reads palette data from the given block into this\n  * palette's colors array.\n  *\n  * @param block\n  * Block to read palette data from.\n  * @param bitsPerPixel\n  * Bit depth: Must be either 2 or 4.\n  * @param count\n  * Number of subpalettes to read.\n  */\n  readPalette (block, bitsPerPixel, count) {\n    if (this.bitsPerPixel !== 2 && this.bitsPerPixel !== 4) {\n      throw new Error('Palette error: Incorrect color depth specified.')\n    }\n    if (count < 1) {\n      throw new Error('Palette error: Must specify positive number of subpalettes.')\n    }\n    this.colors = new Array(count)\n    const power = 2 ** this.bitsPerPixel\n    for (let palette = 0; palette < count; ++palette) {\n      this.colors[palette] = new Array(power)\n      for (let i = 0; i < power; i++) {\n        const clr16 = block.readDoubleShort()\n        const b = ((clr16 >> 10) & 31) * 8\n        const g = ((clr16 >> 5) & 31) * 8\n        const r = (clr16 & 31) * 8\n        // convert RGB to color int\n        // this code is straight out of Android: http://git.io/F1lZtw\n        this.colors[palette][i] = (0xFF << 24) | (r << 16) | (g << 8) | b\n      }\n    }\n  }\n}\n","date":"2018-10-05T03:49:47.467Z","updated":"2018-10-05T03:49:47.467Z","path":"assets/src/rom/background_palette.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a600008vh9ko7da8wmi","content":"import { readBlock, snesToHex } from './rom'\nexport default class BackgroundPalette {\n  constructor (index, bitsPerPixel) {\n    this.colors = null\n    this.bitsPerPixel = bitsPerPixel\n    this.read(index)\n  }\n  read (index) {\n    const pointer = readBlock(0xDAD9 + index * 4)\n    const address = snesToHex(pointer.readInt32())\n    const data = readBlock(address)\n    this.address = address\n    this.readPalette(data, this.bitsPerPixel, 1)\n  }\n  /**\n  * Gets an array of colors representing one of this palette's subpalettes.\n  *\n  * @param palette\n  * The index of the subpalette to retrieve.\n  *\n  * @return An array containing the colors of the specified subpalette.\n  */\n  getColors (palette) {\n    return this.colors[palette]\n  }\n  getColorMatrix () {\n    return this.colors\n  }\n  /**\n  * Internal function - reads palette data from the given block into this\n  * palette's colors array.\n  *\n  * @param block\n  * Block to read palette data from.\n  * @param bitsPerPixel\n  * Bit depth: Must be either 2 or 4.\n  * @param count\n  * Number of subpalettes to read.\n  */\n  readPalette (block, bitsPerPixel, count) {\n    if (this.bitsPerPixel !== 2 && this.bitsPerPixel !== 4) {\n      throw new Error('Palette error: Incorrect color depth specified.')\n    }\n    if (count < 1) {\n      throw new Error('Palette error: Must specify positive number of subpalettes.')\n    }\n    this.colors = new Array(count)\n    const power = 2 ** this.bitsPerPixel\n    for (let palette = 0; palette < count; ++palette) {\n      this.colors[palette] = new Array(power)\n      for (let i = 0; i < power; i++) {\n        const clr16 = block.readDoubleShort()\n        const b = ((clr16 >> 10) & 31) * 8\n        const g = ((clr16 >> 5) & 31) * 8\n        const r = (clr16 & 31) * 8\n        // convert RGB to color int\n        // this code is straight out of Android: http://git.io/F1lZtw\n        this.colors[palette][i] = (0xFF << 24) | (r << 16) | (g << 8) | b\n      }\n    }\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"import { readBlock, snesToHex } from './rom'\nexport default class BackgroundPalette {\n  constructor (index, bitsPerPixel) {\n    this.colors = null\n    this.bitsPerPixel = bitsPerPixel\n    this.read(index)\n  }\n  read (index) {\n    const pointer = readBlock(0xDAD9 + index * 4)\n    const address = snesToHex(pointer.readInt32())\n    const data = readBlock(address)\n    this.address = address\n    this.readPalette(data, this.bitsPerPixel, 1)\n  }\n  /**\n  * Gets an array of colors representing one of this palette's subpalettes.\n  *\n  * @param palette\n  * The index of the subpalette to retrieve.\n  *\n  * @return An array containing the colors of the specified subpalette.\n  */\n  getColors (palette) {\n    return this.colors[palette]\n  }\n  getColorMatrix () {\n    return this.colors\n  }\n  /**\n  * Internal function - reads palette data from the given block into this\n  * palette's colors array.\n  *\n  * @param block\n  * Block to read palette data from.\n  * @param bitsPerPixel\n  * Bit depth: Must be either 2 or 4.\n  * @param count\n  * Number of subpalettes to read.\n  */\n  readPalette (block, bitsPerPixel, count) {\n    if (this.bitsPerPixel !== 2 && this.bitsPerPixel !== 4) {\n      throw new Error('Palette error: Incorrect color depth specified.')\n    }\n    if (count < 1) {\n      throw new Error('Palette error: Must specify positive number of subpalettes.')\n    }\n    this.colors = new Array(count)\n    const power = 2 ** this.bitsPerPixel\n    for (let palette = 0; palette < count; ++palette) {\n      this.colors[palette] = new Array(power)\n      for (let i = 0; i < power; i++) {\n        const clr16 = block.readDoubleShort()\n        const b = ((clr16 >> 10) & 31) * 8\n        const g = ((clr16 >> 5) & 31) * 8\n        const r = (clr16 & 31) * 8\n        // convert RGB to color int\n        // this code is straight out of Android: http://git.io/F1lZtw\n        this.colors[palette][i] = (0xFF << 24) | (r << 16) | (g << 8) | b\n      }\n    }\n  }\n}\n"},{"_content":"import { readBlock } from './rom'\n\n/* In the ROM, each battle background struct at 0xADEA1 takes up 17 bytes. */\nconst STRUCT_SIZE = 17\nexport default class BattleBackground {\n  /*\n  * Background data table: $CADCA1\n  * 17 bytes per entry:\n  *\n  * 0 Graphics/Arrangement index\n  * 1 Palette\n  * 2 Bits per pixel\n  * 3 Palette cycle type\n  * 4 Palette cycle #1 start\n  * 5 Palette cycle #1 end\n  * 6 Palette cycle #2 start\n  * 7 Palette cycle #2 end\n  * 8 Palette cycle speed\n  * 9 Mov\n  * 10 Mov\n  * 11 Mov\n  * 12 Mov\n  * 13 Effects\n  * 14 Effects\n  * 15 Effects\n  * 16 Effects\n  */\n  constructor (i = 0) {\n    this.bbgData = new Int16Array(STRUCT_SIZE)\n    this.read(i)\n  }\n  /**\n  * Index of the compresses graphics/arrangement to use for this\n  */\n  get graphicsIndex () {\n    return this.bbgData[0]\n  }\n  /**\n  * Index of the background Palette to use.\n  */\n  get paletteIndex () {\n    return this.bbgData[1]\n  }\n  /**\n  * Must always be 2 or 4.\n  */\n  get bitsPerPixel () {\n    return this.bbgData[2]\n  }\n  /**\n  * Which kind of palette cycle to use.\n  */\n  get paletteCycleType () {\n    return this.bbgData[3]\n  }\n  /**\n  * Cycle 1 Start Index\n  */\n  get paletteCycle1Start () {\n    return this.bbgData[4]\n  }\n  /**\n  * Cycle 1 End Index\n  */\n  get paletteCycle1End () {\n    return this.bbgData[5]\n  }\n  /**\n  * Cycle 2 Start Index\n  */\n  get paletteCycle2Start () {\n    return this.bbgData[6]\n  }\n  /**\n  * Cycle 2 End Index\n  */\n  get paletteCycle2End () {\n    return this.bbgData[7]\n  }\n  /**\n  * Determines the animation speed of the palette cycle in frames the animation is held. (ie. 3 = palette changes every 3 frames, 60 = palette changes every 60 frames)\n  */\n  get paletteCycleSpeed () {\n    return this.bbgData[8]\n  }\n  /* TODO: Implement these! */\n  get horizontalMovement () {\n    return this.bbgData[9]\n  }\n  get verticalMovement () {\n    return this.bbgData[10]\n  }\n  get horizontalAcceleration () {\n    return this.bbgData[11]\n  }\n  get verticalAcceleration () {\n    return this.bbgData[12]\n  }\n  /**\n  * Bytes 13-16 of BG data in big-endian order. Exact function unknown;\n  * related to background animation effects.\n  */\n  get animation () {\n    return (this.bbgData[13] << 24) + (this.bbgData[14] << 16) + (this.bbgData[15] << 8) + this.bbgData[16]\n  }\n  read (index) {\n    const main = readBlock(0xDCA1 + index * STRUCT_SIZE)\n    for (let i = 0; i < STRUCT_SIZE; ++i) {\n      this.bbgData[i] = main.readInt16()\n    }\n  }\n}\n","source":"assets/src/rom/battle_background.js","raw":"import { readBlock } from './rom'\n\n/* In the ROM, each battle background struct at 0xADEA1 takes up 17 bytes. */\nconst STRUCT_SIZE = 17\nexport default class BattleBackground {\n  /*\n  * Background data table: $CADCA1\n  * 17 bytes per entry:\n  *\n  * 0 Graphics/Arrangement index\n  * 1 Palette\n  * 2 Bits per pixel\n  * 3 Palette cycle type\n  * 4 Palette cycle #1 start\n  * 5 Palette cycle #1 end\n  * 6 Palette cycle #2 start\n  * 7 Palette cycle #2 end\n  * 8 Palette cycle speed\n  * 9 Mov\n  * 10 Mov\n  * 11 Mov\n  * 12 Mov\n  * 13 Effects\n  * 14 Effects\n  * 15 Effects\n  * 16 Effects\n  */\n  constructor (i = 0) {\n    this.bbgData = new Int16Array(STRUCT_SIZE)\n    this.read(i)\n  }\n  /**\n  * Index of the compresses graphics/arrangement to use for this\n  */\n  get graphicsIndex () {\n    return this.bbgData[0]\n  }\n  /**\n  * Index of the background Palette to use.\n  */\n  get paletteIndex () {\n    return this.bbgData[1]\n  }\n  /**\n  * Must always be 2 or 4.\n  */\n  get bitsPerPixel () {\n    return this.bbgData[2]\n  }\n  /**\n  * Which kind of palette cycle to use.\n  */\n  get paletteCycleType () {\n    return this.bbgData[3]\n  }\n  /**\n  * Cycle 1 Start Index\n  */\n  get paletteCycle1Start () {\n    return this.bbgData[4]\n  }\n  /**\n  * Cycle 1 End Index\n  */\n  get paletteCycle1End () {\n    return this.bbgData[5]\n  }\n  /**\n  * Cycle 2 Start Index\n  */\n  get paletteCycle2Start () {\n    return this.bbgData[6]\n  }\n  /**\n  * Cycle 2 End Index\n  */\n  get paletteCycle2End () {\n    return this.bbgData[7]\n  }\n  /**\n  * Determines the animation speed of the palette cycle in frames the animation is held. (ie. 3 = palette changes every 3 frames, 60 = palette changes every 60 frames)\n  */\n  get paletteCycleSpeed () {\n    return this.bbgData[8]\n  }\n  /* TODO: Implement these! */\n  get horizontalMovement () {\n    return this.bbgData[9]\n  }\n  get verticalMovement () {\n    return this.bbgData[10]\n  }\n  get horizontalAcceleration () {\n    return this.bbgData[11]\n  }\n  get verticalAcceleration () {\n    return this.bbgData[12]\n  }\n  /**\n  * Bytes 13-16 of BG data in big-endian order. Exact function unknown;\n  * related to background animation effects.\n  */\n  get animation () {\n    return (this.bbgData[13] << 24) + (this.bbgData[14] << 16) + (this.bbgData[15] << 8) + this.bbgData[16]\n  }\n  read (index) {\n    const main = readBlock(0xDCA1 + index * STRUCT_SIZE)\n    for (let i = 0; i < STRUCT_SIZE; ++i) {\n      this.bbgData[i] = main.readInt16()\n    }\n  }\n}\n","date":"2018-10-05T03:49:47.467Z","updated":"2018-10-05T03:49:47.467Z","path":"assets/src/rom/battle_background.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a610009vh9k0g90y1rg","content":"import { readBlock } from './rom'\n\n/* In the ROM, each battle background struct at 0xADEA1 takes up 17 bytes. */\nconst STRUCT_SIZE = 17\nexport default class BattleBackground {\n  /*\n  * Background data table: $CADCA1\n  * 17 bytes per entry:\n  *\n  * 0 Graphics/Arrangement index\n  * 1 Palette\n  * 2 Bits per pixel\n  * 3 Palette cycle type\n  * 4 Palette cycle #1 start\n  * 5 Palette cycle #1 end\n  * 6 Palette cycle #2 start\n  * 7 Palette cycle #2 end\n  * 8 Palette cycle speed\n  * 9 Mov\n  * 10 Mov\n  * 11 Mov\n  * 12 Mov\n  * 13 Effects\n  * 14 Effects\n  * 15 Effects\n  * 16 Effects\n  */\n  constructor (i = 0) {\n    this.bbgData = new Int16Array(STRUCT_SIZE)\n    this.read(i)\n  }\n  /**\n  * Index of the compresses graphics/arrangement to use for this\n  */\n  get graphicsIndex () {\n    return this.bbgData[0]\n  }\n  /**\n  * Index of the background Palette to use.\n  */\n  get paletteIndex () {\n    return this.bbgData[1]\n  }\n  /**\n  * Must always be 2 or 4.\n  */\n  get bitsPerPixel () {\n    return this.bbgData[2]\n  }\n  /**\n  * Which kind of palette cycle to use.\n  */\n  get paletteCycleType () {\n    return this.bbgData[3]\n  }\n  /**\n  * Cycle 1 Start Index\n  */\n  get paletteCycle1Start () {\n    return this.bbgData[4]\n  }\n  /**\n  * Cycle 1 End Index\n  */\n  get paletteCycle1End () {\n    return this.bbgData[5]\n  }\n  /**\n  * Cycle 2 Start Index\n  */\n  get paletteCycle2Start () {\n    return this.bbgData[6]\n  }\n  /**\n  * Cycle 2 End Index\n  */\n  get paletteCycle2End () {\n    return this.bbgData[7]\n  }\n  /**\n  * Determines the animation speed of the palette cycle in frames the animation is held. (ie. 3 = palette changes every 3 frames, 60 = palette changes every 60 frames)\n  */\n  get paletteCycleSpeed () {\n    return this.bbgData[8]\n  }\n  /* TODO: Implement these! */\n  get horizontalMovement () {\n    return this.bbgData[9]\n  }\n  get verticalMovement () {\n    return this.bbgData[10]\n  }\n  get horizontalAcceleration () {\n    return this.bbgData[11]\n  }\n  get verticalAcceleration () {\n    return this.bbgData[12]\n  }\n  /**\n  * Bytes 13-16 of BG data in big-endian order. Exact function unknown;\n  * related to background animation effects.\n  */\n  get animation () {\n    return (this.bbgData[13] << 24) + (this.bbgData[14] << 16) + (this.bbgData[15] << 8) + this.bbgData[16]\n  }\n  read (index) {\n    const main = readBlock(0xDCA1 + index * STRUCT_SIZE)\n    for (let i = 0; i < STRUCT_SIZE; ++i) {\n      this.bbgData[i] = main.readInt16()\n    }\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"import { readBlock } from './rom'\n\n/* In the ROM, each battle background struct at 0xADEA1 takes up 17 bytes. */\nconst STRUCT_SIZE = 17\nexport default class BattleBackground {\n  /*\n  * Background data table: $CADCA1\n  * 17 bytes per entry:\n  *\n  * 0 Graphics/Arrangement index\n  * 1 Palette\n  * 2 Bits per pixel\n  * 3 Palette cycle type\n  * 4 Palette cycle #1 start\n  * 5 Palette cycle #1 end\n  * 6 Palette cycle #2 start\n  * 7 Palette cycle #2 end\n  * 8 Palette cycle speed\n  * 9 Mov\n  * 10 Mov\n  * 11 Mov\n  * 12 Mov\n  * 13 Effects\n  * 14 Effects\n  * 15 Effects\n  * 16 Effects\n  */\n  constructor (i = 0) {\n    this.bbgData = new Int16Array(STRUCT_SIZE)\n    this.read(i)\n  }\n  /**\n  * Index of the compresses graphics/arrangement to use for this\n  */\n  get graphicsIndex () {\n    return this.bbgData[0]\n  }\n  /**\n  * Index of the background Palette to use.\n  */\n  get paletteIndex () {\n    return this.bbgData[1]\n  }\n  /**\n  * Must always be 2 or 4.\n  */\n  get bitsPerPixel () {\n    return this.bbgData[2]\n  }\n  /**\n  * Which kind of palette cycle to use.\n  */\n  get paletteCycleType () {\n    return this.bbgData[3]\n  }\n  /**\n  * Cycle 1 Start Index\n  */\n  get paletteCycle1Start () {\n    return this.bbgData[4]\n  }\n  /**\n  * Cycle 1 End Index\n  */\n  get paletteCycle1End () {\n    return this.bbgData[5]\n  }\n  /**\n  * Cycle 2 Start Index\n  */\n  get paletteCycle2Start () {\n    return this.bbgData[6]\n  }\n  /**\n  * Cycle 2 End Index\n  */\n  get paletteCycle2End () {\n    return this.bbgData[7]\n  }\n  /**\n  * Determines the animation speed of the palette cycle in frames the animation is held. (ie. 3 = palette changes every 3 frames, 60 = palette changes every 60 frames)\n  */\n  get paletteCycleSpeed () {\n    return this.bbgData[8]\n  }\n  /* TODO: Implement these! */\n  get horizontalMovement () {\n    return this.bbgData[9]\n  }\n  get verticalMovement () {\n    return this.bbgData[10]\n  }\n  get horizontalAcceleration () {\n    return this.bbgData[11]\n  }\n  get verticalAcceleration () {\n    return this.bbgData[12]\n  }\n  /**\n  * Bytes 13-16 of BG data in big-endian order. Exact function unknown;\n  * related to background animation effects.\n  */\n  get animation () {\n    return (this.bbgData[13] << 24) + (this.bbgData[14] << 16) + (this.bbgData[15] << 8) + this.bbgData[16]\n  }\n  read (index) {\n    const main = readBlock(0xDCA1 + index * STRUCT_SIZE)\n    for (let i = 0; i < STRUCT_SIZE; ++i) {\n      this.bbgData[i] = main.readInt16()\n    }\n  }\n}\n"},{"_content":"import { getCompressedSize, decompress, data } from './rom'\n/* Represents a chunk of the ROM's data requested by an object for reading or writing. A requested block should always correspond exactly to an area of strictly contiguous data within an object. */\nexport default class Block {\n  constructor (location) {\n    this.address = location\n    this.pointer = location\n  }\n  /**\n  * Decompresses data from the block's current position. Note that this\n  * method first measures the compressed data's size before allocating the\n  * destination array, which incurs a slight additional overhead.\n  *\n  * @return An array containing the decompressed data.\n  */\n  decompress () {\n    const size = getCompressedSize(this.pointer, data)\n    if (size < 1) {\n      throw new Error(`Invalid compressed data: ${size}`)\n    }\n    let blockOutput = new Int16Array(size)\n    const read = 0\n    blockOutput = decompress(this.pointer, data, blockOutput, read)\n    if (blockOutput === null) {\n      throw new Error('Computed and actual decompressed sizes do not match.')\n    }\n    return blockOutput\n  }\n  /**\n  * Reads a 16-bit integer from the block's current position and advances the\n  * current position by 2 bytes.\n  *\n  * @return The 16-bit value at the current position.\n  */\n  readInt16 () {\n    return data[this.pointer++]\n  }\n  /* Reads a 32-bit integer from the block's current position and advances the current position by 4 bytes. */\n  readInt32 () {\n    return this.readInt16() + (this.readInt16() << 8) + (this.readInt16() << 16) + (this.readInt16() << 24)\n  }\n  readDoubleShort () {\n    const fakeShort = new Int16Array([this.readInt16() + (this.readInt16() << 8)])\n    return fakeShort[0]\n  }\n}\n","source":"assets/src/rom/block.js","raw":"import { getCompressedSize, decompress, data } from './rom'\n/* Represents a chunk of the ROM's data requested by an object for reading or writing. A requested block should always correspond exactly to an area of strictly contiguous data within an object. */\nexport default class Block {\n  constructor (location) {\n    this.address = location\n    this.pointer = location\n  }\n  /**\n  * Decompresses data from the block's current position. Note that this\n  * method first measures the compressed data's size before allocating the\n  * destination array, which incurs a slight additional overhead.\n  *\n  * @return An array containing the decompressed data.\n  */\n  decompress () {\n    const size = getCompressedSize(this.pointer, data)\n    if (size < 1) {\n      throw new Error(`Invalid compressed data: ${size}`)\n    }\n    let blockOutput = new Int16Array(size)\n    const read = 0\n    blockOutput = decompress(this.pointer, data, blockOutput, read)\n    if (blockOutput === null) {\n      throw new Error('Computed and actual decompressed sizes do not match.')\n    }\n    return blockOutput\n  }\n  /**\n  * Reads a 16-bit integer from the block's current position and advances the\n  * current position by 2 bytes.\n  *\n  * @return The 16-bit value at the current position.\n  */\n  readInt16 () {\n    return data[this.pointer++]\n  }\n  /* Reads a 32-bit integer from the block's current position and advances the current position by 4 bytes. */\n  readInt32 () {\n    return this.readInt16() + (this.readInt16() << 8) + (this.readInt16() << 16) + (this.readInt16() << 24)\n  }\n  readDoubleShort () {\n    const fakeShort = new Int16Array([this.readInt16() + (this.readInt16() << 8)])\n    return fakeShort[0]\n  }\n}\n","date":"2018-10-05T03:49:47.468Z","updated":"2018-10-05T03:49:47.468Z","path":"assets/src/rom/block.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a62000avh9kzho7sg2g","content":"import { getCompressedSize, decompress, data } from './rom'\n/* Represents a chunk of the ROM's data requested by an object for reading or writing. A requested block should always correspond exactly to an area of strictly contiguous data within an object. */\nexport default class Block {\n  constructor (location) {\n    this.address = location\n    this.pointer = location\n  }\n  /**\n  * Decompresses data from the block's current position. Note that this\n  * method first measures the compressed data's size before allocating the\n  * destination array, which incurs a slight additional overhead.\n  *\n  * @return An array containing the decompressed data.\n  */\n  decompress () {\n    const size = getCompressedSize(this.pointer, data)\n    if (size < 1) {\n      throw new Error(`Invalid compressed data: ${size}`)\n    }\n    let blockOutput = new Int16Array(size)\n    const read = 0\n    blockOutput = decompress(this.pointer, data, blockOutput, read)\n    if (blockOutput === null) {\n      throw new Error('Computed and actual decompressed sizes do not match.')\n    }\n    return blockOutput\n  }\n  /**\n  * Reads a 16-bit integer from the block's current position and advances the\n  * current position by 2 bytes.\n  *\n  * @return The 16-bit value at the current position.\n  */\n  readInt16 () {\n    return data[this.pointer++]\n  }\n  /* Reads a 32-bit integer from the block's current position and advances the current position by 4 bytes. */\n  readInt32 () {\n    return this.readInt16() + (this.readInt16() << 8) + (this.readInt16() << 16) + (this.readInt16() << 24)\n  }\n  readDoubleShort () {\n    const fakeShort = new Int16Array([this.readInt16() + (this.readInt16() << 8)])\n    return fakeShort[0]\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"import { getCompressedSize, decompress, data } from './rom'\n/* Represents a chunk of the ROM's data requested by an object for reading or writing. A requested block should always correspond exactly to an area of strictly contiguous data within an object. */\nexport default class Block {\n  constructor (location) {\n    this.address = location\n    this.pointer = location\n  }\n  /**\n  * Decompresses data from the block's current position. Note that this\n  * method first measures the compressed data's size before allocating the\n  * destination array, which incurs a slight additional overhead.\n  *\n  * @return An array containing the decompressed data.\n  */\n  decompress () {\n    const size = getCompressedSize(this.pointer, data)\n    if (size < 1) {\n      throw new Error(`Invalid compressed data: ${size}`)\n    }\n    let blockOutput = new Int16Array(size)\n    const read = 0\n    blockOutput = decompress(this.pointer, data, blockOutput, read)\n    if (blockOutput === null) {\n      throw new Error('Computed and actual decompressed sizes do not match.')\n    }\n    return blockOutput\n  }\n  /**\n  * Reads a 16-bit integer from the block's current position and advances the\n  * current position by 2 bytes.\n  *\n  * @return The 16-bit value at the current position.\n  */\n  readInt16 () {\n    return data[this.pointer++]\n  }\n  /* Reads a 32-bit integer from the block's current position and advances the current position by 4 bytes. */\n  readInt32 () {\n    return this.readInt16() + (this.readInt16() << 8) + (this.readInt16() << 16) + (this.readInt16() << 24)\n  }\n  readDoubleShort () {\n    const fakeShort = new Int16Array([this.readInt16() + (this.readInt16() << 8)])\n    return fakeShort[0]\n  }\n}\n"},{"_content":"import { HORIZONTAL, HORIZONTAL_INTERLACED, VERTICAL } from './distortion_effect'\nimport { SNES_WIDTH, SNES_HEIGHT } from '../engine'\nconst { PI: π, sin, round, floor } = Math\nconst R = 0\nconst G = 1\nconst B = 2\nconst A = 3\nfunction mod (n, m) {\n  return ((n % m) + m) % m\n}\nexport default class Distorter {\n  constructor (bitmap) {\n    // There is some redundancy here: 'effect' is currently what is used\n    // in computing frames, although really there should be a list of\n    // four different effects ('dist') which are used in sequence.\n    //\n    // 'distortions' is currently unused, but ComputeFrame should be changed to\n    // make use of it as soon as the precise nature of effect sequencing\n    // can be determined.\n    //\n    // The goal is to make Distorter a general-purpose BG effect class that\n    // can be used to show either a single distortion effect, or to show the\n    // entire sequence of effects associated with a background entry (including\n    // scrolling and Palette animation, which still need to be implemented).\n    //     this.distortions = Array(4).fill(new DistortionEffect());\n    this.bitmap = bitmap\n    /* NOTE: Another discrepancy from Java: These values should be \"short\" and must have a specific precision. This seems to affect backgrounds with distortEffect === HORIZONTAL */\n    this.C1 = 1 / 512\n    this.C2 = 8 * π / (1024 * 256)\n    this.C3 = π / 60\n  }\n  setOffsetConstants (ticks, effect) {\n    const {\n      amplitude,\n      amplitudeAcceleration,\n      compression,\n      compressionAcceleration,\n      frequency,\n      frequencyAcceleration,\n      speed\n    } = effect\n    /* Compute \"current\" values of amplitude, frequency and compression */\n    const t2 = ticks * 2\n    this.amplitude = this.C1 * (amplitude + amplitudeAcceleration * t2)\n    this.frequency = this.C2 * (frequency + (frequencyAcceleration * t2))\n    this.compression = 1 + (compression + (compressionAcceleration * t2)) / 256\n    this.speed = this.C3 * speed * ticks\n    this.S = y => round(this.amplitude * sin(this.frequency * y + this.speed))\n  }\n  overlayFrame (dst, letterbox, ticks, alpha, erase) {\n    return this.computeFrame(dst, this.bitmap, letterbox, ticks, alpha, erase, this.effect)\n  }\n  /**\n  * Evaluates the distortion effect at the given destination line and\n  * time value and returns the computed offset value.\n  * If the distortion mode is horizontal, this offset should be interpreted\n  * as the number of pixels to offset the given line's starting x position.\n  * If the distortion mode is vertical, this offset should be interpreted as\n  * the y-coordinate of the line from the source bitmap to draw at the given\n  * y-coordinate in the destination bitmap.\n  * @param y\n  *   The y-coordinate of the destination line to evaluate for\n  * @param t\n  *   The number of ticks since beginning animation\n  * @return\n  *   The distortion offset for the given (y, t) coordinates\n  */\n  getAppliedOffset (y, distortionEffect) {\n    const s = this.S(y)\n    switch (distortionEffect) {\n      default:\n      case HORIZONTAL:\n        return s\n      case HORIZONTAL_INTERLACED:\n        return y % 2 === 0 ? -s : s\n      case VERTICAL:\n        /* Compute L */\n        return mod(floor(s + y * this.compression), 256)\n    }\n  }\n  computeFrame (destinationBitmap, sourceBitmap, letterbox, ticks, alpha, erase, effect) {\n    const { type: distortionEffect } = effect\n    const newBitmap = destinationBitmap\n    const oldBitmap = sourceBitmap\n    /* TODO: Hardcoing is bad */\n    const dstStride = 1024\n    const srcStride = 1024\n    /*\n      Given the list of 4 distortions and the tick count, decide which\n      effect to use:\n      Basically, we have 4 effects, each possibly with a duration.\n      Evaluation order is: 1, 2, 3, 0\n      If the first effect is null, control transitions to the second effect.\n      If the first and second effects are null, no effect occurs.\n      If any other effect is null, the sequence is truncated.\n      If a non-null effect has a zero duration, it will not be switched\n      away from.\n      Essentially, this configuration sets up a precise and repeating\n      sequence of between 0 and 4 different distortion effects. Once we\n      compute the sequence, computing the particular frame of which distortion\n      to use becomes easy; simply mod the tick count by the total duration\n      of the effects that are used in the sequence, then check the remainder\n      against the cumulative durations of each effect.\n      I guess the trick is to be sure that my description above is correct.\n      Heh.\n    */\n    let x, y, bPos, sPos, dx\n    this.setOffsetConstants(ticks, effect)\n    for (y = 0; y < SNES_HEIGHT; ++y) {\n      const offset = this.getAppliedOffset(y, distortionEffect)\n      const L = distortionEffect === VERTICAL ? offset : y\n      for (x = 0; x < SNES_WIDTH; ++x) {\n        bPos = x * 4 + y * dstStride\n        if (y < letterbox || y > SNES_HEIGHT - letterbox) {\n          newBitmap[bPos + R] = 0\n          newBitmap[bPos + G] = 0\n          newBitmap[bPos + B] = 0\n          newBitmap[bPos + A] = 255\n          continue\n        }\n        dx = x\n        if (distortionEffect === HORIZONTAL || distortionEffect === HORIZONTAL_INTERLACED) {\n          dx = mod(x + offset, SNES_WIDTH)\n        }\n        sPos = dx * 4 + L * srcStride\n        /* Either copy or add to the destination bitmap */\n        if (erase) {\n          newBitmap[bPos + R] = alpha * oldBitmap[sPos + R]\n          newBitmap[bPos + G] = alpha * oldBitmap[sPos + G]\n          newBitmap[bPos + B] = alpha * oldBitmap[sPos + B]\n          newBitmap[bPos + A] = 255\n        } else {\n          newBitmap[bPos + R] += alpha * oldBitmap[sPos + R]\n          newBitmap[bPos + G] += alpha * oldBitmap[sPos + G]\n          newBitmap[bPos + B] += alpha * oldBitmap[sPos + B]\n          newBitmap[bPos + A] = 255\n        }\n      }\n    }\n    return newBitmap\n  }\n}\n","source":"assets/src/rom/distorter.js","raw":"import { HORIZONTAL, HORIZONTAL_INTERLACED, VERTICAL } from './distortion_effect'\nimport { SNES_WIDTH, SNES_HEIGHT } from '../engine'\nconst { PI: π, sin, round, floor } = Math\nconst R = 0\nconst G = 1\nconst B = 2\nconst A = 3\nfunction mod (n, m) {\n  return ((n % m) + m) % m\n}\nexport default class Distorter {\n  constructor (bitmap) {\n    // There is some redundancy here: 'effect' is currently what is used\n    // in computing frames, although really there should be a list of\n    // four different effects ('dist') which are used in sequence.\n    //\n    // 'distortions' is currently unused, but ComputeFrame should be changed to\n    // make use of it as soon as the precise nature of effect sequencing\n    // can be determined.\n    //\n    // The goal is to make Distorter a general-purpose BG effect class that\n    // can be used to show either a single distortion effect, or to show the\n    // entire sequence of effects associated with a background entry (including\n    // scrolling and Palette animation, which still need to be implemented).\n    //     this.distortions = Array(4).fill(new DistortionEffect());\n    this.bitmap = bitmap\n    /* NOTE: Another discrepancy from Java: These values should be \"short\" and must have a specific precision. This seems to affect backgrounds with distortEffect === HORIZONTAL */\n    this.C1 = 1 / 512\n    this.C2 = 8 * π / (1024 * 256)\n    this.C3 = π / 60\n  }\n  setOffsetConstants (ticks, effect) {\n    const {\n      amplitude,\n      amplitudeAcceleration,\n      compression,\n      compressionAcceleration,\n      frequency,\n      frequencyAcceleration,\n      speed\n    } = effect\n    /* Compute \"current\" values of amplitude, frequency and compression */\n    const t2 = ticks * 2\n    this.amplitude = this.C1 * (amplitude + amplitudeAcceleration * t2)\n    this.frequency = this.C2 * (frequency + (frequencyAcceleration * t2))\n    this.compression = 1 + (compression + (compressionAcceleration * t2)) / 256\n    this.speed = this.C3 * speed * ticks\n    this.S = y => round(this.amplitude * sin(this.frequency * y + this.speed))\n  }\n  overlayFrame (dst, letterbox, ticks, alpha, erase) {\n    return this.computeFrame(dst, this.bitmap, letterbox, ticks, alpha, erase, this.effect)\n  }\n  /**\n  * Evaluates the distortion effect at the given destination line and\n  * time value and returns the computed offset value.\n  * If the distortion mode is horizontal, this offset should be interpreted\n  * as the number of pixels to offset the given line's starting x position.\n  * If the distortion mode is vertical, this offset should be interpreted as\n  * the y-coordinate of the line from the source bitmap to draw at the given\n  * y-coordinate in the destination bitmap.\n  * @param y\n  *   The y-coordinate of the destination line to evaluate for\n  * @param t\n  *   The number of ticks since beginning animation\n  * @return\n  *   The distortion offset for the given (y, t) coordinates\n  */\n  getAppliedOffset (y, distortionEffect) {\n    const s = this.S(y)\n    switch (distortionEffect) {\n      default:\n      case HORIZONTAL:\n        return s\n      case HORIZONTAL_INTERLACED:\n        return y % 2 === 0 ? -s : s\n      case VERTICAL:\n        /* Compute L */\n        return mod(floor(s + y * this.compression), 256)\n    }\n  }\n  computeFrame (destinationBitmap, sourceBitmap, letterbox, ticks, alpha, erase, effect) {\n    const { type: distortionEffect } = effect\n    const newBitmap = destinationBitmap\n    const oldBitmap = sourceBitmap\n    /* TODO: Hardcoing is bad */\n    const dstStride = 1024\n    const srcStride = 1024\n    /*\n      Given the list of 4 distortions and the tick count, decide which\n      effect to use:\n      Basically, we have 4 effects, each possibly with a duration.\n      Evaluation order is: 1, 2, 3, 0\n      If the first effect is null, control transitions to the second effect.\n      If the first and second effects are null, no effect occurs.\n      If any other effect is null, the sequence is truncated.\n      If a non-null effect has a zero duration, it will not be switched\n      away from.\n      Essentially, this configuration sets up a precise and repeating\n      sequence of between 0 and 4 different distortion effects. Once we\n      compute the sequence, computing the particular frame of which distortion\n      to use becomes easy; simply mod the tick count by the total duration\n      of the effects that are used in the sequence, then check the remainder\n      against the cumulative durations of each effect.\n      I guess the trick is to be sure that my description above is correct.\n      Heh.\n    */\n    let x, y, bPos, sPos, dx\n    this.setOffsetConstants(ticks, effect)\n    for (y = 0; y < SNES_HEIGHT; ++y) {\n      const offset = this.getAppliedOffset(y, distortionEffect)\n      const L = distortionEffect === VERTICAL ? offset : y\n      for (x = 0; x < SNES_WIDTH; ++x) {\n        bPos = x * 4 + y * dstStride\n        if (y < letterbox || y > SNES_HEIGHT - letterbox) {\n          newBitmap[bPos + R] = 0\n          newBitmap[bPos + G] = 0\n          newBitmap[bPos + B] = 0\n          newBitmap[bPos + A] = 255\n          continue\n        }\n        dx = x\n        if (distortionEffect === HORIZONTAL || distortionEffect === HORIZONTAL_INTERLACED) {\n          dx = mod(x + offset, SNES_WIDTH)\n        }\n        sPos = dx * 4 + L * srcStride\n        /* Either copy or add to the destination bitmap */\n        if (erase) {\n          newBitmap[bPos + R] = alpha * oldBitmap[sPos + R]\n          newBitmap[bPos + G] = alpha * oldBitmap[sPos + G]\n          newBitmap[bPos + B] = alpha * oldBitmap[sPos + B]\n          newBitmap[bPos + A] = 255\n        } else {\n          newBitmap[bPos + R] += alpha * oldBitmap[sPos + R]\n          newBitmap[bPos + G] += alpha * oldBitmap[sPos + G]\n          newBitmap[bPos + B] += alpha * oldBitmap[sPos + B]\n          newBitmap[bPos + A] = 255\n        }\n      }\n    }\n    return newBitmap\n  }\n}\n","date":"2018-10-05T03:49:47.468Z","updated":"2018-10-05T03:49:47.468Z","path":"assets/src/rom/distorter.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a65000bvh9kapea2kcr","content":"import { HORIZONTAL, HORIZONTAL_INTERLACED, VERTICAL } from './distortion_effect'\nimport { SNES_WIDTH, SNES_HEIGHT } from '../engine'\nconst { PI: π, sin, round, floor } = Math\nconst R = 0\nconst G = 1\nconst B = 2\nconst A = 3\nfunction mod (n, m) {\n  return ((n % m) + m) % m\n}\nexport default class Distorter {\n  constructor (bitmap) {\n    // There is some redundancy here: 'effect' is currently what is used\n    // in computing frames, although really there should be a list of\n    // four different effects ('dist') which are used in sequence.\n    //\n    // 'distortions' is currently unused, but ComputeFrame should be changed to\n    // make use of it as soon as the precise nature of effect sequencing\n    // can be determined.\n    //\n    // The goal is to make Distorter a general-purpose BG effect class that\n    // can be used to show either a single distortion effect, or to show the\n    // entire sequence of effects associated with a background entry (including\n    // scrolling and Palette animation, which still need to be implemented).\n    //     this.distortions = Array(4).fill(new DistortionEffect());\n    this.bitmap = bitmap\n    /* NOTE: Another discrepancy from Java: These values should be \"short\" and must have a specific precision. This seems to affect backgrounds with distortEffect === HORIZONTAL */\n    this.C1 = 1 / 512\n    this.C2 = 8 * π / (1024 * 256)\n    this.C3 = π / 60\n  }\n  setOffsetConstants (ticks, effect) {\n    const {\n      amplitude,\n      amplitudeAcceleration,\n      compression,\n      compressionAcceleration,\n      frequency,\n      frequencyAcceleration,\n      speed\n    } = effect\n    /* Compute \"current\" values of amplitude, frequency and compression */\n    const t2 = ticks * 2\n    this.amplitude = this.C1 * (amplitude + amplitudeAcceleration * t2)\n    this.frequency = this.C2 * (frequency + (frequencyAcceleration * t2))\n    this.compression = 1 + (compression + (compressionAcceleration * t2)) / 256\n    this.speed = this.C3 * speed * ticks\n    this.S = y => round(this.amplitude * sin(this.frequency * y + this.speed))\n  }\n  overlayFrame (dst, letterbox, ticks, alpha, erase) {\n    return this.computeFrame(dst, this.bitmap, letterbox, ticks, alpha, erase, this.effect)\n  }\n  /**\n  * Evaluates the distortion effect at the given destination line and\n  * time value and returns the computed offset value.\n  * If the distortion mode is horizontal, this offset should be interpreted\n  * as the number of pixels to offset the given line's starting x position.\n  * If the distortion mode is vertical, this offset should be interpreted as\n  * the y-coordinate of the line from the source bitmap to draw at the given\n  * y-coordinate in the destination bitmap.\n  * @param y\n  *   The y-coordinate of the destination line to evaluate for\n  * @param t\n  *   The number of ticks since beginning animation\n  * @return\n  *   The distortion offset for the given (y, t) coordinates\n  */\n  getAppliedOffset (y, distortionEffect) {\n    const s = this.S(y)\n    switch (distortionEffect) {\n      default:\n      case HORIZONTAL:\n        return s\n      case HORIZONTAL_INTERLACED:\n        return y % 2 === 0 ? -s : s\n      case VERTICAL:\n        /* Compute L */\n        return mod(floor(s + y * this.compression), 256)\n    }\n  }\n  computeFrame (destinationBitmap, sourceBitmap, letterbox, ticks, alpha, erase, effect) {\n    const { type: distortionEffect } = effect\n    const newBitmap = destinationBitmap\n    const oldBitmap = sourceBitmap\n    /* TODO: Hardcoing is bad */\n    const dstStride = 1024\n    const srcStride = 1024\n    /*\n      Given the list of 4 distortions and the tick count, decide which\n      effect to use:\n      Basically, we have 4 effects, each possibly with a duration.\n      Evaluation order is: 1, 2, 3, 0\n      If the first effect is null, control transitions to the second effect.\n      If the first and second effects are null, no effect occurs.\n      If any other effect is null, the sequence is truncated.\n      If a non-null effect has a zero duration, it will not be switched\n      away from.\n      Essentially, this configuration sets up a precise and repeating\n      sequence of between 0 and 4 different distortion effects. Once we\n      compute the sequence, computing the particular frame of which distortion\n      to use becomes easy; simply mod the tick count by the total duration\n      of the effects that are used in the sequence, then check the remainder\n      against the cumulative durations of each effect.\n      I guess the trick is to be sure that my description above is correct.\n      Heh.\n    */\n    let x, y, bPos, sPos, dx\n    this.setOffsetConstants(ticks, effect)\n    for (y = 0; y < SNES_HEIGHT; ++y) {\n      const offset = this.getAppliedOffset(y, distortionEffect)\n      const L = distortionEffect === VERTICAL ? offset : y\n      for (x = 0; x < SNES_WIDTH; ++x) {\n        bPos = x * 4 + y * dstStride\n        if (y < letterbox || y > SNES_HEIGHT - letterbox) {\n          newBitmap[bPos + R] = 0\n          newBitmap[bPos + G] = 0\n          newBitmap[bPos + B] = 0\n          newBitmap[bPos + A] = 255\n          continue\n        }\n        dx = x\n        if (distortionEffect === HORIZONTAL || distortionEffect === HORIZONTAL_INTERLACED) {\n          dx = mod(x + offset, SNES_WIDTH)\n        }\n        sPos = dx * 4 + L * srcStride\n        /* Either copy or add to the destination bitmap */\n        if (erase) {\n          newBitmap[bPos + R] = alpha * oldBitmap[sPos + R]\n          newBitmap[bPos + G] = alpha * oldBitmap[sPos + G]\n          newBitmap[bPos + B] = alpha * oldBitmap[sPos + B]\n          newBitmap[bPos + A] = 255\n        } else {\n          newBitmap[bPos + R] += alpha * oldBitmap[sPos + R]\n          newBitmap[bPos + G] += alpha * oldBitmap[sPos + G]\n          newBitmap[bPos + B] += alpha * oldBitmap[sPos + B]\n          newBitmap[bPos + A] = 255\n        }\n      }\n    }\n    return newBitmap\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"import { HORIZONTAL, HORIZONTAL_INTERLACED, VERTICAL } from './distortion_effect'\nimport { SNES_WIDTH, SNES_HEIGHT } from '../engine'\nconst { PI: π, sin, round, floor } = Math\nconst R = 0\nconst G = 1\nconst B = 2\nconst A = 3\nfunction mod (n, m) {\n  return ((n % m) + m) % m\n}\nexport default class Distorter {\n  constructor (bitmap) {\n    // There is some redundancy here: 'effect' is currently what is used\n    // in computing frames, although really there should be a list of\n    // four different effects ('dist') which are used in sequence.\n    //\n    // 'distortions' is currently unused, but ComputeFrame should be changed to\n    // make use of it as soon as the precise nature of effect sequencing\n    // can be determined.\n    //\n    // The goal is to make Distorter a general-purpose BG effect class that\n    // can be used to show either a single distortion effect, or to show the\n    // entire sequence of effects associated with a background entry (including\n    // scrolling and Palette animation, which still need to be implemented).\n    //     this.distortions = Array(4).fill(new DistortionEffect());\n    this.bitmap = bitmap\n    /* NOTE: Another discrepancy from Java: These values should be \"short\" and must have a specific precision. This seems to affect backgrounds with distortEffect === HORIZONTAL */\n    this.C1 = 1 / 512\n    this.C2 = 8 * π / (1024 * 256)\n    this.C3 = π / 60\n  }\n  setOffsetConstants (ticks, effect) {\n    const {\n      amplitude,\n      amplitudeAcceleration,\n      compression,\n      compressionAcceleration,\n      frequency,\n      frequencyAcceleration,\n      speed\n    } = effect\n    /* Compute \"current\" values of amplitude, frequency and compression */\n    const t2 = ticks * 2\n    this.amplitude = this.C1 * (amplitude + amplitudeAcceleration * t2)\n    this.frequency = this.C2 * (frequency + (frequencyAcceleration * t2))\n    this.compression = 1 + (compression + (compressionAcceleration * t2)) / 256\n    this.speed = this.C3 * speed * ticks\n    this.S = y => round(this.amplitude * sin(this.frequency * y + this.speed))\n  }\n  overlayFrame (dst, letterbox, ticks, alpha, erase) {\n    return this.computeFrame(dst, this.bitmap, letterbox, ticks, alpha, erase, this.effect)\n  }\n  /**\n  * Evaluates the distortion effect at the given destination line and\n  * time value and returns the computed offset value.\n  * If the distortion mode is horizontal, this offset should be interpreted\n  * as the number of pixels to offset the given line's starting x position.\n  * If the distortion mode is vertical, this offset should be interpreted as\n  * the y-coordinate of the line from the source bitmap to draw at the given\n  * y-coordinate in the destination bitmap.\n  * @param y\n  *   The y-coordinate of the destination line to evaluate for\n  * @param t\n  *   The number of ticks since beginning animation\n  * @return\n  *   The distortion offset for the given (y, t) coordinates\n  */\n  getAppliedOffset (y, distortionEffect) {\n    const s = this.S(y)\n    switch (distortionEffect) {\n      default:\n      case HORIZONTAL:\n        return s\n      case HORIZONTAL_INTERLACED:\n        return y % 2 === 0 ? -s : s\n      case VERTICAL:\n        /* Compute L */\n        return mod(floor(s + y * this.compression), 256)\n    }\n  }\n  computeFrame (destinationBitmap, sourceBitmap, letterbox, ticks, alpha, erase, effect) {\n    const { type: distortionEffect } = effect\n    const newBitmap = destinationBitmap\n    const oldBitmap = sourceBitmap\n    /* TODO: Hardcoing is bad */\n    const dstStride = 1024\n    const srcStride = 1024\n    /*\n      Given the list of 4 distortions and the tick count, decide which\n      effect to use:\n      Basically, we have 4 effects, each possibly with a duration.\n      Evaluation order is: 1, 2, 3, 0\n      If the first effect is null, control transitions to the second effect.\n      If the first and second effects are null, no effect occurs.\n      If any other effect is null, the sequence is truncated.\n      If a non-null effect has a zero duration, it will not be switched\n      away from.\n      Essentially, this configuration sets up a precise and repeating\n      sequence of between 0 and 4 different distortion effects. Once we\n      compute the sequence, computing the particular frame of which distortion\n      to use becomes easy; simply mod the tick count by the total duration\n      of the effects that are used in the sequence, then check the remainder\n      against the cumulative durations of each effect.\n      I guess the trick is to be sure that my description above is correct.\n      Heh.\n    */\n    let x, y, bPos, sPos, dx\n    this.setOffsetConstants(ticks, effect)\n    for (y = 0; y < SNES_HEIGHT; ++y) {\n      const offset = this.getAppliedOffset(y, distortionEffect)\n      const L = distortionEffect === VERTICAL ? offset : y\n      for (x = 0; x < SNES_WIDTH; ++x) {\n        bPos = x * 4 + y * dstStride\n        if (y < letterbox || y > SNES_HEIGHT - letterbox) {\n          newBitmap[bPos + R] = 0\n          newBitmap[bPos + G] = 0\n          newBitmap[bPos + B] = 0\n          newBitmap[bPos + A] = 255\n          continue\n        }\n        dx = x\n        if (distortionEffect === HORIZONTAL || distortionEffect === HORIZONTAL_INTERLACED) {\n          dx = mod(x + offset, SNES_WIDTH)\n        }\n        sPos = dx * 4 + L * srcStride\n        /* Either copy or add to the destination bitmap */\n        if (erase) {\n          newBitmap[bPos + R] = alpha * oldBitmap[sPos + R]\n          newBitmap[bPos + G] = alpha * oldBitmap[sPos + G]\n          newBitmap[bPos + B] = alpha * oldBitmap[sPos + B]\n          newBitmap[bPos + A] = 255\n        } else {\n          newBitmap[bPos + R] += alpha * oldBitmap[sPos + R]\n          newBitmap[bPos + G] += alpha * oldBitmap[sPos + G]\n          newBitmap[bPos + B] += alpha * oldBitmap[sPos + B]\n          newBitmap[bPos + A] = 255\n        }\n      }\n    }\n    return newBitmap\n  }\n}\n"},{"_content":"import { readBlock } from './rom'\nexport const HORIZONTAL = 1\nexport const HORIZONTAL_INTERLACED = 2\nexport const VERTICAL = 3\n/* The data in effects is stored as uint8, but when we compute with them, we need to cast the results to int16. */\nfunction asInt16 (value) {\n  return new Int16Array([value])[0]\n}\nexport default class DistortionEffect {\n  constructor (index = 0) {\n    this.data = new Uint8Array(17)\n    this.read(index)\n  }\n  /* Is not caching distortion effects doing any harm? */\n  //   static handler() {\n  //     for (let i = 0; i < 135; ++i) {\n  //       ROM.add(new DistortionEffect(i));\n  //     }\n  //   }\n  static sanitize (type) {\n    if (type !== HORIZONTAL && type !== VERTICAL) {\n      return HORIZONTAL_INTERLACED\n    } else {\n      return type\n    }\n  }\n  get type () {\n    return DistortionEffect.sanitize(this.data[2])\n  }\n  set type (value) {\n    this.data[2] = DistortionEffect.sanitize(this.data[2])\n  }\n  //   get duration() {\n  //     return asInt16(this.data[0] + (this.data[1] << 8));\n  //   }\n  //   set duration(value) {\n  //     this.data[0] = value;\n  //     this.data[1] = value >> 8;\n  //   }\n  get frequency () {\n    return asInt16(this.data[3] + (this.data[4] << 8))\n  }\n  set frequency (value) {\n    this.data[3] = value\n    this.data[4] = value >> 8\n  }\n  get amplitude () {\n    return asInt16(this.data[5] + (this.data[6] << 8))\n  }\n  set amplitude (value) {\n    this.data[5] = value\n    this.data[6] = value >> 8\n  }\n  get compression () {\n    return asInt16(this.data[8] + (this.data[9] << 8))\n  }\n  set compression (value) {\n    this.data[8] = value\n    this.data[9] = value >> 8\n  }\n  get frequencyAcceleration () {\n    return asInt16(this.data[10] + (this.data[11] << 8))\n  }\n  set frequencyAcceleration (value) {\n    this.data[10] = value\n    this.data[11] = value >> 8\n  }\n  get amplitudeAcceleration () {\n    return asInt16(this.data[12] + (this.data[13] << 8))\n  }\n  set amplitudeAcceleration (value) {\n    this.data[12] = value\n    this.data[13] = value >> 8\n  }\n  get speed () {\n    return asInt16(this.data[14])\n  }\n  set speed (value) {\n    this.data[14] = value\n  }\n  get compressionAcceleration () {\n    return asInt16(this.data[15] + (this.data[16] << 8))\n  }\n  set compressionAcceleration (value) {\n    this.data[15] = value\n    this.data[16] = value >> 8\n  }\n  read (index) {\n    const main = readBlock(0xF708 + index * 17)\n    for (let i = 0; i < 17; ++i) {\n      this.data[i] = main.readInt16()\n    }\n  }\n}\n","source":"assets/src/rom/distortion_effect.js","raw":"import { readBlock } from './rom'\nexport const HORIZONTAL = 1\nexport const HORIZONTAL_INTERLACED = 2\nexport const VERTICAL = 3\n/* The data in effects is stored as uint8, but when we compute with them, we need to cast the results to int16. */\nfunction asInt16 (value) {\n  return new Int16Array([value])[0]\n}\nexport default class DistortionEffect {\n  constructor (index = 0) {\n    this.data = new Uint8Array(17)\n    this.read(index)\n  }\n  /* Is not caching distortion effects doing any harm? */\n  //   static handler() {\n  //     for (let i = 0; i < 135; ++i) {\n  //       ROM.add(new DistortionEffect(i));\n  //     }\n  //   }\n  static sanitize (type) {\n    if (type !== HORIZONTAL && type !== VERTICAL) {\n      return HORIZONTAL_INTERLACED\n    } else {\n      return type\n    }\n  }\n  get type () {\n    return DistortionEffect.sanitize(this.data[2])\n  }\n  set type (value) {\n    this.data[2] = DistortionEffect.sanitize(this.data[2])\n  }\n  //   get duration() {\n  //     return asInt16(this.data[0] + (this.data[1] << 8));\n  //   }\n  //   set duration(value) {\n  //     this.data[0] = value;\n  //     this.data[1] = value >> 8;\n  //   }\n  get frequency () {\n    return asInt16(this.data[3] + (this.data[4] << 8))\n  }\n  set frequency (value) {\n    this.data[3] = value\n    this.data[4] = value >> 8\n  }\n  get amplitude () {\n    return asInt16(this.data[5] + (this.data[6] << 8))\n  }\n  set amplitude (value) {\n    this.data[5] = value\n    this.data[6] = value >> 8\n  }\n  get compression () {\n    return asInt16(this.data[8] + (this.data[9] << 8))\n  }\n  set compression (value) {\n    this.data[8] = value\n    this.data[9] = value >> 8\n  }\n  get frequencyAcceleration () {\n    return asInt16(this.data[10] + (this.data[11] << 8))\n  }\n  set frequencyAcceleration (value) {\n    this.data[10] = value\n    this.data[11] = value >> 8\n  }\n  get amplitudeAcceleration () {\n    return asInt16(this.data[12] + (this.data[13] << 8))\n  }\n  set amplitudeAcceleration (value) {\n    this.data[12] = value\n    this.data[13] = value >> 8\n  }\n  get speed () {\n    return asInt16(this.data[14])\n  }\n  set speed (value) {\n    this.data[14] = value\n  }\n  get compressionAcceleration () {\n    return asInt16(this.data[15] + (this.data[16] << 8))\n  }\n  set compressionAcceleration (value) {\n    this.data[15] = value\n    this.data[16] = value >> 8\n  }\n  read (index) {\n    const main = readBlock(0xF708 + index * 17)\n    for (let i = 0; i < 17; ++i) {\n      this.data[i] = main.readInt16()\n    }\n  }\n}\n","date":"2018-10-05T03:49:47.468Z","updated":"2018-10-05T03:49:47.468Z","path":"assets/src/rom/distortion_effect.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a65000cvh9kr5m5lhwg","content":"import { readBlock } from './rom'\nexport const HORIZONTAL = 1\nexport const HORIZONTAL_INTERLACED = 2\nexport const VERTICAL = 3\n/* The data in effects is stored as uint8, but when we compute with them, we need to cast the results to int16. */\nfunction asInt16 (value) {\n  return new Int16Array([value])[0]\n}\nexport default class DistortionEffect {\n  constructor (index = 0) {\n    this.data = new Uint8Array(17)\n    this.read(index)\n  }\n  /* Is not caching distortion effects doing any harm? */\n  //   static handler() {\n  //     for (let i = 0; i < 135; ++i) {\n  //       ROM.add(new DistortionEffect(i));\n  //     }\n  //   }\n  static sanitize (type) {\n    if (type !== HORIZONTAL && type !== VERTICAL) {\n      return HORIZONTAL_INTERLACED\n    } else {\n      return type\n    }\n  }\n  get type () {\n    return DistortionEffect.sanitize(this.data[2])\n  }\n  set type (value) {\n    this.data[2] = DistortionEffect.sanitize(this.data[2])\n  }\n  //   get duration() {\n  //     return asInt16(this.data[0] + (this.data[1] << 8));\n  //   }\n  //   set duration(value) {\n  //     this.data[0] = value;\n  //     this.data[1] = value >> 8;\n  //   }\n  get frequency () {\n    return asInt16(this.data[3] + (this.data[4] << 8))\n  }\n  set frequency (value) {\n    this.data[3] = value\n    this.data[4] = value >> 8\n  }\n  get amplitude () {\n    return asInt16(this.data[5] + (this.data[6] << 8))\n  }\n  set amplitude (value) {\n    this.data[5] = value\n    this.data[6] = value >> 8\n  }\n  get compression () {\n    return asInt16(this.data[8] + (this.data[9] << 8))\n  }\n  set compression (value) {\n    this.data[8] = value\n    this.data[9] = value >> 8\n  }\n  get frequencyAcceleration () {\n    return asInt16(this.data[10] + (this.data[11] << 8))\n  }\n  set frequencyAcceleration (value) {\n    this.data[10] = value\n    this.data[11] = value >> 8\n  }\n  get amplitudeAcceleration () {\n    return asInt16(this.data[12] + (this.data[13] << 8))\n  }\n  set amplitudeAcceleration (value) {\n    this.data[12] = value\n    this.data[13] = value >> 8\n  }\n  get speed () {\n    return asInt16(this.data[14])\n  }\n  set speed (value) {\n    this.data[14] = value\n  }\n  get compressionAcceleration () {\n    return asInt16(this.data[15] + (this.data[16] << 8))\n  }\n  set compressionAcceleration (value) {\n    this.data[15] = value\n    this.data[16] = value >> 8\n  }\n  read (index) {\n    const main = readBlock(0xF708 + index * 17)\n    for (let i = 0; i < 17; ++i) {\n      this.data[i] = main.readInt16()\n    }\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"import { readBlock } from './rom'\nexport const HORIZONTAL = 1\nexport const HORIZONTAL_INTERLACED = 2\nexport const VERTICAL = 3\n/* The data in effects is stored as uint8, but when we compute with them, we need to cast the results to int16. */\nfunction asInt16 (value) {\n  return new Int16Array([value])[0]\n}\nexport default class DistortionEffect {\n  constructor (index = 0) {\n    this.data = new Uint8Array(17)\n    this.read(index)\n  }\n  /* Is not caching distortion effects doing any harm? */\n  //   static handler() {\n  //     for (let i = 0; i < 135; ++i) {\n  //       ROM.add(new DistortionEffect(i));\n  //     }\n  //   }\n  static sanitize (type) {\n    if (type !== HORIZONTAL && type !== VERTICAL) {\n      return HORIZONTAL_INTERLACED\n    } else {\n      return type\n    }\n  }\n  get type () {\n    return DistortionEffect.sanitize(this.data[2])\n  }\n  set type (value) {\n    this.data[2] = DistortionEffect.sanitize(this.data[2])\n  }\n  //   get duration() {\n  //     return asInt16(this.data[0] + (this.data[1] << 8));\n  //   }\n  //   set duration(value) {\n  //     this.data[0] = value;\n  //     this.data[1] = value >> 8;\n  //   }\n  get frequency () {\n    return asInt16(this.data[3] + (this.data[4] << 8))\n  }\n  set frequency (value) {\n    this.data[3] = value\n    this.data[4] = value >> 8\n  }\n  get amplitude () {\n    return asInt16(this.data[5] + (this.data[6] << 8))\n  }\n  set amplitude (value) {\n    this.data[5] = value\n    this.data[6] = value >> 8\n  }\n  get compression () {\n    return asInt16(this.data[8] + (this.data[9] << 8))\n  }\n  set compression (value) {\n    this.data[8] = value\n    this.data[9] = value >> 8\n  }\n  get frequencyAcceleration () {\n    return asInt16(this.data[10] + (this.data[11] << 8))\n  }\n  set frequencyAcceleration (value) {\n    this.data[10] = value\n    this.data[11] = value >> 8\n  }\n  get amplitudeAcceleration () {\n    return asInt16(this.data[12] + (this.data[13] << 8))\n  }\n  set amplitudeAcceleration (value) {\n    this.data[12] = value\n    this.data[13] = value >> 8\n  }\n  get speed () {\n    return asInt16(this.data[14])\n  }\n  set speed (value) {\n    this.data[14] = value\n  }\n  get compressionAcceleration () {\n    return asInt16(this.data[15] + (this.data[16] << 8))\n  }\n  set compressionAcceleration (value) {\n    this.data[15] = value\n    this.data[16] = value >> 8\n  }\n  read (index) {\n    const main = readBlock(0xF708 + index * 17)\n    for (let i = 0; i < 17; ++i) {\n      this.data[i] = main.readInt16()\n    }\n  }\n}\n"},{"_content":"export default class PaletteCycle {\n  constructor ({\n    background,\n    palette\n  }) {\n    this.type = background.paletteCycleType\n    this.start1 = background.paletteCycle1Start\n    this.end1 = background.paletteCycle1End\n    this.start2 = background.paletteCycle2Start\n    this.end2 = background.paletteCycle2End\n    /* TODO: Why divide by 2? */\n    this.speed = background.paletteCycleSpeed / 2\n    this.cycleCountdown = this.speed\n    this.cycleCount = 0\n    this.originalColors = palette.getColorMatrix()\n    this.nowColors = []\n    /* Duplicate the original colors to make cycle math easier */\n    for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n      this.nowColors[subPaletteNumber] = []\n      for (let i = 16; i < 32; ++i) {\n        this.originalColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][i - 16]\n        this.nowColors[subPaletteNumber][i - 16] = this.originalColors[subPaletteNumber][i]\n      }\n    }\n  }\n  getEffect () {\n    return this.type\n  }\n  getColors (subPalette) {\n    return this.nowColors[subPalette]\n  }\n  cycle () {\n    if (this.speed === 0) {\n      return false\n    }\n    --this.cycleCountdown\n    if (this.cycleCountdown <= 0) {\n      this.cycleColors()\n      ++this.cycleCount\n      this.cycleCountdown = this.speed\n      return true\n    }\n    return false\n  }\n  cycleColors () {\n    if (this.type === 1 || this.type === 2) {\n      const cycleLength = this.end1 - this.start1 + 1\n      const cycle1Position = this.cycleCount % cycleLength\n      for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n        for (let i = this.start1; i <= this.end1; ++i) {\n          let newColor = i - cycle1Position\n          if (newColor < this.start1) {\n            newColor += cycleLength\n          }\n          this.nowColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][newColor]\n        }\n      }\n    }\n    if (this.type === 2) {\n      const cycleLength = this.end2 - this.start2 + 1\n      const cycle2Position = this.cycleCount % cycleLength\n      for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n        for (let i = this.start2; i <= this.end2; ++i) {\n          let newColor = i - cycle2Position\n          if (newColor < this.start2) {\n            newColor += cycleLength\n          }\n          this.nowColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][newColor]\n        }\n      }\n    }\n    if (this.type === 3) {\n      const cycleLength = this.end1 - this.start1 + 1\n      const cycle1Position = this.cycleCount % (cycleLength * 2)\n      for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n        for (let i = this.start1; i <= this.end1; ++i) {\n          let newColor = i + cycle1Position\n          let difference = 0\n          if (newColor > this.end1) {\n            difference = newColor - this.end1 - 1\n            newColor = this.end1 - difference\n            if (newColor < this.start1) {\n              difference = this.start1 - newColor - 1\n              newColor = this.start1 + difference\n            }\n          }\n          this.nowColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][newColor]\n        }\n      }\n    }\n  }\n}\n","source":"assets/src/rom/palette_cycle.js","raw":"export default class PaletteCycle {\n  constructor ({\n    background,\n    palette\n  }) {\n    this.type = background.paletteCycleType\n    this.start1 = background.paletteCycle1Start\n    this.end1 = background.paletteCycle1End\n    this.start2 = background.paletteCycle2Start\n    this.end2 = background.paletteCycle2End\n    /* TODO: Why divide by 2? */\n    this.speed = background.paletteCycleSpeed / 2\n    this.cycleCountdown = this.speed\n    this.cycleCount = 0\n    this.originalColors = palette.getColorMatrix()\n    this.nowColors = []\n    /* Duplicate the original colors to make cycle math easier */\n    for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n      this.nowColors[subPaletteNumber] = []\n      for (let i = 16; i < 32; ++i) {\n        this.originalColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][i - 16]\n        this.nowColors[subPaletteNumber][i - 16] = this.originalColors[subPaletteNumber][i]\n      }\n    }\n  }\n  getEffect () {\n    return this.type\n  }\n  getColors (subPalette) {\n    return this.nowColors[subPalette]\n  }\n  cycle () {\n    if (this.speed === 0) {\n      return false\n    }\n    --this.cycleCountdown\n    if (this.cycleCountdown <= 0) {\n      this.cycleColors()\n      ++this.cycleCount\n      this.cycleCountdown = this.speed\n      return true\n    }\n    return false\n  }\n  cycleColors () {\n    if (this.type === 1 || this.type === 2) {\n      const cycleLength = this.end1 - this.start1 + 1\n      const cycle1Position = this.cycleCount % cycleLength\n      for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n        for (let i = this.start1; i <= this.end1; ++i) {\n          let newColor = i - cycle1Position\n          if (newColor < this.start1) {\n            newColor += cycleLength\n          }\n          this.nowColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][newColor]\n        }\n      }\n    }\n    if (this.type === 2) {\n      const cycleLength = this.end2 - this.start2 + 1\n      const cycle2Position = this.cycleCount % cycleLength\n      for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n        for (let i = this.start2; i <= this.end2; ++i) {\n          let newColor = i - cycle2Position\n          if (newColor < this.start2) {\n            newColor += cycleLength\n          }\n          this.nowColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][newColor]\n        }\n      }\n    }\n    if (this.type === 3) {\n      const cycleLength = this.end1 - this.start1 + 1\n      const cycle1Position = this.cycleCount % (cycleLength * 2)\n      for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n        for (let i = this.start1; i <= this.end1; ++i) {\n          let newColor = i + cycle1Position\n          let difference = 0\n          if (newColor > this.end1) {\n            difference = newColor - this.end1 - 1\n            newColor = this.end1 - difference\n            if (newColor < this.start1) {\n              difference = this.start1 - newColor - 1\n              newColor = this.start1 + difference\n            }\n          }\n          this.nowColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][newColor]\n        }\n      }\n    }\n  }\n}\n","date":"2018-10-05T03:49:47.469Z","updated":"2018-10-05T03:49:47.469Z","path":"assets/src/rom/palette_cycle.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a66000dvh9khngwaom2","content":"export default class PaletteCycle {\n  constructor ({\n    background,\n    palette\n  }) {\n    this.type = background.paletteCycleType\n    this.start1 = background.paletteCycle1Start\n    this.end1 = background.paletteCycle1End\n    this.start2 = background.paletteCycle2Start\n    this.end2 = background.paletteCycle2End\n    /* TODO: Why divide by 2? */\n    this.speed = background.paletteCycleSpeed / 2\n    this.cycleCountdown = this.speed\n    this.cycleCount = 0\n    this.originalColors = palette.getColorMatrix()\n    this.nowColors = []\n    /* Duplicate the original colors to make cycle math easier */\n    for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n      this.nowColors[subPaletteNumber] = []\n      for (let i = 16; i < 32; ++i) {\n        this.originalColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][i - 16]\n        this.nowColors[subPaletteNumber][i - 16] = this.originalColors[subPaletteNumber][i]\n      }\n    }\n  }\n  getEffect () {\n    return this.type\n  }\n  getColors (subPalette) {\n    return this.nowColors[subPalette]\n  }\n  cycle () {\n    if (this.speed === 0) {\n      return false\n    }\n    --this.cycleCountdown\n    if (this.cycleCountdown <= 1=\"\" 0)=\"\" {=\"\" this.cyclecolors()=\"\" ++this.cyclecount=\"\" this.cyclecountdown=\"this.speed\" return=\"\" true=\"\" }=\"\" false=\"\" cyclecolors=\"\" ()=\"\" if=\"\" (this.type=\"==\" ||=\"\" this.type=\"==\" 2)=\"\" const=\"\" cyclelength=\"this.end1\" -=\"\" this.start1=\"\" +=\"\" cycle1position=\"this.cycleCount\" %=\"\" for=\"\" (let=\"\" subpalettenumber=\"0;\" <=\"\" this.originalcolors.length;=\"\" ++subpalettenumber)=\"\" i=\"this.start1;\" ++i)=\"\" let=\"\" newcolor=\"i\" (newcolor=\"\" this.start1)=\"\" this.nowcolors[subpalettenumber][i]=\"this.originalColors[subPaletteNumber][newColor]\" this.start2=\"\" cycle2position=\"this.cycleCount\" this.start2)=\"\" 3)=\"\" (cyclelength=\"\" *=\"\" difference=\"0\"> this.end1) {\n            difference = newColor - this.end1 - 1\n            newColor = this.end1 - difference\n            if (newColor < this.start1) {\n              difference = this.start1 - newColor - 1\n              newColor = this.start1 + difference\n            }\n          }\n          this.nowColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][newColor]\n        }\n      }\n    }\n  }\n}\n</=>","site":{"data":{}},"excerpt":"","more":"export default class PaletteCycle {\n  constructor ({\n    background,\n    palette\n  }) {\n    this.type = background.paletteCycleType\n    this.start1 = background.paletteCycle1Start\n    this.end1 = background.paletteCycle1End\n    this.start2 = background.paletteCycle2Start\n    this.end2 = background.paletteCycle2End\n    /* TODO: Why divide by 2? */\n    this.speed = background.paletteCycleSpeed / 2\n    this.cycleCountdown = this.speed\n    this.cycleCount = 0\n    this.originalColors = palette.getColorMatrix()\n    this.nowColors = []\n    /* Duplicate the original colors to make cycle math easier */\n    for (let subPaletteNumber = 0; subPaletteNumber < this.originalColors.length; ++subPaletteNumber) {\n      this.nowColors[subPaletteNumber] = []\n      for (let i = 16; i < 32; ++i) {\n        this.originalColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][i - 16]\n        this.nowColors[subPaletteNumber][i - 16] = this.originalColors[subPaletteNumber][i]\n      }\n    }\n  }\n  getEffect () {\n    return this.type\n  }\n  getColors (subPalette) {\n    return this.nowColors[subPalette]\n  }\n  cycle () {\n    if (this.speed === 0) {\n      return false\n    }\n    --this.cycleCountdown\n    if (this.cycleCountdown <= 1=\"\" 0)=\"\" {=\"\" this.cyclecolors()=\"\" ++this.cyclecount=\"\" this.cyclecountdown=\"this.speed\" return=\"\" true=\"\" }=\"\" false=\"\" cyclecolors=\"\" ()=\"\" if=\"\" (this.type=\"==\" ||=\"\" this.type=\"==\" 2)=\"\" const=\"\" cyclelength=\"this.end1\" -=\"\" this.start1=\"\" +=\"\" cycle1position=\"this.cycleCount\" %=\"\" for=\"\" (let=\"\" subpalettenumber=\"0;\" <=\"\" this.originalcolors.length;=\"\" ++subpalettenumber)=\"\" i=\"this.start1;\" ++i)=\"\" let=\"\" newcolor=\"i\" (newcolor=\"\" this.start1)=\"\" this.nowcolors[subpalettenumber][i]=\"this.originalColors[subPaletteNumber][newColor]\" this.start2=\"\" cycle2position=\"this.cycleCount\" this.start2)=\"\" 3)=\"\" (cyclelength=\"\" *=\"\" difference=\"0\"> this.end1) {\n            difference = newColor - this.end1 - 1\n            newColor = this.end1 - difference\n            if (newColor < this.start1) {\n              difference = this.start1 - newColor - 1\n              newColor = this.start1 + difference\n            }\n          }\n          this.nowColors[subPaletteNumber][i] = this.originalColors[subPaletteNumber][newColor]\n        }\n      }\n    }\n  }\n}\n</=>"},{"_content":"export default class ROMGraphics {\n  constructor (bitsPerPixel) {\n    this.bitsPerPixel = bitsPerPixel\n  }\n  /* Internal function - builds the tile array from the graphics buffer. */\n  buildTiles () {\n    const n = this.gfxROMGraphics.length / (8 * this.bitsPerPixel)\n    this.tiles = []\n    for (let i = 0; i < n; ++i) {\n      this.tiles.push(new Array(8))\n      const o = i * 8 * this.bitsPerPixel\n      for (let x = 0; x < 8; ++x) {\n        this.tiles[i][x] = new Array(8)\n        for (let y = 0; y < 8; ++y) {\n          let c = 0\n          for (let bp = 0; bp < this.bitsPerPixel; ++bp) {\n            // NOTE: Such a slight bug! We must Math.floor this value, due to the possibility of a number like 0.5 (which should equal 0).\n            const halfBp = Math.floor(bp / 2)\n            const gfx = this.gfxROMGraphics[o + y * 2 + (halfBp * 16 + (bp & 1))]\n            c += ((gfx & (1 << 7 - x)) >> 7 - x) << bp\n          }\n          this.tiles[i][x][y] = c\n        }\n      }\n    }\n  }\n  /* JNI C code */\n  draw (bmp, palette, arrayROMGraphics) {\n    const data = bmp\n    let block = 0\n    let tile = 0\n    let subPalette = 0\n    let n = 0\n    let b1 = 0\n    let b2 = 0\n    let verticalFlip = false\n    let horizontalFlip = false\n    /* TODO: Hardcoding is bad; how do I get the stride normally? */\n    const stride = 1024\n    /* For each pixel in the 256×256 grid, we need to render the image found in the dump */\n    for (let i = 0; i < 32; ++i) {\n      for (let j = 0; j < 32; ++j) {\n        n = j * 32 + i\n        b1 = arrayROMGraphics[n * 2]\n        b2 = arrayROMGraphics[n * 2 + 1] << 8\n        block = b1 + b2\n        tile = block & 0x3FF\n        verticalFlip = (block & 0x8000) !== 0\n        horizontalFlip = (block & 0x4000) !== 0\n        subPalette = (block >> 10) & 7\n        this.drawTile(data, stride, i * 8, j * 8, palette, tile, subPalette, verticalFlip, horizontalFlip)\n      }\n    }\n    return data\n  }\n  drawTile (pixels, stride, x, y, palette, tile, subPalette, verticalFlip, horizontalFlip) {\n    const subPaletteArray = palette.getColors(subPalette)\n    let i, j, px, py, pos, rgbArray\n    for (i = 0; i < 8; ++i) {\n      if (horizontalFlip) {\n        px = x + 7 - i\n      } else {\n        px = x + i\n      }\n      for (j = 0; j < 8; ++j) {\n        rgbArray = subPaletteArray[this.tiles[tile][i][j]]\n        if (verticalFlip) {\n          py = y + 7 - j\n        } else {\n          py = y + j\n        }\n        pos = 4 * px + stride * py\n        pixels[pos + 0] = (rgbArray >> 16) & 0xFF\n        pixels[pos + 1] = (rgbArray >> 8) & 0xFF\n        pixels[pos + 2] = (rgbArray) & 0xFF\n      }\n    }\n    return pixels\n  }\n  /**\n  * Internal function - reads graphics from the specified block and builds\n  * tileset.\n  *\n  * @param block\n  * The block to read graphics data from\n  */\n  loadGraphics (block) {\n    this.gfxROMGraphics = block.decompress()\n    this.buildTiles()\n  }\n}\n","source":"assets/src/rom/rom_graphics.js","raw":"export default class ROMGraphics {\n  constructor (bitsPerPixel) {\n    this.bitsPerPixel = bitsPerPixel\n  }\n  /* Internal function - builds the tile array from the graphics buffer. */\n  buildTiles () {\n    const n = this.gfxROMGraphics.length / (8 * this.bitsPerPixel)\n    this.tiles = []\n    for (let i = 0; i < n; ++i) {\n      this.tiles.push(new Array(8))\n      const o = i * 8 * this.bitsPerPixel\n      for (let x = 0; x < 8; ++x) {\n        this.tiles[i][x] = new Array(8)\n        for (let y = 0; y < 8; ++y) {\n          let c = 0\n          for (let bp = 0; bp < this.bitsPerPixel; ++bp) {\n            // NOTE: Such a slight bug! We must Math.floor this value, due to the possibility of a number like 0.5 (which should equal 0).\n            const halfBp = Math.floor(bp / 2)\n            const gfx = this.gfxROMGraphics[o + y * 2 + (halfBp * 16 + (bp & 1))]\n            c += ((gfx & (1 << 7 - x)) >> 7 - x) << bp\n          }\n          this.tiles[i][x][y] = c\n        }\n      }\n    }\n  }\n  /* JNI C code */\n  draw (bmp, palette, arrayROMGraphics) {\n    const data = bmp\n    let block = 0\n    let tile = 0\n    let subPalette = 0\n    let n = 0\n    let b1 = 0\n    let b2 = 0\n    let verticalFlip = false\n    let horizontalFlip = false\n    /* TODO: Hardcoding is bad; how do I get the stride normally? */\n    const stride = 1024\n    /* For each pixel in the 256×256 grid, we need to render the image found in the dump */\n    for (let i = 0; i < 32; ++i) {\n      for (let j = 0; j < 32; ++j) {\n        n = j * 32 + i\n        b1 = arrayROMGraphics[n * 2]\n        b2 = arrayROMGraphics[n * 2 + 1] << 8\n        block = b1 + b2\n        tile = block & 0x3FF\n        verticalFlip = (block & 0x8000) !== 0\n        horizontalFlip = (block & 0x4000) !== 0\n        subPalette = (block >> 10) & 7\n        this.drawTile(data, stride, i * 8, j * 8, palette, tile, subPalette, verticalFlip, horizontalFlip)\n      }\n    }\n    return data\n  }\n  drawTile (pixels, stride, x, y, palette, tile, subPalette, verticalFlip, horizontalFlip) {\n    const subPaletteArray = palette.getColors(subPalette)\n    let i, j, px, py, pos, rgbArray\n    for (i = 0; i < 8; ++i) {\n      if (horizontalFlip) {\n        px = x + 7 - i\n      } else {\n        px = x + i\n      }\n      for (j = 0; j < 8; ++j) {\n        rgbArray = subPaletteArray[this.tiles[tile][i][j]]\n        if (verticalFlip) {\n          py = y + 7 - j\n        } else {\n          py = y + j\n        }\n        pos = 4 * px + stride * py\n        pixels[pos + 0] = (rgbArray >> 16) & 0xFF\n        pixels[pos + 1] = (rgbArray >> 8) & 0xFF\n        pixels[pos + 2] = (rgbArray) & 0xFF\n      }\n    }\n    return pixels\n  }\n  /**\n  * Internal function - reads graphics from the specified block and builds\n  * tileset.\n  *\n  * @param block\n  * The block to read graphics data from\n  */\n  loadGraphics (block) {\n    this.gfxROMGraphics = block.decompress()\n    this.buildTiles()\n  }\n}\n","date":"2018-10-05T03:49:47.469Z","updated":"2018-10-05T03:49:47.469Z","path":"assets/src/rom/rom_graphics.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a67000evh9kjgfsibad","content":"export default class ROMGraphics {\n  constructor (bitsPerPixel) {\n    this.bitsPerPixel = bitsPerPixel\n  }\n  /* Internal function - builds the tile array from the graphics buffer. */\n  buildTiles () {\n    const n = this.gfxROMGraphics.length / (8 * this.bitsPerPixel)\n    this.tiles = []\n    for (let i = 0; i < n; ++i) {\n      this.tiles.push(new Array(8))\n      const o = i * 8 * this.bitsPerPixel\n      for (let x = 0; x < 8; ++x) {\n        this.tiles[i][x] = new Array(8)\n        for (let y = 0; y < 8; ++y) {\n          let c = 0\n          for (let bp = 0; bp < this.bitsPerPixel; ++bp) {\n            // NOTE: Such a slight bug! We must Math.floor this value, due to the possibility of a number like 0.5 (which should equal 0).\n            const halfBp = Math.floor(bp / 2)\n            const gfx = this.gfxROMGraphics[o + y * 2 + (halfBp * 16 + (bp & 1))]\n            c += ((gfx & (1 << 7 - x)) >> 7 - x) << bp\n          }\n          this.tiles[i][x][y] = c\n        }\n      }\n    }\n  }\n  /* JNI C code */\n  draw (bmp, palette, arrayROMGraphics) {\n    const data = bmp\n    let block = 0\n    let tile = 0\n    let subPalette = 0\n    let n = 0\n    let b1 = 0\n    let b2 = 0\n    let verticalFlip = false\n    let horizontalFlip = false\n    /* TODO: Hardcoding is bad; how do I get the stride normally? */\n    const stride = 1024\n    /* For each pixel in the 256×256 grid, we need to render the image found in the dump */\n    for (let i = 0; i < 32; ++i) {\n      for (let j = 0; j < 32; ++j) {\n        n = j * 32 + i\n        b1 = arrayROMGraphics[n * 2]\n        b2 = arrayROMGraphics[n * 2 + 1] << 8\n        block = b1 + b2\n        tile = block & 0x3FF\n        verticalFlip = (block & 0x8000) !== 0\n        horizontalFlip = (block & 0x4000) !== 0\n        subPalette = (block >> 10) & 7\n        this.drawTile(data, stride, i * 8, j * 8, palette, tile, subPalette, verticalFlip, horizontalFlip)\n      }\n    }\n    return data\n  }\n  drawTile (pixels, stride, x, y, palette, tile, subPalette, verticalFlip, horizontalFlip) {\n    const subPaletteArray = palette.getColors(subPalette)\n    let i, j, px, py, pos, rgbArray\n    for (i = 0; i < 8; ++i) {\n      if (horizontalFlip) {\n        px = x + 7 - i\n      } else {\n        px = x + i\n      }\n      for (j = 0; j < 8; ++j) {\n        rgbArray = subPaletteArray[this.tiles[tile][i][j]]\n        if (verticalFlip) {\n          py = y + 7 - j\n        } else {\n          py = y + j\n        }\n        pos = 4 * px + stride * py\n        pixels[pos + 0] = (rgbArray >> 16) & 0xFF\n        pixels[pos + 1] = (rgbArray >> 8) & 0xFF\n        pixels[pos + 2] = (rgbArray) & 0xFF\n      }\n    }\n    return pixels\n  }\n  /**\n  * Internal function - reads graphics from the specified block and builds\n  * tileset.\n  *\n  * @param block\n  * The block to read graphics data from\n  */\n  loadGraphics (block) {\n    this.gfxROMGraphics = block.decompress()\n    this.buildTiles()\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"export default class ROMGraphics {\n  constructor (bitsPerPixel) {\n    this.bitsPerPixel = bitsPerPixel\n  }\n  /* Internal function - builds the tile array from the graphics buffer. */\n  buildTiles () {\n    const n = this.gfxROMGraphics.length / (8 * this.bitsPerPixel)\n    this.tiles = []\n    for (let i = 0; i < n; ++i) {\n      this.tiles.push(new Array(8))\n      const o = i * 8 * this.bitsPerPixel\n      for (let x = 0; x < 8; ++x) {\n        this.tiles[i][x] = new Array(8)\n        for (let y = 0; y < 8; ++y) {\n          let c = 0\n          for (let bp = 0; bp < this.bitsPerPixel; ++bp) {\n            // NOTE: Such a slight bug! We must Math.floor this value, due to the possibility of a number like 0.5 (which should equal 0).\n            const halfBp = Math.floor(bp / 2)\n            const gfx = this.gfxROMGraphics[o + y * 2 + (halfBp * 16 + (bp & 1))]\n            c += ((gfx & (1 << 7 - x)) >> 7 - x) << bp\n          }\n          this.tiles[i][x][y] = c\n        }\n      }\n    }\n  }\n  /* JNI C code */\n  draw (bmp, palette, arrayROMGraphics) {\n    const data = bmp\n    let block = 0\n    let tile = 0\n    let subPalette = 0\n    let n = 0\n    let b1 = 0\n    let b2 = 0\n    let verticalFlip = false\n    let horizontalFlip = false\n    /* TODO: Hardcoding is bad; how do I get the stride normally? */\n    const stride = 1024\n    /* For each pixel in the 256×256 grid, we need to render the image found in the dump */\n    for (let i = 0; i < 32; ++i) {\n      for (let j = 0; j < 32; ++j) {\n        n = j * 32 + i\n        b1 = arrayROMGraphics[n * 2]\n        b2 = arrayROMGraphics[n * 2 + 1] << 8\n        block = b1 + b2\n        tile = block & 0x3FF\n        verticalFlip = (block & 0x8000) !== 0\n        horizontalFlip = (block & 0x4000) !== 0\n        subPalette = (block >> 10) & 7\n        this.drawTile(data, stride, i * 8, j * 8, palette, tile, subPalette, verticalFlip, horizontalFlip)\n      }\n    }\n    return data\n  }\n  drawTile (pixels, stride, x, y, palette, tile, subPalette, verticalFlip, horizontalFlip) {\n    const subPaletteArray = palette.getColors(subPalette)\n    let i, j, px, py, pos, rgbArray\n    for (i = 0; i < 8; ++i) {\n      if (horizontalFlip) {\n        px = x + 7 - i\n      } else {\n        px = x + i\n      }\n      for (j = 0; j < 8; ++j) {\n        rgbArray = subPaletteArray[this.tiles[tile][i][j]]\n        if (verticalFlip) {\n          py = y + 7 - j\n        } else {\n          py = y + j\n        }\n        pos = 4 * px + stride * py\n        pixels[pos + 0] = (rgbArray >> 16) & 0xFF\n        pixels[pos + 1] = (rgbArray >> 8) & 0xFF\n        pixels[pos + 2] = (rgbArray) & 0xFF\n      }\n    }\n    return pixels\n  }\n  /**\n  * Internal function - reads graphics from the specified block and builds\n  * tileset.\n  *\n  * @param block\n  * The block to read graphics data from\n  */\n  loadGraphics (block) {\n    this.gfxROMGraphics = block.decompress()\n    this.buildTiles()\n  }\n}\n"},{"_content":"import padStart from 'string.prototype.padstart'\nimport BattleBackground from './battle_background'\nimport BackgroundGraphics from './background_graphics'\nimport BackgroundPalette from './background_palette'\nimport Block from './block'\n\nconst MINIMUM_INDEX = 0\nconst MAXIMUM_INDEX = 326\n\nconst UNCOMPRESSED_BLOCK = 0\nconst RUN_LENGTH_ENCODED_BYTE = 1\nconst RUN_LENGTH_ENCODED_SHORT = 2\nconst INCREMENTAL_SEQUENCE = 3\nconst REPEAT_PREVIOUS_DATA = 4\nconst REVERSE_BITS = 5\nconst UNKNOWN_1 = 6\nconst UNKNOWN_2 = 7\nfunction generateReversedBytes () {\n  const reversedBytes = new Int16Array(256)\n  for (let i = 0; i < reversedBytes.length; ++i) {\n    const binary = padStart(i.toString(2), 8, 0)\n    const reversed = [...binary].reverse().join('')\n    const value = Number.parseInt(reversed, 2)\n    reversedBytes[i] = value\n  }\n  return reversedBytes\n}\nconst REVERSED_BYTES = generateReversedBytes()\nexport function snesToHex (address, header = true) {\n  let newAddress = address\n  if (newAddress >= 0x400000 && newAddress < 0x600000) {\n    newAddress -= 0x0\n  } else if (newAddress >= 0xC00000 && newAddress < 0x1000000) {\n    newAddress -= 0xC00000\n  } else {\n    throw new Error(`SNES address out of range: ${newAddress}`)\n  }\n  if (header) {\n    newAddress += 0x200\n  }\n  return newAddress - 0xA0200\n}\nexport function hexToSnes (address, header = true) {\n  let newAddress = address\n  if (header) {\n    newAddress -= 0x200\n  }\n  if (newAddress >= 0 && newAddress < 0x400000) {\n    return newAddress + 0xC00000\n  } else if (newAddress >= 0x400000 && newAddress < 0x600000) {\n    return newAddress\n  } else {\n    throw new Error(`File offset out of range: ${newAddress}`)\n  }\n}\n/**\n* Adds an object to the ROM container.\n*\n* @param o\n* The ROMObject to add\n*/\nfunction add (objects, o) {\n  const constructor = o.constructor\n  if (!objects.has(constructor)) {\n    objects.set(constructor, [])\n  }\n  objects.get(constructor).push(o)\n}\n/**\n* Allocates a writeable block using the Unrestricted storage model. The\n* resulting block may be located anywhere in the ROM.\n*\n*\n* @param size\n* The size, in bytes, required for this block\n* @return A writeable block, or null if allocation failed\n*/\n/**\n* Returns a readable block at the given location. Nominally, should also\n* handle tracking free space depending on the type of read requested.\n* (i. e., an object may be interested in read-only access anywhere, but if\n* an object is reading its own data, it should specify this so the ROM can\n* mark the read data as \"free\")\n*\n* @param location\n* The address from which to read\n*\n* @return A readable block\n*/\nexport function readBlock (location) {\n  // NOTE: there's no address conversion implemented yet;\n  // we're assuming all addresses are file offsets (with header)\n  // For now, just return a readable block; we'll worry about\n  // typing and free space later\n  return new Block(location)\n}\n// Do not try to understand what this is doing. It will hurt you.\n// The only documentation for this decompression routine is a 65816\n// disassembly.\n// This function can return the following error codes:\n//\n// ERROR MEANING\n// -1 Something went wrong\n// -2 I dunno\n// -3 No idea\n// -4 Something went _very_ wrong\n// -5 Bad stuff\n// -6 Out of ninjas error\n// -7 Ask somebody else\n// -8 Unexpected end of data\n/**\n* @param start\n* @param data\n* @param output\n* Must already be allocated with at least enough space\n* @param read\n* \"Out\" parameter which receives the number of bytes of\n* compressed data read\n* @return The size of the decompressed data if successful, null otherwise\n*/\nexport function decompress (start, data, output, read) {\n  const maxLength = output.length\n  let pos = start\n  let bpos = 0\n  let bpos2 = 0\n  let tmp\n  let newRead = read // eslint-disable-line\n  while (data[pos] !== 0xFF) {\n    // Data overflow before end of compressed data\n    if (pos >= data.length) {\n      newRead = pos - start + 1\n      return null\n    }\n    let commandType = data[pos] >> 5\n    let len = (data[pos] & 0x1F) + 1\n    if (commandType === 7) {\n      commandType = (data[pos] & 0x1C) >> 2\n      len = ((data[pos] & 3) << 8) + data[pos + 1] + 1\n      ++pos\n    }\n    // Error: block length would overflow maxLength, or block endpos\n    // negative?\n    if (bpos + len > maxLength || bpos + len < 0) {\n      newRead = pos - start + 1\n      return null\n    }\n    ++pos\n    if (commandType >= 4) {\n      bpos2 = (data[pos] << 8) + data[pos + 1]\n      if (bpos2 >= maxLength || bpos2 < 0) {\n        newRead = pos - start + 1\n        return null\n      }\n      pos += 2\n    }\n    switch (commandType) {\n      case UNCOMPRESSED_BLOCK:\n        while (len-- !== 0) {\n          output[bpos++] = data[pos++]\n        }\n        break\n      case RUN_LENGTH_ENCODED_BYTE:\n        while (len-- !== 0) {\n          output[bpos++] = data[pos]\n        }\n        ++pos\n        break\n      case RUN_LENGTH_ENCODED_SHORT:\n        if (bpos + 2 * len > maxLength || bpos < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = data[pos]\n          output[bpos++] = data[pos + 1]\n        }\n        pos += 2\n        break\n      case INCREMENTAL_SEQUENCE:\n        tmp = data[pos++]\n        while (len-- !== 0) {\n          output[bpos++] = tmp++\n        }\n        break\n      case REPEAT_PREVIOUS_DATA:\n        if (bpos2 + len > maxLength || bpos2 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        for (let i = 0; i < len; ++i) {\n          output[bpos++] = output[bpos2 + i]\n        }\n        break\n      case REVERSE_BITS:\n        if (bpos2 + len > maxLength || bpos2 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = REVERSED_BYTES[output[bpos2++] & 0xFF]\n        }\n        break\n      case UNKNOWN_1:\n        if (bpos2 - len + 1 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = output[bpos2--]\n        }\n        break\n      default:\n      case UNKNOWN_2:\n        newRead = pos - start + 1\n        return null\n    }\n  }\n  newRead = pos - start + 1\n  return output\n}\nexport function getCompressedSize (start, data) {\n  /* I use `var` as a workaround, because babili's transform currently binds it to the wrong scope! */\n  var bpos = 0\n  let pos = start\n  let bpos2 = 0\n  while (data[pos] !== 0xFF) {\n    /* Data overflow before end of compressed data */\n    if (pos >= data.length) {\n      return -8\n    }\n    let commandType = data[pos] >> 5\n    let length = (data[pos] & 0x1F) + 1\n    if (commandType === 7) {\n      commandType = (data[pos] & 0x1C) >> 2\n      length = ((data[pos] & 3) << 8) + (data[pos + 1]) + 1\n      ++pos\n    }\n    if (bpos + length < 0) {\n      return -1\n    }\n    pos++\n    if (commandType >= 4) {\n      bpos2 = (data[pos] << 8) + (data[pos + 1])\n      if (bpos2 < 0) {\n        return -2\n      }\n      pos += 2\n    }\n    switch (commandType) {\n      case UNCOMPRESSED_BLOCK:\n        bpos += length\n        pos += length\n        break\n      case RUN_LENGTH_ENCODED_BYTE:\n        bpos += length\n        ++pos\n        break\n      case RUN_LENGTH_ENCODED_SHORT:\n        if (bpos < 0) {\n          return -3\n        }\n        bpos += 2 * length\n        pos += 2\n        break\n      case INCREMENTAL_SEQUENCE:\n        bpos += length\n        ++pos\n        break\n      case REPEAT_PREVIOUS_DATA:\n        if (bpos2 < 0) {\n          return -4\n        }\n        bpos += length\n        break\n      case REVERSE_BITS:\n        if (bpos2 < 0) {\n          return -5\n        }\n        bpos += length\n        break\n      case UNKNOWN_1:\n        if (bpos2 - length + 1 < 0) {\n          return -6\n        }\n        bpos += length\n        break\n      default:\n      case UNKNOWN_2:\n        return -7\n    }\n  }\n  return bpos\n}\nexport let data\nexport default class ROM {\n  constructor (stream) {\n    data = stream\n    this.objects = new Map()\n\n    /* The only way to determine the bit depth of each BG Palette is to check the bit depth of the backgrounds that use it - so, first we create an array to track Palette bit depths: */\n    const paletteBits = new Int32Array(114)\n    const graphicsBits = new Int32Array(103)\n    for (let i = MINIMUM_INDEX; i <= MAXIMUM_INDEX; ++i) {\n      const background = new BattleBackground(i)\n      add(this.objects, background)\n      /* Now that the background has been read, update the BPP entry for its palette. We can also check to make sure palettes are used consistently: */\n      const palette = background.paletteIndex\n      const bitsPerPixel = background.bitsPerPixel\n      if (paletteBits[palette] && paletteBits[palette] !== bitsPerPixel) {\n        throw new Error('BattleBackground palette Error: Inconsistent bit depth')\n      }\n      paletteBits[palette] = bitsPerPixel\n      graphicsBits[background.graphicsIndex] = bitsPerPixel\n    }\n    /* Now load palettes */\n    for (let i = 0; i < 114; ++i) {\n      add(this.objects, new BackgroundPalette(i, paletteBits[i]))\n    }\n    /* Load graphics */\n    for (let i = 0; i < 103; ++i) {\n      add(this.objects, new BackgroundGraphics(i, graphicsBits[i]))\n    }\n  }\n\n  getObject (constructor, i) {\n    return this.objects.get(constructor)[i]\n  }\n}\n","source":"assets/src/rom/rom.js","raw":"import padStart from 'string.prototype.padstart'\nimport BattleBackground from './battle_background'\nimport BackgroundGraphics from './background_graphics'\nimport BackgroundPalette from './background_palette'\nimport Block from './block'\n\nconst MINIMUM_INDEX = 0\nconst MAXIMUM_INDEX = 326\n\nconst UNCOMPRESSED_BLOCK = 0\nconst RUN_LENGTH_ENCODED_BYTE = 1\nconst RUN_LENGTH_ENCODED_SHORT = 2\nconst INCREMENTAL_SEQUENCE = 3\nconst REPEAT_PREVIOUS_DATA = 4\nconst REVERSE_BITS = 5\nconst UNKNOWN_1 = 6\nconst UNKNOWN_2 = 7\nfunction generateReversedBytes () {\n  const reversedBytes = new Int16Array(256)\n  for (let i = 0; i < reversedBytes.length; ++i) {\n    const binary = padStart(i.toString(2), 8, 0)\n    const reversed = [...binary].reverse().join('')\n    const value = Number.parseInt(reversed, 2)\n    reversedBytes[i] = value\n  }\n  return reversedBytes\n}\nconst REVERSED_BYTES = generateReversedBytes()\nexport function snesToHex (address, header = true) {\n  let newAddress = address\n  if (newAddress >= 0x400000 && newAddress < 0x600000) {\n    newAddress -= 0x0\n  } else if (newAddress >= 0xC00000 && newAddress < 0x1000000) {\n    newAddress -= 0xC00000\n  } else {\n    throw new Error(`SNES address out of range: ${newAddress}`)\n  }\n  if (header) {\n    newAddress += 0x200\n  }\n  return newAddress - 0xA0200\n}\nexport function hexToSnes (address, header = true) {\n  let newAddress = address\n  if (header) {\n    newAddress -= 0x200\n  }\n  if (newAddress >= 0 && newAddress < 0x400000) {\n    return newAddress + 0xC00000\n  } else if (newAddress >= 0x400000 && newAddress < 0x600000) {\n    return newAddress\n  } else {\n    throw new Error(`File offset out of range: ${newAddress}`)\n  }\n}\n/**\n* Adds an object to the ROM container.\n*\n* @param o\n* The ROMObject to add\n*/\nfunction add (objects, o) {\n  const constructor = o.constructor\n  if (!objects.has(constructor)) {\n    objects.set(constructor, [])\n  }\n  objects.get(constructor).push(o)\n}\n/**\n* Allocates a writeable block using the Unrestricted storage model. The\n* resulting block may be located anywhere in the ROM.\n*\n*\n* @param size\n* The size, in bytes, required for this block\n* @return A writeable block, or null if allocation failed\n*/\n/**\n* Returns a readable block at the given location. Nominally, should also\n* handle tracking free space depending on the type of read requested.\n* (i. e., an object may be interested in read-only access anywhere, but if\n* an object is reading its own data, it should specify this so the ROM can\n* mark the read data as \"free\")\n*\n* @param location\n* The address from which to read\n*\n* @return A readable block\n*/\nexport function readBlock (location) {\n  // NOTE: there's no address conversion implemented yet;\n  // we're assuming all addresses are file offsets (with header)\n  // For now, just return a readable block; we'll worry about\n  // typing and free space later\n  return new Block(location)\n}\n// Do not try to understand what this is doing. It will hurt you.\n// The only documentation for this decompression routine is a 65816\n// disassembly.\n// This function can return the following error codes:\n//\n// ERROR MEANING\n// -1 Something went wrong\n// -2 I dunno\n// -3 No idea\n// -4 Something went _very_ wrong\n// -5 Bad stuff\n// -6 Out of ninjas error\n// -7 Ask somebody else\n// -8 Unexpected end of data\n/**\n* @param start\n* @param data\n* @param output\n* Must already be allocated with at least enough space\n* @param read\n* \"Out\" parameter which receives the number of bytes of\n* compressed data read\n* @return The size of the decompressed data if successful, null otherwise\n*/\nexport function decompress (start, data, output, read) {\n  const maxLength = output.length\n  let pos = start\n  let bpos = 0\n  let bpos2 = 0\n  let tmp\n  let newRead = read // eslint-disable-line\n  while (data[pos] !== 0xFF) {\n    // Data overflow before end of compressed data\n    if (pos >= data.length) {\n      newRead = pos - start + 1\n      return null\n    }\n    let commandType = data[pos] >> 5\n    let len = (data[pos] & 0x1F) + 1\n    if (commandType === 7) {\n      commandType = (data[pos] & 0x1C) >> 2\n      len = ((data[pos] & 3) << 8) + data[pos + 1] + 1\n      ++pos\n    }\n    // Error: block length would overflow maxLength, or block endpos\n    // negative?\n    if (bpos + len > maxLength || bpos + len < 0) {\n      newRead = pos - start + 1\n      return null\n    }\n    ++pos\n    if (commandType >= 4) {\n      bpos2 = (data[pos] << 8) + data[pos + 1]\n      if (bpos2 >= maxLength || bpos2 < 0) {\n        newRead = pos - start + 1\n        return null\n      }\n      pos += 2\n    }\n    switch (commandType) {\n      case UNCOMPRESSED_BLOCK:\n        while (len-- !== 0) {\n          output[bpos++] = data[pos++]\n        }\n        break\n      case RUN_LENGTH_ENCODED_BYTE:\n        while (len-- !== 0) {\n          output[bpos++] = data[pos]\n        }\n        ++pos\n        break\n      case RUN_LENGTH_ENCODED_SHORT:\n        if (bpos + 2 * len > maxLength || bpos < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = data[pos]\n          output[bpos++] = data[pos + 1]\n        }\n        pos += 2\n        break\n      case INCREMENTAL_SEQUENCE:\n        tmp = data[pos++]\n        while (len-- !== 0) {\n          output[bpos++] = tmp++\n        }\n        break\n      case REPEAT_PREVIOUS_DATA:\n        if (bpos2 + len > maxLength || bpos2 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        for (let i = 0; i < len; ++i) {\n          output[bpos++] = output[bpos2 + i]\n        }\n        break\n      case REVERSE_BITS:\n        if (bpos2 + len > maxLength || bpos2 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = REVERSED_BYTES[output[bpos2++] & 0xFF]\n        }\n        break\n      case UNKNOWN_1:\n        if (bpos2 - len + 1 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = output[bpos2--]\n        }\n        break\n      default:\n      case UNKNOWN_2:\n        newRead = pos - start + 1\n        return null\n    }\n  }\n  newRead = pos - start + 1\n  return output\n}\nexport function getCompressedSize (start, data) {\n  /* I use `var` as a workaround, because babili's transform currently binds it to the wrong scope! */\n  var bpos = 0\n  let pos = start\n  let bpos2 = 0\n  while (data[pos] !== 0xFF) {\n    /* Data overflow before end of compressed data */\n    if (pos >= data.length) {\n      return -8\n    }\n    let commandType = data[pos] >> 5\n    let length = (data[pos] & 0x1F) + 1\n    if (commandType === 7) {\n      commandType = (data[pos] & 0x1C) >> 2\n      length = ((data[pos] & 3) << 8) + (data[pos + 1]) + 1\n      ++pos\n    }\n    if (bpos + length < 0) {\n      return -1\n    }\n    pos++\n    if (commandType >= 4) {\n      bpos2 = (data[pos] << 8) + (data[pos + 1])\n      if (bpos2 < 0) {\n        return -2\n      }\n      pos += 2\n    }\n    switch (commandType) {\n      case UNCOMPRESSED_BLOCK:\n        bpos += length\n        pos += length\n        break\n      case RUN_LENGTH_ENCODED_BYTE:\n        bpos += length\n        ++pos\n        break\n      case RUN_LENGTH_ENCODED_SHORT:\n        if (bpos < 0) {\n          return -3\n        }\n        bpos += 2 * length\n        pos += 2\n        break\n      case INCREMENTAL_SEQUENCE:\n        bpos += length\n        ++pos\n        break\n      case REPEAT_PREVIOUS_DATA:\n        if (bpos2 < 0) {\n          return -4\n        }\n        bpos += length\n        break\n      case REVERSE_BITS:\n        if (bpos2 < 0) {\n          return -5\n        }\n        bpos += length\n        break\n      case UNKNOWN_1:\n        if (bpos2 - length + 1 < 0) {\n          return -6\n        }\n        bpos += length\n        break\n      default:\n      case UNKNOWN_2:\n        return -7\n    }\n  }\n  return bpos\n}\nexport let data\nexport default class ROM {\n  constructor (stream) {\n    data = stream\n    this.objects = new Map()\n\n    /* The only way to determine the bit depth of each BG Palette is to check the bit depth of the backgrounds that use it - so, first we create an array to track Palette bit depths: */\n    const paletteBits = new Int32Array(114)\n    const graphicsBits = new Int32Array(103)\n    for (let i = MINIMUM_INDEX; i <= MAXIMUM_INDEX; ++i) {\n      const background = new BattleBackground(i)\n      add(this.objects, background)\n      /* Now that the background has been read, update the BPP entry for its palette. We can also check to make sure palettes are used consistently: */\n      const palette = background.paletteIndex\n      const bitsPerPixel = background.bitsPerPixel\n      if (paletteBits[palette] && paletteBits[palette] !== bitsPerPixel) {\n        throw new Error('BattleBackground palette Error: Inconsistent bit depth')\n      }\n      paletteBits[palette] = bitsPerPixel\n      graphicsBits[background.graphicsIndex] = bitsPerPixel\n    }\n    /* Now load palettes */\n    for (let i = 0; i < 114; ++i) {\n      add(this.objects, new BackgroundPalette(i, paletteBits[i]))\n    }\n    /* Load graphics */\n    for (let i = 0; i < 103; ++i) {\n      add(this.objects, new BackgroundGraphics(i, graphicsBits[i]))\n    }\n  }\n\n  getObject (constructor, i) {\n    return this.objects.get(constructor)[i]\n  }\n}\n","date":"2018-10-05T03:49:47.469Z","updated":"2018-10-05T03:49:47.469Z","path":"assets/src/rom/rom.js","layout":"false","title":"","comments":1,"_id":"cjmvj0a68000fvh9klvdeuowm","content":"import padStart from 'string.prototype.padstart'\nimport BattleBackground from './battle_background'\nimport BackgroundGraphics from './background_graphics'\nimport BackgroundPalette from './background_palette'\nimport Block from './block'\n\nconst MINIMUM_INDEX = 0\nconst MAXIMUM_INDEX = 326\n\nconst UNCOMPRESSED_BLOCK = 0\nconst RUN_LENGTH_ENCODED_BYTE = 1\nconst RUN_LENGTH_ENCODED_SHORT = 2\nconst INCREMENTAL_SEQUENCE = 3\nconst REPEAT_PREVIOUS_DATA = 4\nconst REVERSE_BITS = 5\nconst UNKNOWN_1 = 6\nconst UNKNOWN_2 = 7\nfunction generateReversedBytes () {\n  const reversedBytes = new Int16Array(256)\n  for (let i = 0; i < reversedBytes.length; ++i) {\n    const binary = padStart(i.toString(2), 8, 0)\n    const reversed = [...binary].reverse().join('')\n    const value = Number.parseInt(reversed, 2)\n    reversedBytes[i] = value\n  }\n  return reversedBytes\n}\nconst REVERSED_BYTES = generateReversedBytes()\nexport function snesToHex (address, header = true) {\n  let newAddress = address\n  if (newAddress >= 0x400000 && newAddress < 0x600000) {\n    newAddress -= 0x0\n  } else if (newAddress >= 0xC00000 && newAddress < 0x1000000) {\n    newAddress -= 0xC00000\n  } else {\n    throw new Error(`SNES address out of range: ${newAddress}`)\n  }\n  if (header) {\n    newAddress += 0x200\n  }\n  return newAddress - 0xA0200\n}\nexport function hexToSnes (address, header = true) {\n  let newAddress = address\n  if (header) {\n    newAddress -= 0x200\n  }\n  if (newAddress >= 0 && newAddress < 0x400000) {\n    return newAddress + 0xC00000\n  } else if (newAddress >= 0x400000 && newAddress < 0x600000) {\n    return newAddress\n  } else {\n    throw new Error(`File offset out of range: ${newAddress}`)\n  }\n}\n/**\n* Adds an object to the ROM container.\n*\n* @param o\n* The ROMObject to add\n*/\nfunction add (objects, o) {\n  const constructor = o.constructor\n  if (!objects.has(constructor)) {\n    objects.set(constructor, [])\n  }\n  objects.get(constructor).push(o)\n}\n/**\n* Allocates a writeable block using the Unrestricted storage model. The\n* resulting block may be located anywhere in the ROM.\n*\n*\n* @param size\n* The size, in bytes, required for this block\n* @return A writeable block, or null if allocation failed\n*/\n/**\n* Returns a readable block at the given location. Nominally, should also\n* handle tracking free space depending on the type of read requested.\n* (i. e., an object may be interested in read-only access anywhere, but if\n* an object is reading its own data, it should specify this so the ROM can\n* mark the read data as \"free\")\n*\n* @param location\n* The address from which to read\n*\n* @return A readable block\n*/\nexport function readBlock (location) {\n  // NOTE: there's no address conversion implemented yet;\n  // we're assuming all addresses are file offsets (with header)\n  // For now, just return a readable block; we'll worry about\n  // typing and free space later\n  return new Block(location)\n}\n// Do not try to understand what this is doing. It will hurt you.\n// The only documentation for this decompression routine is a 65816\n// disassembly.\n// This function can return the following error codes:\n//\n// ERROR MEANING\n// -1 Something went wrong\n// -2 I dunno\n// -3 No idea\n// -4 Something went _very_ wrong\n// -5 Bad stuff\n// -6 Out of ninjas error\n// -7 Ask somebody else\n// -8 Unexpected end of data\n/**\n* @param start\n* @param data\n* @param output\n* Must already be allocated with at least enough space\n* @param read\n* \"Out\" parameter which receives the number of bytes of\n* compressed data read\n* @return The size of the decompressed data if successful, null otherwise\n*/\nexport function decompress (start, data, output, read) {\n  const maxLength = output.length\n  let pos = start\n  let bpos = 0\n  let bpos2 = 0\n  let tmp\n  let newRead = read // eslint-disable-line\n  while (data[pos] !== 0xFF) {\n    // Data overflow before end of compressed data\n    if (pos >= data.length) {\n      newRead = pos - start + 1\n      return null\n    }\n    let commandType = data[pos] >> 5\n    let len = (data[pos] & 0x1F) + 1\n    if (commandType === 7) {\n      commandType = (data[pos] & 0x1C) >> 2\n      len = ((data[pos] & 3) << 8) + data[pos + 1] + 1\n      ++pos\n    }\n    // Error: block length would overflow maxLength, or block endpos\n    // negative?\n    if (bpos + len > maxLength || bpos + len < 0) {\n      newRead = pos - start + 1\n      return null\n    }\n    ++pos\n    if (commandType >= 4) {\n      bpos2 = (data[pos] << 8) + data[pos + 1]\n      if (bpos2 >= maxLength || bpos2 < 0) {\n        newRead = pos - start + 1\n        return null\n      }\n      pos += 2\n    }\n    switch (commandType) {\n      case UNCOMPRESSED_BLOCK:\n        while (len-- !== 0) {\n          output[bpos++] = data[pos++]\n        }\n        break\n      case RUN_LENGTH_ENCODED_BYTE:\n        while (len-- !== 0) {\n          output[bpos++] = data[pos]\n        }\n        ++pos\n        break\n      case RUN_LENGTH_ENCODED_SHORT:\n        if (bpos + 2 * len > maxLength || bpos < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = data[pos]\n          output[bpos++] = data[pos + 1]\n        }\n        pos += 2\n        break\n      case INCREMENTAL_SEQUENCE:\n        tmp = data[pos++]\n        while (len-- !== 0) {\n          output[bpos++] = tmp++\n        }\n        break\n      case REPEAT_PREVIOUS_DATA:\n        if (bpos2 + len > maxLength || bpos2 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        for (let i = 0; i < len; ++i) {\n          output[bpos++] = output[bpos2 + i]\n        }\n        break\n      case REVERSE_BITS:\n        if (bpos2 + len > maxLength || bpos2 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = REVERSED_BYTES[output[bpos2++] & 0xFF]\n        }\n        break\n      case UNKNOWN_1:\n        if (bpos2 - len + 1 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = output[bpos2--]\n        }\n        break\n      default:\n      case UNKNOWN_2:\n        newRead = pos - start + 1\n        return null\n    }\n  }\n  newRead = pos - start + 1\n  return output\n}\nexport function getCompressedSize (start, data) {\n  /* I use `var` as a workaround, because babili's transform currently binds it to the wrong scope! */\n  var bpos = 0\n  let pos = start\n  let bpos2 = 0\n  while (data[pos] !== 0xFF) {\n    /* Data overflow before end of compressed data */\n    if (pos >= data.length) {\n      return -8\n    }\n    let commandType = data[pos] >> 5\n    let length = (data[pos] & 0x1F) + 1\n    if (commandType === 7) {\n      commandType = (data[pos] & 0x1C) >> 2\n      length = ((data[pos] & 3) << 8) + (data[pos + 1]) + 1\n      ++pos\n    }\n    if (bpos + length < 0) {\n      return -1\n    }\n    pos++\n    if (commandType >= 4) {\n      bpos2 = (data[pos] << 8) + (data[pos + 1])\n      if (bpos2 < 0) {\n        return -2\n      }\n      pos += 2\n    }\n    switch (commandType) {\n      case UNCOMPRESSED_BLOCK:\n        bpos += length\n        pos += length\n        break\n      case RUN_LENGTH_ENCODED_BYTE:\n        bpos += length\n        ++pos\n        break\n      case RUN_LENGTH_ENCODED_SHORT:\n        if (bpos < 0) {\n          return -3\n        }\n        bpos += 2 * length\n        pos += 2\n        break\n      case INCREMENTAL_SEQUENCE:\n        bpos += length\n        ++pos\n        break\n      case REPEAT_PREVIOUS_DATA:\n        if (bpos2 < 0) {\n          return -4\n        }\n        bpos += length\n        break\n      case REVERSE_BITS:\n        if (bpos2 < 0) {\n          return -5\n        }\n        bpos += length\n        break\n      case UNKNOWN_1:\n        if (bpos2 - length + 1 < 0) {\n          return -6\n        }\n        bpos += length\n        break\n      default:\n      case UNKNOWN_2:\n        return -7\n    }\n  }\n  return bpos\n}\nexport let data\nexport default class ROM {\n  constructor (stream) {\n    data = stream\n    this.objects = new Map()\n\n    /* The only way to determine the bit depth of each BG Palette is to check the bit depth of the backgrounds that use it - so, first we create an array to track Palette bit depths: */\n    const paletteBits = new Int32Array(114)\n    const graphicsBits = new Int32Array(103)\n    for (let i = MINIMUM_INDEX; i ","site":{"data":{}},"excerpt":"","more":"import padStart from 'string.prototype.padstart'\nimport BattleBackground from './battle_background'\nimport BackgroundGraphics from './background_graphics'\nimport BackgroundPalette from './background_palette'\nimport Block from './block'\n\nconst MINIMUM_INDEX = 0\nconst MAXIMUM_INDEX = 326\n\nconst UNCOMPRESSED_BLOCK = 0\nconst RUN_LENGTH_ENCODED_BYTE = 1\nconst RUN_LENGTH_ENCODED_SHORT = 2\nconst INCREMENTAL_SEQUENCE = 3\nconst REPEAT_PREVIOUS_DATA = 4\nconst REVERSE_BITS = 5\nconst UNKNOWN_1 = 6\nconst UNKNOWN_2 = 7\nfunction generateReversedBytes () {\n  const reversedBytes = new Int16Array(256)\n  for (let i = 0; i < reversedBytes.length; ++i) {\n    const binary = padStart(i.toString(2), 8, 0)\n    const reversed = [...binary].reverse().join('')\n    const value = Number.parseInt(reversed, 2)\n    reversedBytes[i] = value\n  }\n  return reversedBytes\n}\nconst REVERSED_BYTES = generateReversedBytes()\nexport function snesToHex (address, header = true) {\n  let newAddress = address\n  if (newAddress >= 0x400000 && newAddress < 0x600000) {\n    newAddress -= 0x0\n  } else if (newAddress >= 0xC00000 && newAddress < 0x1000000) {\n    newAddress -= 0xC00000\n  } else {\n    throw new Error(`SNES address out of range: ${newAddress}`)\n  }\n  if (header) {\n    newAddress += 0x200\n  }\n  return newAddress - 0xA0200\n}\nexport function hexToSnes (address, header = true) {\n  let newAddress = address\n  if (header) {\n    newAddress -= 0x200\n  }\n  if (newAddress >= 0 && newAddress < 0x400000) {\n    return newAddress + 0xC00000\n  } else if (newAddress >= 0x400000 && newAddress < 0x600000) {\n    return newAddress\n  } else {\n    throw new Error(`File offset out of range: ${newAddress}`)\n  }\n}\n/**\n* Adds an object to the ROM container.\n*\n* @param o\n* The ROMObject to add\n*/\nfunction add (objects, o) {\n  const constructor = o.constructor\n  if (!objects.has(constructor)) {\n    objects.set(constructor, [])\n  }\n  objects.get(constructor).push(o)\n}\n/**\n* Allocates a writeable block using the Unrestricted storage model. The\n* resulting block may be located anywhere in the ROM.\n*\n*\n* @param size\n* The size, in bytes, required for this block\n* @return A writeable block, or null if allocation failed\n*/\n/**\n* Returns a readable block at the given location. Nominally, should also\n* handle tracking free space depending on the type of read requested.\n* (i. e., an object may be interested in read-only access anywhere, but if\n* an object is reading its own data, it should specify this so the ROM can\n* mark the read data as \"free\")\n*\n* @param location\n* The address from which to read\n*\n* @return A readable block\n*/\nexport function readBlock (location) {\n  // NOTE: there's no address conversion implemented yet;\n  // we're assuming all addresses are file offsets (with header)\n  // For now, just return a readable block; we'll worry about\n  // typing and free space later\n  return new Block(location)\n}\n// Do not try to understand what this is doing. It will hurt you.\n// The only documentation for this decompression routine is a 65816\n// disassembly.\n// This function can return the following error codes:\n//\n// ERROR MEANING\n// -1 Something went wrong\n// -2 I dunno\n// -3 No idea\n// -4 Something went _very_ wrong\n// -5 Bad stuff\n// -6 Out of ninjas error\n// -7 Ask somebody else\n// -8 Unexpected end of data\n/**\n* @param start\n* @param data\n* @param output\n* Must already be allocated with at least enough space\n* @param read\n* \"Out\" parameter which receives the number of bytes of\n* compressed data read\n* @return The size of the decompressed data if successful, null otherwise\n*/\nexport function decompress (start, data, output, read) {\n  const maxLength = output.length\n  let pos = start\n  let bpos = 0\n  let bpos2 = 0\n  let tmp\n  let newRead = read // eslint-disable-line\n  while (data[pos] !== 0xFF) {\n    // Data overflow before end of compressed data\n    if (pos >= data.length) {\n      newRead = pos - start + 1\n      return null\n    }\n    let commandType = data[pos] >> 5\n    let len = (data[pos] & 0x1F) + 1\n    if (commandType === 7) {\n      commandType = (data[pos] & 0x1C) >> 2\n      len = ((data[pos] & 3) << 8) + data[pos + 1] + 1\n      ++pos\n    }\n    // Error: block length would overflow maxLength, or block endpos\n    // negative?\n    if (bpos + len > maxLength || bpos + len < 0) {\n      newRead = pos - start + 1\n      return null\n    }\n    ++pos\n    if (commandType >= 4) {\n      bpos2 = (data[pos] << 8) + data[pos + 1]\n      if (bpos2 >= maxLength || bpos2 < 0) {\n        newRead = pos - start + 1\n        return null\n      }\n      pos += 2\n    }\n    switch (commandType) {\n      case UNCOMPRESSED_BLOCK:\n        while (len-- !== 0) {\n          output[bpos++] = data[pos++]\n        }\n        break\n      case RUN_LENGTH_ENCODED_BYTE:\n        while (len-- !== 0) {\n          output[bpos++] = data[pos]\n        }\n        ++pos\n        break\n      case RUN_LENGTH_ENCODED_SHORT:\n        if (bpos + 2 * len > maxLength || bpos < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = data[pos]\n          output[bpos++] = data[pos + 1]\n        }\n        pos += 2\n        break\n      case INCREMENTAL_SEQUENCE:\n        tmp = data[pos++]\n        while (len-- !== 0) {\n          output[bpos++] = tmp++\n        }\n        break\n      case REPEAT_PREVIOUS_DATA:\n        if (bpos2 + len > maxLength || bpos2 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        for (let i = 0; i < len; ++i) {\n          output[bpos++] = output[bpos2 + i]\n        }\n        break\n      case REVERSE_BITS:\n        if (bpos2 + len > maxLength || bpos2 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = REVERSED_BYTES[output[bpos2++] & 0xFF]\n        }\n        break\n      case UNKNOWN_1:\n        if (bpos2 - len + 1 < 0) {\n          newRead = pos - start + 1\n          return null\n        }\n        while (len-- !== 0) {\n          output[bpos++] = output[bpos2--]\n        }\n        break\n      default:\n      case UNKNOWN_2:\n        newRead = pos - start + 1\n        return null\n    }\n  }\n  newRead = pos - start + 1\n  return output\n}\nexport function getCompressedSize (start, data) {\n  /* I use `var` as a workaround, because babili's transform currently binds it to the wrong scope! */\n  var bpos = 0\n  let pos = start\n  let bpos2 = 0\n  while (data[pos] !== 0xFF) {\n    /* Data overflow before end of compressed data */\n    if (pos >= data.length) {\n      return -8\n    }\n    let commandType = data[pos] >> 5\n    let length = (data[pos] & 0x1F) + 1\n    if (commandType === 7) {\n      commandType = (data[pos] & 0x1C) >> 2\n      length = ((data[pos] & 3) << 8) + (data[pos + 1]) + 1\n      ++pos\n    }\n    if (bpos + length < 0) {\n      return -1\n    }\n    pos++\n    if (commandType >= 4) {\n      bpos2 = (data[pos] << 8) + (data[pos + 1])\n      if (bpos2 < 0) {\n        return -2\n      }\n      pos += 2\n    }\n    switch (commandType) {\n      case UNCOMPRESSED_BLOCK:\n        bpos += length\n        pos += length\n        break\n      case RUN_LENGTH_ENCODED_BYTE:\n        bpos += length\n        ++pos\n        break\n      case RUN_LENGTH_ENCODED_SHORT:\n        if (bpos < 0) {\n          return -3\n        }\n        bpos += 2 * length\n        pos += 2\n        break\n      case INCREMENTAL_SEQUENCE:\n        bpos += length\n        ++pos\n        break\n      case REPEAT_PREVIOUS_DATA:\n        if (bpos2 < 0) {\n          return -4\n        }\n        bpos += length\n        break\n      case REVERSE_BITS:\n        if (bpos2 < 0) {\n          return -5\n        }\n        bpos += length\n        break\n      case UNKNOWN_1:\n        if (bpos2 - length + 1 < 0) {\n          return -6\n        }\n        bpos += length\n        break\n      default:\n      case UNKNOWN_2:\n        return -7\n    }\n  }\n  return bpos\n}\nexport let data\nexport default class ROM {\n  constructor (stream) {\n    data = stream\n    this.objects = new Map()\n\n    /* The only way to determine the bit depth of each BG Palette is to check the bit depth of the backgrounds that use it - so, first we create an array to track Palette bit depths: */\n    const paletteBits = new Int32Array(114)\n    const graphicsBits = new Int32Array(103)\n    for (let i = MINIMUM_INDEX; i "},{"_content":"\n.icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe800;&nbsp;'); }\n.icon-cancel { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe801;&nbsp;'); }\n.icon-down-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe802;&nbsp;'); }\n.icon-left-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe803;&nbsp;'); }\n.icon-right-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe804;&nbsp;'); }\n.icon-up-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe805;&nbsp;'); }\n.icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;&nbsp;'); }\n.icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;&nbsp;'); }\n.icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;&nbsp;'); }\n.icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;&nbsp;'); }\n.icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;&nbsp;'); }\n.icon-spotify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1bc;&nbsp;'); }\n.icon-git { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1d3;&nbsp;'); }\n.icon-lastfm { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf202;&nbsp;'); }","source":"assets/css/fontello/css/fontello-ie7-codes.css","raw":"\n.icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe800;&nbsp;'); }\n.icon-cancel { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe801;&nbsp;'); }\n.icon-down-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe802;&nbsp;'); }\n.icon-left-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe803;&nbsp;'); }\n.icon-right-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe804;&nbsp;'); }\n.icon-up-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe805;&nbsp;'); }\n.icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;&nbsp;'); }\n.icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;&nbsp;'); }\n.icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;&nbsp;'); }\n.icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;&nbsp;'); }\n.icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;&nbsp;'); }\n.icon-spotify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1bc;&nbsp;'); }\n.icon-git { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1d3;&nbsp;'); }\n.icon-lastfm { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf202;&nbsp;'); }","date":"2018-10-05T03:49:47.452Z","updated":"2018-10-05T03:49:47.452Z","path":"assets/css/fontello/css/fontello-ie7-codes.css","layout":"false","title":"","comments":1,"_id":"cjmvj0a6b000gvh9k20se620e","content":"\n.icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe800;&nbsp;'); }\n.icon-cancel { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe801;&nbsp;'); }\n.icon-down-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe802;&nbsp;'); }\n.icon-left-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe803;&nbsp;'); }\n.icon-right-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe804;&nbsp;'); }\n.icon-up-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe805;&nbsp;'); }\n.icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;&nbsp;'); }\n.icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;&nbsp;'); }\n.icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;&nbsp;'); }\n.icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;&nbsp;'); }\n.icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;&nbsp;'); }\n.icon-spotify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1bc;&nbsp;'); }\n.icon-git { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1d3;&nbsp;'); }\n.icon-lastfm { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf202;&nbsp;'); }","site":{"data":{}},"excerpt":"","more":"\n.icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe800;&nbsp;'); }\n.icon-cancel { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe801;&nbsp;'); }\n.icon-down-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe802;&nbsp;'); }\n.icon-left-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe803;&nbsp;'); }\n.icon-right-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe804;&nbsp;'); }\n.icon-up-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe805;&nbsp;'); }\n.icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;&nbsp;'); }\n.icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;&nbsp;'); }\n.icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;&nbsp;'); }\n.icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;&nbsp;'); }\n.icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;&nbsp;'); }\n.icon-spotify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1bc;&nbsp;'); }\n.icon-git { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1d3;&nbsp;'); }\n.icon-lastfm { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf202;&nbsp;'); }"},{"_content":"/*\n   Animation example, for spinners\n*/\n.animate-spin {\n  -moz-animation: spin 2s infinite linear;\n  -o-animation: spin 2s infinite linear;\n  -webkit-animation: spin 2s infinite linear;\n  animation: spin 2s infinite linear;\n  display: inline-block;\n}\n@-moz-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-webkit-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-o-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-ms-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n","source":"assets/css/fontello/css/animation.css","raw":"/*\n   Animation example, for spinners\n*/\n.animate-spin {\n  -moz-animation: spin 2s infinite linear;\n  -o-animation: spin 2s infinite linear;\n  -webkit-animation: spin 2s infinite linear;\n  animation: spin 2s infinite linear;\n  display: inline-block;\n}\n@-moz-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-webkit-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-o-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-ms-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n","date":"2018-10-05T03:49:47.451Z","updated":"2018-10-05T03:49:47.451Z","path":"assets/css/fontello/css/animation.css","layout":"false","title":"","comments":1,"_id":"cjmvj0a6c000hvh9kovqkweqa","content":"/*\n   Animation example, for spinners\n*/\n.animate-spin {\n  -moz-animation: spin 2s infinite linear;\n  -o-animation: spin 2s infinite linear;\n  -webkit-animation: spin 2s infinite linear;\n  animation: spin 2s infinite linear;\n  display: inline-block;\n}\n@-moz-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-webkit-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-o-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-ms-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n","site":{"data":{}},"excerpt":"","more":"/*\n   Animation example, for spinners\n*/\n.animate-spin {\n  -moz-animation: spin 2s infinite linear;\n  -o-animation: spin 2s infinite linear;\n  -webkit-animation: spin 2s infinite linear;\n  animation: spin 2s infinite linear;\n  display: inline-block;\n}\n@-moz-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-webkit-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-o-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-ms-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n"},{"_content":"@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?24761951');\n  src: url('../font/fontello.eot?24761951#iefix') format('embedded-opentype'),\n       url('../font/fontello.svg?24761951#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'fontello';\n  src: url('data:application/octet-stream;base64,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') format('woff'),\n       url('data:application/octet-stream;base64,') format('truetype');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?24761951#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n     \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","source":"assets/css/fontello/css/fontello-embedded.css","raw":"@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?24761951');\n  src: url('../font/fontello.eot?24761951#iefix') format('embedded-opentype'),\n       url('../font/fontello.svg?24761951#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'fontello';\n  src: url('data:application/octet-stream;base64,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') format('woff'),\n       url('data:application/octet-stream;base64,') format('truetype');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?24761951#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n     \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","date":"2018-10-05T03:49:47.452Z","updated":"2018-10-05T03:49:47.452Z","path":"assets/css/fontello/css/fontello-embedded.css","layout":"false","title":"","comments":1,"_id":"cjmvj0a6d000ivh9kpp4y2q7k","content":"@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?24761951');\n  src: url('../font/fontello.eot?24761951#iefix') format('embedded-opentype'),\n       url('../font/fontello.svg?24761951#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'fontello';\n  src: url('data:application/octet-stream;base64,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') format('woff'),\n       url('data:application/octet-stream;base64,') format('truetype');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?24761951#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n     \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","site":{"data":{}},"excerpt":"","more":"@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?24761951');\n  src: url('../font/fontello.eot?24761951#iefix') format('embedded-opentype'),\n       url('../font/fontello.svg?24761951#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n@font-face {\n  font-family: 'fontello';\n  src: url('data:application/octet-stream;base64,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') format('woff'),\n       url('data:application/octet-stream;base64,') format('truetype');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?24761951#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n     \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */"},{"_content":"\n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","source":"assets/css/fontello/css/fontello-codes.css","raw":"\n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","date":"2018-10-05T03:49:47.452Z","updated":"2018-10-05T03:49:47.452Z","path":"assets/css/fontello/css/fontello-codes.css","layout":"false","title":"","comments":1,"_id":"cjmvj0a6e000jvh9kxcfp2f13","content":"\n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","site":{"data":{}},"excerpt":"","more":"\n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */"},{"_content":"@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?65165852');\n  src: url('../font/fontello.eot?65165852#iefix') format('embedded-opentype'),\n       url('../font/fontello.woff2?65165852') format('woff2'),\n       url('../font/fontello.woff?65165852') format('woff'),\n       url('../font/fontello.ttf?65165852') format('truetype'),\n       url('../font/fontello.svg?65165852#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?65165852#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n \n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","source":"assets/css/fontello/css/fontello.css","raw":"@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?65165852');\n  src: url('../font/fontello.eot?65165852#iefix') format('embedded-opentype'),\n       url('../font/fontello.woff2?65165852') format('woff2'),\n       url('../font/fontello.woff?65165852') format('woff'),\n       url('../font/fontello.ttf?65165852') format('truetype'),\n       url('../font/fontello.svg?65165852#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?65165852#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n \n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","date":"2018-10-05T03:49:47.453Z","updated":"2018-10-05T03:49:47.453Z","path":"assets/css/fontello/css/fontello.css","layout":"false","title":"","comments":1,"_id":"cjmvj0a6e000kvh9kzxqk23lb","content":"@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?65165852');\n  src: url('../font/fontello.eot?65165852#iefix') format('embedded-opentype'),\n       url('../font/fontello.woff2?65165852') format('woff2'),\n       url('../font/fontello.woff?65165852') format('woff'),\n       url('../font/fontello.ttf?65165852') format('truetype'),\n       url('../font/fontello.svg?65165852#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?65165852#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n \n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */","site":{"data":{}},"excerpt":"","more":"@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?65165852');\n  src: url('../font/fontello.eot?65165852#iefix') format('embedded-opentype'),\n       url('../font/fontello.woff2?65165852') format('woff2'),\n       url('../font/fontello.woff?65165852') format('woff'),\n       url('../font/fontello.ttf?65165852') format('truetype'),\n       url('../font/fontello.svg?65165852#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?65165852#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n \n.icon-ok:before { content: '\\e800'; } /* '' */\n.icon-cancel:before { content: '\\e801'; } /* '' */\n.icon-down-open:before { content: '\\e802'; } /* '' */\n.icon-left-open:before { content: '\\e803'; } /* '' */\n.icon-right-open:before { content: '\\e804'; } /* '' */\n.icon-up-open:before { content: '\\e805'; } /* '' */\n.icon-twitter:before { content: '\\f099'; } /* '' */\n.icon-facebook:before { content: '\\f09a'; } /* '' */\n.icon-linkedin:before { content: '\\f0e1'; } /* '' */\n.icon-instagram:before { content: '\\f16d'; } /* '' */\n.icon-tumblr:before { content: '\\f173'; } /* '' */\n.icon-spotify:before { content: '\\f1bc'; } /* '' */\n.icon-git:before { content: '\\f1d3'; } /* '' */\n.icon-lastfm:before { content: '\\f202'; } /* '' */"},{"_content":"[class^=\"icon-\"], [class*=\" icon-\"] {\n  font-family: 'fontello';\n  font-style: normal;\n  font-weight: normal;\n \n  /* fix buttons height */\n  line-height: 1em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n}\n \n.icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe800;&nbsp;'); }\n.icon-cancel { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe801;&nbsp;'); }\n.icon-down-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe802;&nbsp;'); }\n.icon-left-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe803;&nbsp;'); }\n.icon-right-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe804;&nbsp;'); }\n.icon-up-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe805;&nbsp;'); }\n.icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;&nbsp;'); }\n.icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;&nbsp;'); }\n.icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;&nbsp;'); }\n.icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;&nbsp;'); }\n.icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;&nbsp;'); }\n.icon-spotify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1bc;&nbsp;'); }\n.icon-git { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1d3;&nbsp;'); }\n.icon-lastfm { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf202;&nbsp;'); }","source":"assets/css/fontello/css/fontello-ie7.css","raw":"[class^=\"icon-\"], [class*=\" icon-\"] {\n  font-family: 'fontello';\n  font-style: normal;\n  font-weight: normal;\n \n  /* fix buttons height */\n  line-height: 1em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n}\n \n.icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe800;&nbsp;'); }\n.icon-cancel { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe801;&nbsp;'); }\n.icon-down-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe802;&nbsp;'); }\n.icon-left-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe803;&nbsp;'); }\n.icon-right-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe804;&nbsp;'); }\n.icon-up-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe805;&nbsp;'); }\n.icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;&nbsp;'); }\n.icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;&nbsp;'); }\n.icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;&nbsp;'); }\n.icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;&nbsp;'); }\n.icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;&nbsp;'); }\n.icon-spotify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1bc;&nbsp;'); }\n.icon-git { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1d3;&nbsp;'); }\n.icon-lastfm { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf202;&nbsp;'); }","date":"2018-10-05T03:49:47.453Z","updated":"2018-10-05T03:49:47.453Z","path":"assets/css/fontello/css/fontello-ie7.css","layout":"false","title":"","comments":1,"_id":"cjmvj0a6f000lvh9k3vz9a1a7","content":"[class^=\"icon-\"], [class*=\" icon-\"] {\n  font-family: 'fontello';\n  font-style: normal;\n  font-weight: normal;\n \n  /* fix buttons height */\n  line-height: 1em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n}\n \n.icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe800;&nbsp;'); }\n.icon-cancel { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe801;&nbsp;'); }\n.icon-down-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe802;&nbsp;'); }\n.icon-left-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe803;&nbsp;'); }\n.icon-right-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe804;&nbsp;'); }\n.icon-up-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe805;&nbsp;'); }\n.icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;&nbsp;'); }\n.icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;&nbsp;'); }\n.icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;&nbsp;'); }\n.icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;&nbsp;'); }\n.icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;&nbsp;'); }\n.icon-spotify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1bc;&nbsp;'); }\n.icon-git { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1d3;&nbsp;'); }\n.icon-lastfm { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf202;&nbsp;'); }","site":{"data":{}},"excerpt":"","more":"[class^=\"icon-\"], [class*=\" icon-\"] {\n  font-family: 'fontello';\n  font-style: normal;\n  font-weight: normal;\n \n  /* fix buttons height */\n  line-height: 1em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n}\n \n.icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe800;&nbsp;'); }\n.icon-cancel { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe801;&nbsp;'); }\n.icon-down-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe802;&nbsp;'); }\n.icon-left-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe803;&nbsp;'); }\n.icon-right-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe804;&nbsp;'); }\n.icon-up-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xe805;&nbsp;'); }\n.icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;&nbsp;'); }\n.icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;&nbsp;'); }\n.icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;&nbsp;'); }\n.icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;&nbsp;'); }\n.icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;&nbsp;'); }\n.icon-spotify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1bc;&nbsp;'); }\n.icon-git { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf1d3;&nbsp;'); }\n.icon-lastfm { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf202;&nbsp;'); }"}],"Post":[{"title":"post","date":"2017-09-14T15:50:17.000Z","_content":"","source":"_posts/post.md","raw":"---\ntitle: post\ndate: 2017-09-14 09:50:17\ntags:\n---\n","slug":"post","published":1,"updated":"2017-09-18T22:38:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmvj0a4g0001vh9kppa3yebo","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}